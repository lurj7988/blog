import{_ as o}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as l,c as i,b as n,d as s,f as e,e as t}from"./app-1eba27bc.js";const c={},u=t('<h2 id="参数详解" tabindex="-1"><a class="header-anchor" href="#参数详解" aria-hidden="true">#</a> 参数详解</h2><table><thead><tr><th>参数名称</th><th>参数说明</th></tr></thead><tbody><tr><td>-XX:+PrintGCDetails</td><td>输出GC的详细日志</td></tr><tr><td>-XX:+PrintGCTimeStamps</td><td>输出GC的时间戳（以基准时间的形式）</td></tr><tr><td>-Xloggc:../logs/gc.log</td><td>此参数主要定义GC Log 的详细信息。</td></tr><tr><td>-XX:UseGCLogFileRotation</td><td>Enabled GC log rotation, requires -Xloggc.</td></tr><tr><td>-XX:NumberOfGCLogFiles=5</td><td>Set the number of files to use when rotating logs, must be &gt;= 1.<br>The rotated log files will use the following naming scheme, <code>&lt;filename&gt;.0</code>, <code>&lt;filename&gt;.1</code>, ..., <code>&lt;filename&gt;.n-1.</code></td></tr><tr><td>-XX:GCLogFileSize=100M</td><td>The size of the log file at which point the log will be rotated, must be &gt;= 8K.</td></tr></tbody></table><h2 id="源码解析" tabindex="-1"><a class="header-anchor" href="#源码解析" aria-hidden="true">#</a> 源码解析</h2>',3),r={href:"https://github.com/openjdk/jdk8u/blob/jdk8u312-b07/hotspot/src/share/vm/runtime/arguments.cpp",target:"_blank",rel:"noopener noreferrer"},d=t(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token comment">// check if do gclog rotation</span>
<span class="token comment">// +UseGCLogFileRotation is a must,</span>
<span class="token comment">// no gc log rotation when log file not supplied or</span>
<span class="token comment">// NumberOfGCLogFiles is 0</span>
<span class="token keyword">void</span> <span class="token function">check_gclog_consistency</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>UseGCLogFileRotation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>Arguments<span class="token operator">::</span><span class="token function">gc_log_filename</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>NumberOfGCLogFiles <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token function">jio_fprintf</span><span class="token punctuation">(</span>defaultStream<span class="token operator">::</span><span class="token function">output_stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                  <span class="token string">&quot;To enable GC log rotation, use -Xloggc:&lt;filename&gt; -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=&lt;num_of_files&gt;\\n&quot;</span>
                  <span class="token string">&quot;where num_of_file &gt; 0\\n&quot;</span>
                  <span class="token string">&quot;GC log rotation is turned off\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
      UseGCLogFileRotation <span class="token operator">=</span> false<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>UseGCLogFileRotation <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>GCLogFileSize <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span>GCLogFileSize <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token operator">*</span>K<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">FLAG_SET_CMDLINE</span><span class="token punctuation">(</span>uintx<span class="token punctuation">,</span> GCLogFileSize<span class="token punctuation">,</span> <span class="token number">8</span><span class="token operator">*</span>K<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">jio_fprintf</span><span class="token punctuation">(</span>defaultStream<span class="token operator">::</span><span class="token function">output_stream</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                <span class="token string">&quot;GCLogFileSize changed to minimum 8K\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1),k={href:"https://github.com/openjdk/jdk8u/blob/jdk8u312-b07/hotspot/src/share/vm/utilities/ostream.cpp",target:"_blank",rel:"noopener noreferrer"},g=t(`<div class="language-c line-numbers-mode" data-ext="c"><pre class="language-c"><code><span class="token keyword">void</span> gcLogFileStream<span class="token operator">::</span><span class="token function">rotate_log_impl</span><span class="token punctuation">(</span>bool force<span class="token punctuation">,</span> outputStream<span class="token operator">*</span> out<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>NumberOfGCLogFiles <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// rotate in same file</span>
    <span class="token function">rewind</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _bytes_written <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
    <span class="token function">jio_snprintf</span><span class="token punctuation">(</span>time_msg<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>time_msg<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;File  %s rotated at %s\\n&quot;</span><span class="token punctuation">,</span>
                 _file_name<span class="token punctuation">,</span> os<span class="token operator">::</span><span class="token function">local_time_string</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span>time_str<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>time_str<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token function">write</span><span class="token punctuation">(</span>time_msg<span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span>time_msg<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>out <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      out<span class="token operator">-&gt;</span><span class="token function">print</span><span class="token punctuation">(</span><span class="token string">&quot;%s&quot;</span><span class="token punctuation">,</span> time_msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>

    <span class="token function">dump_loggc_header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>    
  <span class="token comment">// rotate file in names extended_filename.0, extended_filename.1, ...,</span>
  <span class="token comment">// extended_filename.&lt;NumberOfGCLogFiles - 1&gt;. Current rotation file name will</span>
  <span class="token comment">// have a form of extended_filename.&lt;i&gt;.current where i is the current rotation</span>
  <span class="token comment">// file number. After it reaches max file size, the file will be saved and renamed</span>
  <span class="token comment">// with .current removed from its tail.</span>
  _cur_file_num<span class="token operator">++</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>_cur_file_num <span class="token operator">&gt;</span> NumberOfGCLogFiles <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> _cur_file_num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token function">jio_snprintf</span><span class="token punctuation">(</span>current_file_name<span class="token punctuation">,</span>  JVM_MAXPATHLEN<span class="token punctuation">,</span> <span class="token string">&quot;%s.%d&quot;</span> CURRENTAPPX<span class="token punctuation">,</span>
               _file_name<span class="token punctuation">,</span> _cur_file_num<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>result <span class="token operator">&gt;=</span> JVM_MAXPATHLEN<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot create new log file name: %s: file name is too long.\\n&quot;</span><span class="token punctuation">,</span> current_file_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>  

gcLogFileStream<span class="token operator">::</span><span class="token function">gcLogFileStream</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> file_name<span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token function">_file_lock</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  _cur_file_num <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
  _bytes_written <span class="token operator">=</span> <span class="token number">0L</span><span class="token punctuation">;</span>
  _file_name <span class="token operator">=</span> <span class="token function">make_log_name</span><span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>_file_name <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot open file %s: file name is too long.\\n&quot;</span><span class="token punctuation">,</span> file_name<span class="token punctuation">)</span><span class="token punctuation">;</span>
    _need_close <span class="token operator">=</span> false<span class="token punctuation">;</span>
    UseGCLogFileRotation <span class="token operator">=</span> false<span class="token punctuation">;</span>
    <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>

  <span class="token comment">// gc log file rotation</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>UseGCLogFileRotation <span class="token operator">&amp;&amp;</span> NumberOfGCLogFiles <span class="token operator">&gt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">char</span> tempbuf<span class="token punctuation">[</span>JVM_MAXPATHLEN<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">jio_snprintf</span><span class="token punctuation">(</span>tempbuf<span class="token punctuation">,</span> <span class="token keyword">sizeof</span><span class="token punctuation">(</span>tempbuf<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&quot;%s.%d&quot;</span> CURRENTAPPX<span class="token punctuation">,</span> _file_name<span class="token punctuation">,</span> _cur_file_num<span class="token punctuation">)</span><span class="token punctuation">;</span>
    _file <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span>tempbuf<span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    _file <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span>_file_name<span class="token punctuation">,</span> <span class="token string">&quot;w&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>_file <span class="token operator">!=</span> <span class="token constant">NULL</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    _need_close <span class="token operator">=</span> true<span class="token punctuation">;</span>
    <span class="token function">dump_loggc_header</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>UseGCLogFileRotation<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      _file_lock <span class="token operator">=</span> new <span class="token function">Mutex</span><span class="token punctuation">(</span>Mutex<span class="token operator">::</span>leaf<span class="token punctuation">,</span> <span class="token string">&quot;GCLogFile&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token function">warning</span><span class="token punctuation">(</span><span class="token string">&quot;Cannot open file %s due to %s\\n&quot;</span><span class="token punctuation">,</span> _file_name<span class="token punctuation">,</span> <span class="token function">strerror</span><span class="token punctuation">(</span>errno<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    _need_close <span class="token operator">=</span> false<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="try-to-avoid-xx-usegclogfilerotation" tabindex="-1"><a class="header-anchor" href="#try-to-avoid-xx-usegclogfilerotation" aria-hidden="true">#</a> Try to avoid -XX:+UseGCLogFileRotation</h2><p>Developers take advantage of the JVM argument -XX:+UseGCLogFileRotation to rotate GC log files.</p><p>Example:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>-XX:+PrintGCDetails 
-XX:+PrintGCDateStamps 
-Xloggc:../logs/gc.log
-XX:+UseGCLogFileRotation 
-XX:NumberOfGCLogFiles=5 
-XX:GCLogFileSize=100M
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>As shown above, the JVM will rotate the GC log file whenever its size reaches 20MB. It will generate up to five files, with extensions <code>gc.log.0</code>, <code>gc.log.1</code>, <code>gc.log.2</code>, <code>gc.log.3</code>, and <code>gc.log.4</code>.</p><p>But this approach has a few challenges:</p><h3 id="a-losing-old-gc-logs" tabindex="-1"><a class="header-anchor" href="#a-losing-old-gc-logs" aria-hidden="true">#</a> a.Losing Old GC Logs</h3><p>Suppose you configured <code>-XX:NumberOfGCLogFiles=5</code>, then over a period of time, five GC log files will be created:</p><ul><li>gc.log.0 ← oldest GC Log content</li><li>gc.log.1</li><li>gc.log.2</li><li>gc.log.3</li><li>gc.log.4 ← latest GC Log content</li></ul><p>The most recent GC log contents will be written to <code>gc.log.4</code> and old GC log contents will be present in <code>gc.log.0</code>.</p><p>When the application starts to generate more GC logs than the configured <code>-XX:NumberOfGCLogFiles</code>, in this case, five, then old GC log contents in <code>gc.log.0</code> will be deleted. New GC events will be written to <code>gc.log.0</code>. It means that you will end up not having all the generated GC logs. You will lose the visibility of all events.</p><h3 id="b-mixed-up-gc-logs" tabindex="-1"><a class="header-anchor" href="#b-mixed-up-gc-logs" aria-hidden="true">#</a> b.Mixed-Up GC Logs</h3><p>Suppose an application has created five GC log files, including:</p><ul><li>gc.log.0</li><li>gc.log.1</li><li>gc.log.2</li><li>gc.log.3</li><li>gc.log.4</li></ul><p>Then, let’s say you are restarting the application. Now, new GC logs will be written to <code>gc.log.0</code> file and old GC log content will be present in <code>gc.log.1</code>, <code>gc.log.2</code>, <code>gc.log.3</code>, <code>gc.log.4</code>, etc.</p><ul><li>gc.log.0 ← GC log file content after restart</li><li>gc.log.1 ← GC log file content before restart</li><li>gc.log.2 ← GC log file content before restart</li><li>gc.log.3 ← GC log file content before restart</li><li>gc.log.4 ← GC log file content before restart</li></ul><p>So, your new GC log contents get mixed up with old GC logs. Thus, to mitigate this problem, you might have to move all the old GC logs to a different folder before you restart the application.</p><h3 id="c-forwarding-gc-logs-to-a-central-location" tabindex="-1"><a class="header-anchor" href="#c-forwarding-gc-logs-to-a-central-location" aria-hidden="true">#</a> c.Forwarding GC Logs to a Central Location</h3><p>In this approach, the current active file to which GC logs are written is marked with the extension <code>.current</code>. For example, if GC events are currently written to the file <code>gc.log.3</code>, it would be named as: <code>gc.log.3.current</code>.</p>`,20),m=n("code",null,"rsyslog",-1),v=n("code",null,"rsyslog",-1),f={href:"https://www.planetcobalt.net/sdb/forward_gc_logs.shtml",target:"_blank",rel:"noopener noreferrer"},b=n("h3",{id:"d-tooling",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#d-tooling","aria-hidden":"true"},"#"),s(" d.Tooling")],-1),h={href:"https://gceasy.io/",target:"_blank",rel:"noopener noreferrer"},_=t(`<h2 id="recommended-solution" tabindex="-1"><a class="header-anchor" href="#recommended-solution" aria-hidden="true">#</a> Recommended Solution</h2><p>We can suffix the GC log file with the time stamp at which the JVM was restarted, then the GC Log file locations will become unique. Then, new GC logs will not override the old GC logs. It can be achieved by suffixing <code>%t</code> to the GC log file name, as shown below:</p><div class="language-txt line-numbers-mode" data-ext="txt"><pre class="language-txt"><code>-XX:+PrintGCDetails 
-XX:+PrintGCDateStamps 
-Xloggc:../logs/gc-%t.log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>%t</code> suffixes timestamp to the GC log file in the format: <code>YYYY-MM-DD_HH-MM-SS</code>. So, the generated GC log file name will start to look like: <code>gc-2019-01-29_20-41-47.log</code>.</p><p>This simple solution addresses all the shortcomings of <code>-XX:+UseGCLogFileRotation</code>.</p>`,5),w={href:"https://dzone.com/articles/try-to-avoid-xxusegclogfilerotation",target:"_blank",rel:"noopener noreferrer"};function C(G,L){const a=p("ExternalLinkIcon");return l(),i("div",null,[u,n("p",null,[n("a",r,[s("arguments.cpp"),e(a)])]),d,n("p",null,[n("a",k,[s("ostream.cpp"),e(a)])]),g,n("p",null,[s("If you want to forward GC logs from each server to a central location, then most DevOps engineers use "),m,s(". However, this file naming convention poses a significant challenge to use "),v,s(", as "),n("a",f,[s("described in this blog"),e(a)]),s(".")]),b,n("p",null,[s("Now, to analyze the GC log file using the GC tools such as ("),n("a",h,[s("GCeasy"),e(a)]),s(", GCViewer, etc.), you will have to upload multiple GC log files instead of just one single GC Log file.")]),_,n("p",null,[n("a",w,[s("参考原文"),e(a)])])])}const X=o(c,[["render",C],["__file","gc.html.vue"]]);export{X as default};
