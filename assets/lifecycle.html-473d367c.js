const e=JSON.parse('{"key":"v-76945eec","path":"/backend/java/maven/lifecycle.html","title":"lifecycle","lang":"zh-CN","frontmatter":{"title":"lifecycle","icon":"markdown","order":1,"date":"2023-05-26T00:00:00.000Z","category":["后端技术"],"tag":["maven"],"description":"Maven的生命周期就是为了对所有的构建过程进行抽象和统一。在大量项目的构建过程中，Maven总结出了一套高度完善的，易于扩展的生命周期，包括项目的清理，初始化，编译，测试，打包，集成测试，验证，部署和生成站点等构建步骤。在我们日常的maven使用中，一条条简单的命令，mvn clean, mvn package等都是在执行Maven的某个生命周期阶段。 Maven提供了三套独立的生命周期：default,clean,和site，接下来我们分别介绍三套生命周期。","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/backend/java/maven/lifecycle.html"}],["meta",{"property":"og:site_name","content":"Original Tech"}],["meta",{"property":"og:title","content":"lifecycle"}],["meta",{"property":"og:description","content":"Maven的生命周期就是为了对所有的构建过程进行抽象和统一。在大量项目的构建过程中，Maven总结出了一套高度完善的，易于扩展的生命周期，包括项目的清理，初始化，编译，测试，打包，集成测试，验证，部署和生成站点等构建步骤。在我们日常的maven使用中，一条条简单的命令，mvn clean, mvn package等都是在执行Maven的某个生命周期阶段。 Maven提供了三套独立的生命周期：default,clean,和site，接下来我们分别介绍三套生命周期。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-30T10:19:02.000Z"}],["meta",{"property":"article:author","content":"lurj"}],["meta",{"property":"article:tag","content":"maven"}],["meta",{"property":"article:published_time","content":"2023-05-26T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-30T10:19:02.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"lifecycle\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-05-26T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-30T10:19:02.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lurj\\",\\"url\\":\\"https://www.lurj7988.cn\\"}]}"]]},"headers":[{"level":2,"title":"default生命周期","slug":"default生命周期","link":"#default生命周期","children":[{"level":3,"title":"Plugin bindings for pom packaging","slug":"plugin-bindings-for-pom-packaging","link":"#plugin-bindings-for-pom-packaging","children":[]},{"level":3,"title":"Plugin bindings for jar packaging","slug":"plugin-bindings-for-jar-packaging","link":"#plugin-bindings-for-jar-packaging","children":[]},{"level":3,"title":"Plugin bindings for ejb packaging","slug":"plugin-bindings-for-ejb-packaging","link":"#plugin-bindings-for-ejb-packaging","children":[]},{"level":3,"title":"Plugin bindings for maven-plugin packaging","slug":"plugin-bindings-for-maven-plugin-packaging","link":"#plugin-bindings-for-maven-plugin-packaging","children":[]},{"level":3,"title":"Plugin bindings for war packaging","slug":"plugin-bindings-for-war-packaging","link":"#plugin-bindings-for-war-packaging","children":[]},{"level":3,"title":"Plugin bindings for ear packaging","slug":"plugin-bindings-for-ear-packaging","link":"#plugin-bindings-for-ear-packaging","children":[]},{"level":3,"title":"Plugin bindings for rar packaging","slug":"plugin-bindings-for-rar-packaging","link":"#plugin-bindings-for-rar-packaging","children":[]}]},{"level":2,"title":"clean生命周期","slug":"clean生命周期","link":"#clean生命周期","children":[]},{"level":2,"title":"site生命周期","slug":"site生命周期","link":"#site生命周期","children":[]}],"git":{"createdTime":1685093700000,"updatedTime":1688120342000,"contributors":[{"name":"lurj","email":"naulurenjie@outlook.com","commits":2}]},"readingTime":{"minutes":4.62,"words":1387},"filePathRelative":"backend/java/maven/lifecycle.md","localizedDate":"2023年5月26日","excerpt":"<p><a href=\\"https://maven.apache.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Maven</a>的生命周期就是为了对所有的构建过程进行抽象和统一。在大量项目的构建过程中，Maven总结出了一套高度完善的，易于扩展的生命周期，包括项目的清理，初始化，编译，测试，打包，集成测试，验证，部署和生成站点等构建步骤。在我们日常的maven使用中，一条条简单的命令，<code>mvn clean</code>, <code>mvn package</code>等都是在执行Maven的某个生命周期阶段。</p>\\n<p><code>Maven</code>提供了三套独立的生命周期：<code>default</code>,<code>clean</code>,和<code>site</code>，接下来我们分别介绍三套生命周期。</p>\\n","autoDesc":true}');export{e as data};
