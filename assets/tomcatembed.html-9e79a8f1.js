const n=JSON.parse('{"key":"v-727d1ccd","path":"/backend/java/spring/tomcatembed.html","title":"tomcat embed","lang":"zh-CN","frontmatter":{"title":"tomcat embed","icon":"markdown","order":1,"date":"2023-06-28T00:00:00.000Z","category":["后端技术"],"tag":["spring"],"description":"众所周知springboot通过Fatjar运行时内嵌了tomcat，那么tomcat是如何启动的，又是如何调整tomcat启动参数的，我们来一探究竟。 ServletWebServerApplicationContext @Override protected void onRefresh() { super.onRefresh(); try { createWebServer();//创建web服务 } catch (Throwable ex) { throw new ApplicationContextException(\\"Unable to start web server\\", ex); } } private void createWebServer() { WebServer webServer = this.webServer; ServletContext servletContext = getServletContext(); if (webServer == null &amp;&amp; servletContext == null) { StartupStep createWebServer = this.getApplicationStartup().start(\\"spring.boot.webserver.create\\"); ServletWebServerFactory factory = getWebServerFactory();//获取TomcatServletWebServerFactory createWebServer.tag(\\"factory\\", factory.getClass().toString()); this.webServer = factory.getWebServer(getSelfInitializer());//获取WebServer createWebServer.end(); getBeanFactory().registerSingleton(\\"webServerGracefulShutdown\\", new WebServerGracefulShutdownLifecycle(this.webServer)); getBeanFactory().registerSingleton(\\"webServerStartStop\\", new WebServerStartStopLifecycle(this, this.webServer)); } else if (servletContext != null) { try { getSelfInitializer().onStartup(servletContext); } catch (ServletException ex) { throw new ApplicationContextException(\\"Cannot initialize servlet context\\", ex); } } initPropertySources(); }","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/backend/java/spring/tomcatembed.html"}],["meta",{"property":"og:site_name","content":"Original Tech"}],["meta",{"property":"og:title","content":"tomcat embed"}],["meta",{"property":"og:description","content":"众所周知springboot通过Fatjar运行时内嵌了tomcat，那么tomcat是如何启动的，又是如何调整tomcat启动参数的，我们来一探究竟。 ServletWebServerApplicationContext @Override protected void onRefresh() { super.onRefresh(); try { createWebServer();//创建web服务 } catch (Throwable ex) { throw new ApplicationContextException(\\"Unable to start web server\\", ex); } } private void createWebServer() { WebServer webServer = this.webServer; ServletContext servletContext = getServletContext(); if (webServer == null &amp;&amp; servletContext == null) { StartupStep createWebServer = this.getApplicationStartup().start(\\"spring.boot.webserver.create\\"); ServletWebServerFactory factory = getWebServerFactory();//获取TomcatServletWebServerFactory createWebServer.tag(\\"factory\\", factory.getClass().toString()); this.webServer = factory.getWebServer(getSelfInitializer());//获取WebServer createWebServer.end(); getBeanFactory().registerSingleton(\\"webServerGracefulShutdown\\", new WebServerGracefulShutdownLifecycle(this.webServer)); getBeanFactory().registerSingleton(\\"webServerStartStop\\", new WebServerStartStopLifecycle(this, this.webServer)); } else if (servletContext != null) { try { getSelfInitializer().onStartup(servletContext); } catch (ServletException ex) { throw new ApplicationContextException(\\"Cannot initialize servlet context\\", ex); } } initPropertySources(); }"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-06-29T02:51:23.000Z"}],["meta",{"property":"article:author","content":"lurj"}],["meta",{"property":"article:tag","content":"spring"}],["meta",{"property":"article:published_time","content":"2023-06-28T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-06-29T02:51:23.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"tomcat embed\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-06-28T00:00:00.000Z\\",\\"dateModified\\":\\"2023-06-29T02:51:23.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"lurj\\",\\"url\\":\\"https://www.lurj7988.cn\\"}]}"]]},"headers":[{"level":2,"title":"ServletWebServerApplicationContext","slug":"servletwebserverapplicationcontext","link":"#servletwebserverapplicationcontext","children":[]},{"level":2,"title":"TomcatServletWebServerFactory","slug":"tomcatservletwebserverfactory","link":"#tomcatservletwebserverfactory","children":[]}],"git":{"createdTime":1688007083000,"updatedTime":1688007083000,"contributors":[{"name":"lurj","email":"naulurenjie@outlook.com","commits":1}]},"readingTime":{"minutes":0.78,"words":233},"filePathRelative":"backend/java/spring/tomcatembed.md","localizedDate":"2023年6月28日","excerpt":"<p>众所周知<code>springboot</code>通过<code>Fatjar</code>运行时内嵌了<code>tomcat</code>，那么<code>tomcat</code>是如何启动的，又是如何调整<code>tomcat</code>启动参数的，我们来一探究竟。</p>\\n<h2> ServletWebServerApplicationContext</h2>\\n<div class=\\"language-java line-numbers-mode\\" data-ext=\\"java\\"><pre class=\\"language-java\\"><code><span class=\\"token annotation punctuation\\">@Override</span>\\n<span class=\\"token keyword\\">protected</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">onRefresh</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token keyword\\">super</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">onRefresh</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token function\\">createWebServer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//创建web服务</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">Throwable</span> ex<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ApplicationContextException</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Unable to start web server\\"</span><span class=\\"token punctuation\\">,</span> ex<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">private</span> <span class=\\"token keyword\\">void</span> <span class=\\"token function\\">createWebServer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token class-name\\">WebServer</span> webServer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>webServer<span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token class-name\\">ServletContext</span> servletContext <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getServletContext</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>webServer <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">&amp;&amp;</span> servletContext <span class=\\"token operator\\">==</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token class-name\\">StartupStep</span> createWebServer <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getApplicationStartup</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">start</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"spring.boot.webserver.create\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token class-name\\">ServletWebServerFactory</span> factory <span class=\\"token operator\\">=</span> <span class=\\"token function\\">getWebServerFactory</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//获取TomcatServletWebServerFactory</span>\\n        createWebServer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">tag</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"factory\\"</span><span class=\\"token punctuation\\">,</span> factory<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getClass</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">toString</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>webServer <span class=\\"token operator\\">=</span> factory<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">getWebServer</span><span class=\\"token punctuation\\">(</span><span class=\\"token function\\">getSelfInitializer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span><span class=\\"token comment\\">//获取WebServer</span>\\n        createWebServer<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">end</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token function\\">getBeanFactory</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">registerSingleton</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"webServerGracefulShutdown\\"</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">WebServerGracefulShutdownLifecycle</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>webServer<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token function\\">getBeanFactory</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">registerSingleton</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"webServerStartStop\\"</span><span class=\\"token punctuation\\">,</span>\\n                <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">WebServerStartStopLifecycle</span><span class=\\"token punctuation\\">(</span><span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">,</span> <span class=\\"token keyword\\">this</span><span class=\\"token punctuation\\">.</span>webServer<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token keyword\\">else</span> <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>servletContext <span class=\\"token operator\\">!=</span> <span class=\\"token keyword\\">null</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n        <span class=\\"token keyword\\">try</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token function\\">getSelfInitializer</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">onStartup</span><span class=\\"token punctuation\\">(</span>servletContext<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n        <span class=\\"token keyword\\">catch</span> <span class=\\"token punctuation\\">(</span><span class=\\"token class-name\\">ServletException</span> ex<span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">throw</span> <span class=\\"token keyword\\">new</span> <span class=\\"token class-name\\">ApplicationContextException</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"Cannot initialize servlet context\\"</span><span class=\\"token punctuation\\">,</span> ex<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n        <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token punctuation\\">}</span>\\n    <span class=\\"token function\\">initPropertySources</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{n as data};
