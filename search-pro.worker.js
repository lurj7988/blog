const g=(o,a)=>{const i=o.toLowerCase(),e=a.toLowerCase(),s=[];let n=0,l=0;const c=(t,p=!1)=>{let r="";l===0?r=t.length>20?`… ${t.slice(-20)}`:t:p?r=t.length+l>100?`${t.slice(0,100-l)}… `:t:r=t.length>20?`${t.slice(0,20)} … ${t.slice(-20)}`:t,r&&s.push(r),l+=r.length,p||(s.push(["strong",a]),l+=a.length,l>=100&&s.push(" …"))};let h=i.indexOf(e,n);if(h===-1)return null;for(;h>=0;){const t=h+e.length;if(c(o.slice(n,h)),n=t,l>100)break;h=i.indexOf(e,n)}return l<100&&c(o.slice(n),!0),s},d=Object.entries,y=Object.keys,f=o=>o.reduce((a,{type:i})=>a+(i==="title"?50:i==="heading"?20:i==="custom"?10:1),0),$=(o,a)=>{var i;const e={};for(const[s,n]of d(a)){const l=((i=a[s.replace(/\/[^\\]*$/,"")])==null?void 0:i.title)||"",c=`${l?`${l} > `:""}${n.title}`,h=g(n.title,o);h&&(e[c]=[...e[c]||[],{type:"title",path:s,display:h}]),n.customFields&&d(n.customFields).forEach(([t,p])=>{p.forEach(r=>{const u=g(r,o);u&&(e[c]=[...e[c]||[],{type:"custom",path:s,index:t,display:u}])})});for(const t of n.contents){const p=g(t.header,o);p&&(e[c]=[...e[c]||[],{type:"heading",path:s+(t.slug?`#${t.slug}`:""),display:p}]);for(const r of t.contents){const u=g(r,o);u&&(e[c]=[...e[c]||[],{type:"content",header:t.header,path:s+(t.slug?`#${t.slug}`:""),display:u}])}}}return y(e).sort((s,n)=>f(e[s])-f(e[n])).map(s=>({title:s,contents:e[s]}))},m=JSON.parse("{\"/\":{\"/\":{\"title\":\"博客主页\",\"contents\":[]},\"/intro.html\":{\"title\":\"个人简介\",\"contents\":[{\"header\":\"个人优势\",\"slug\":\"个人优势\",\"contents\":[]},{\"header\":\"工作经历\",\"slug\":\"工作经历\",\"contents\":[]},{\"header\":\"工作业绩\",\"slug\":\"工作业绩\",\"contents\":[]},{\"header\":\"拥有技能\",\"slug\":\"拥有技能\",\"contents\":[]},{\"header\":\"项目经历\",\"slug\":\"项目经历\",\"contents\":[]},{\"header\":\"公司DevOps体系搭建\",\"slug\":\"公司devops体系搭建\",\"contents\":[]},{\"header\":\"工作内容\",\"slug\":\"工作内容\",\"contents\":[]}]},\"/slides.html\":{\"title\":\"幻灯片页\",\"contents\":[]},\"/advanced/\":{\"title\":\"前沿技术\",\"contents\":[{\"header\":\"目录\",\"slug\":\"目录\",\"contents\":[\"人工智能\"]}]},\"/backend/\":{\"title\":\"后端技术\",\"contents\":[]},\"/frontend/\":{\"title\":\"前端技术\",\"contents\":[]},\"/ops/\":{\"title\":\"测试运维\",\"contents\":[]},\"/ops/git.html\":{\"title\":\"git\",\"contents\":[{\"header\":\"git常用命令\",\"slug\":\"git常用命令\",\"contents\":[\"git remote -v # 显示所有远程仓库 git remote rm newOrigin # 删除远程仓库 git remote add origin main # 新增远程仓库 git remote set-url origin https://github.com/lurj7988/blog.git # 设置远程仓库地址 git checkout # 显示所有本地仓库 git branch -a # 查看所有分支 git branch main # 创建一个名为main的新分支 git branch -d master # 删除分支 git checkout main # 切换到新的分支 git push origin main --force # 强制将本地仓库覆盖到远程仓库 git push --set-upstream origin main # fatal: The current branch main has no upstream branch. To push the current branch and set the remote as upstream \"]},{\"header\":\"git配置\",\"slug\":\"git配置\",\"contents\":[\"proxy配置代理了clash的7890端口，实现通过vpn访问github\",\"[user] name = lurj email = naulurenjie@outlook.com [credential \\\"http://192.168.0.200\\\"] provider = generic [credential \\\"https://gitee.com\\\"] provider = generic [credential \\\"http://192.168.217.8\\\"] provider = generic [http] proxy = 192.168.188.1:7890 [https] proxy = 192.168.188.1:7890 [credential] helper = store \"]}]},\"/ops/grafana.html\":{\"title\":\"grafana\",\"contents\":[{\"header\":\"部署\",\"slug\":\"部署\",\"contents\":[\"docker pull bitnami/prometheus:latest docker run -d --name=prometheus --net=host -v /opt/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml bitnami/prometheus:latest docker pull grafana/grafana docker run -d --name=grafana --net=host grafana/grafana:latest \",\"grafana访问地址http://192.168.220.235:3000/默认密码admin/admin\",\"prometheus访问地址http://192.168.220.235:9090/\",\"grafana监控模板下载地址https://grafana.com/grafana/dashboards/\"]},{\"header\":\"监控linux\",\"slug\":\"监控linux\",\"contents\":[\"安装包github下载地址https://github.com/prometheus/node_exporter\",\"./node_exporter >log.file 2>&1 & curl http://localhost:9100/metrics \"]},{\"header\":\"prometheus配置\",\"slug\":\"prometheus配置\",\"contents\":[\"# my global config global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. # scrape_timeout is set to the global default (10s). # Alertmanager configuration alerting: alertmanagers: - static_configs: - targets: # - alertmanager:9093 # Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files: # - \\\"first_rules.yml\\\" # - \\\"second_rules.yml\\\" # A scrape configuration containing exactly one endpoint to scrape: # Here it's Prometheus itself. scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. - job_name: \\\"prometheus\\\" # metrics_path defaults to '/metrics' # scheme defaults to 'http'. static_configs: - targets: [\\\"localhost:9090\\\"] # add a new node - job_name: \\\"prometheus_agent\\\" static_configs: - targets: [\\\"192.168.220.216:9100\\\",\\\"192.168.220.215:9100\\\"] - job_name: 'mysql' static_configs: - targets: [\\\"192.168.220.215:9104\\\"] \"]},{\"header\":\"监控mysql\",\"slug\":\"监控mysql\",\"contents\":[\"安装包github下载地址https://github.com/prometheus/mysqld_exporter\",\"touch mysqld_exporter.cnf nohup ./mysqld_exporter --config.my-cnf=mysqld_exporter.cnf & curl http://localhost:9104/metrics \",\"[client] user=exporter password=eXpIHB666QWE! \",\"create user 'exporter'@'127.0.0.1' IDENTIFIED BY 'eXpIHB666QWE!'; GRANT SELECT, PROCESS, SUPER, REPLICATION CLIENT, RELOAD ON *.* TO 'exporter'@'127.0.0.1'; \"]}]},\"/ops/medusa.html\":{\"title\":\"medusa\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Github\"]},{\"header\":\"medusa编译\",\"slug\":\"medusa编译\",\"contents\":[\"./configure --build=x86-pc-linux-gnu # 需要加上参数否则会报下面的错 make -j 4 && make install \",\"注意\",\"checking build system type... config.sub: too many arguments\",\"Try `config.sub --help' for more information.\",\"configure: error: /bin/sh ./config.sub x86_64-unknown-linux-gnu\"]},{\"header\":\"medusa暴力破解ssh\",\"slug\":\"medusa暴力破解ssh\",\"contents\":[\"usage\",\"medusa -M ssh -H host.txt -U users.txt -p password medusa -M ssh -h 192.168.109.235 -u root -p 'Epoint123!@#' medusa -M ssh -h 192.168.109.235 -u root -P passwords.txt medusa -M ssh -H host.txt -U users.txt -p password \"]},{\"header\":\"medusa命令详解\",\"slug\":\"medusa命令详解\",\"contents\":[\"medusa -h #目标IP地址 medusa -H #包含目标IP地址的文件 medusa -u #指定测试的用户名 medusa -U #指定测试的用户名字典 medusa -p #指定测试的密码 medusa -P #指定测试的密码字典 medusa -C #指定测试格式为user:password的字典 medusa -O #将输出结果保存在指定的文件 medusa -e #[n/s/ns] 额外的密码检测(n:空密码 s:用户名=密码) medusa -M #制定执行的模块(不带.mod扩展名) medusa -m #指定传递给模块的参数 medusa -d #查看支持破解的模块 medusa -s #启动SSL medusa -g #设置连接超时时间(默认值3) medusa -r #设置重试的次数(默认值3) medusa -t #设置同时测试的登陆总数 medusa -T #设置同时测试的主机总数 medusa -f #在破解得到第一个用户名或者密码后停止扫描主机 medusa -F #在任何竹主机上面破解得到第一个用户名或面后停止扫描 medusa -b #不显示软件启动时候的版本信息 medusa -q #显示模块的使用信息 medusa -v #详细等级(0-6) medusa -w #错误调试等级(0-10) medusa -V #显示版本信息 medusa -Z #恢复之前终端的扫描 \"]}]},\"/ops/nmap.html\":{\"title\":\"nmap\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Github\"]},{\"header\":\"nmap 编译\",\"slug\":\"nmap-编译\",\"contents\":[\"下载地址\",\"yum -y install bzip2 tar -xvf nmap-7.91.tar.bz2 ./configure --build=x86-pc-linux-gnu yum -y install gcc+ gcc-c++ make -j 4 && make install nmap --version \"]}]},\"/ops/ssh.html\":{\"title\":\"ssh\",\"contents\":[{\"header\":\"ssh免密登录\",\"slug\":\"ssh免密登录\",\"contents\":[]},{\"header\":\"在本地Windows上生成公钥私钥对\",\"slug\":\"在本地windows上生成公钥私钥对\",\"contents\":[\"生产目录位于C:\\\\Users\\\\naulu\\\\.ssh，其中id_rsa为私钥，id_rsa.pub为公钥\",\"ssh-keygen \"]},{\"header\":\"将公钥放入linux服务器\",\"slug\":\"将公钥放入linux服务器\",\"contents\":[\"将公钥中的内容添加到linux用户目录下的.ssh目录下的authorized_keys文件中。\",\"cd ~/.ssh touch authorized_keys vim authorized_keys \"]},{\"header\":\"vscode远程插件指定私钥\",\"slug\":\"vscode远程插件指定私钥\",\"contents\":[\"Host 192.168.188.128 HostName 192.168.188.128 User lurj IdentityFile C:/Users/naulu/.ssh/id_rsa \"]},{\"header\":\"禁止ssh用户名密码登录\",\"slug\":\"禁止ssh用户名密码登录\",\"contents\":[\"修改 /etc/ssh/sshd_config\",\"$ sudo vim /etc/ssh/sshd_config ... # To disable tunneled clear text passwords, change to no here! #PasswordAuthentication yes #PermitEmptyPasswords no PasswordAuthentication no # Change to no to disable s/key passwords #ChallengeResponseAuthentication yes ChallengeResponseAuthentication no ... \",\"把PasswordAuthentication改成no，则ssh再发起登录的时候就会提示如下错误：\",\"ssh : Permission denied (publickey,gssapi-with-mic) \",\"通常禁止了用户名密码登录之后，需要配置public/private key pair进行登录，即ssh使用-i参数指定private key文件登录。\",\"反之如果ssh使用用户名密码登录遇到上述错误，则需要把 /etc/ssh/sshd_config配置文件里的配置项PasswordAuthentication改成yes。\"]}]},\"/ops/ubuntu.html\":{\"title\":\"ubuntu\",\"contents\":[{\"header\":\"磁盘分区与挂载\",\"slug\":\"磁盘分区与挂载\",\"contents\":[\"参考链接\"]},{\"header\":\"查看空闲磁盘空间\",\"slug\":\"查看空闲磁盘空间\",\"contents\":[\"进入以后，m表示帮助，F表示查看空闲的磁盘，q表示退出，d表示删除分区，n表示新建分区，w表示保存配置等\",\"lurj@lurj:~$ sudo fdisk /dev/sda Welcome to fdisk (util-linux 2.37.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. GPT PMBR size mismatch (41943039 != 167772159) will be corrected by write. This disk is currently in use - repartitioning is probably a bad idea. It's recommended to umount all file systems, and swapoff all swap partitions on this disk. Command (m for help): F Unpartitioned space /dev/sda: 60 GiB, 64425541120 bytes, 125831135 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes Start End Sectors Size 41940992 167772126 125831135 60G Command (m for help): All unwritten changes will be lost, do you really want to quit? y \"]},{\"header\":\"新建分区\",\"slug\":\"新建分区\",\"contents\":[\"选择n指令进去新建分区模式，选择默认分区号，根据指令设置磁盘大小，选择p指令查看分区是否添加成功，选择w指令保存配置，选择q指令退出不保存配置。\",\"lurj@lurj:~$ sudo fdisk /dev/sda Welcome to fdisk (util-linux 2.37.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. GPT PMBR size mismatch (41943039 != 167772159) will be corrected by write. This disk is currently in use - repartitioning is probably a bad idea. It's recommended to umount all file systems, and swapoff all swap partitions on this disk. Command (m for help): n Partition number (4-128, default 4): First sector (41940992-167772126, default 41940992): Last sector, +/-sectors or +/-size{K,M,G,T,P} (41940992-167772126, default 167772126): Created a new partition 4 of type 'Linux filesystem' and of size 60 GiB. Command (m for help): p Disk /dev/sda: 80 GiB, 85899345920 bytes, 167772160 sectors Disk model: VMware Virtual S Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: gpt Disk identifier: 209A5215-C303-4C38-802F-FADB733C53A6 Device Start End Sectors Size Type /dev/sda1 2048 4095 2048 1M BIOS boot /dev/sda2 4096 3719167 3715072 1.8G Linux filesystem /dev/sda3 3719168 41940991 38221824 18.2G Linux filesystem /dev/sda4 41940992 167772126 125831135 60G Linux filesystem Command (m for help): w The partition table has been altered. Syncing disks. \"]},{\"header\":\"格式化分区\",\"slug\":\"格式化分区\",\"contents\":[\"对新分区/dev/sda4进行格式化，注意，不格式化不能对分区进行挂载\",\"lurj@lurj:~$ sudo mkfs -t ext4 /dev/sda4 mke2fs 1.46.5 (30-Dec-2021) Creating filesystem with 15728640 4k blocks and 3939840 inodes Filesystem UUID: 71fe7d8e-63cf-42c1-abe3-686063d202ce Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424 Allocating group tables: done Writing inode tables: done Creating journal (65536 blocks): done Writing superblocks and filesystem accounting information: done \"]},{\"header\":\"检测分区\",\"slug\":\"检测分区\",\"contents\":[\"lurj@lurj:~$ sudo e2fsck -f /dev/sda4 e2fsck 1.46.5 (30-Dec-2021) Pass 1: Checking inodes, blocks, and sizes Pass 2: Checking directory structure Pass 3: Checking directory connectivity Pass 4: Checking reference counts Pass 5: Checking group summary information /dev/sda4: 11/3939840 files (0.0% non-contiguous), 326171/15728640 blocks \"]},{\"header\":\"移动文件\",\"slug\":\"移动文件\",\"contents\":[\"将需要挂载的目录中的文件先移动出去\",\"cd /home/lurj # 查看隐藏文件 ls -a # 移动文件包含隐藏文件 sudo mv *.[^.]* /opt/ \"]},{\"header\":\"磁盘挂载\",\"slug\":\"磁盘挂载\",\"contents\":[\"# 此方法只能临时挂载，系统重启后就失效 sudo mount /dev/sda4 /home/lurj # 设置开机自动挂载，编辑/etc/fstab文件，添加如下内容 sudo vim /etc/fstab # /dev/sda4 /home/lurj ext4 defaults 0 0 # 取消挂载 sudo umount /home/lurj \"]},{\"header\":\"查看挂载\",\"slug\":\"查看挂载\",\"contents\":[\"lurj@lurj:~$ df -h Filesystem Size Used Avail Use% Mounted on tmpfs 1.6G 1.6M 1.6G 1% /run /dev/mapper/ubuntu--vg-ubuntu--lv 9.8G 3.9G 5.5G 42% / tmpfs 7.8G 0 7.8G 0% /dev/shm tmpfs 5.0M 0 5.0M 0% /run/lock /dev/sda2 1.8G 253M 1.4G 16% /boot tmpfs 1.6G 4.0K 1.6G 1% /run/user/1000 /dev/sda4 59G 5.4G 51G 10% /home/lurj \"]}]},\"/advanced/ai/\":{\"title\":\"人工智能\",\"contents\":[{\"header\":\"目录\",\"slug\":\"目录\",\"contents\":[\"Stable Diffusion\"]}]},\"/backend/cpp/config.html\":{\"title\":\"c++环境配置\",\"contents\":[{\"header\":\"一、Visual Studio Code相关信息\",\"slug\":\"一、visual-studio-code相关信息\",\"contents\":[\"Visual Studio Code 下载地址：https://code.visualstudio.com/download\",\"VS Code建议安装插件列表： \",\"中文菜单： \",\"MS-CEINTL.vscode-language-pack-zh-hans\",\"SSH远程开发： \",\"ms-vscode-remote.remote-ssh\",\"ms-vscode-remote.remote-ssh-edit\",\"ms-vscode.remote-explorer\",\"C++开发 \",\"ms-vscode.cpptools\",\"python开发 \",\"ms-python.python\",\"代码补全 \",\"TabNine.tabnine-vscode\",\"GitHub.copilot\",\"VS Code SSH远程连接Ubuntu主机 \",\"本地Ubuntu示例\",\"autoDL示例： \",\"autoDL地址：https://www.autodl.com/home\",\"省钱妙招：无卡启动（不挂载GPU，￥0.1/h左右）\"]},{\"header\":\"二、Python开发环境配置\",\"slug\":\"二、python开发环境配置\",\"contents\":[\"建议conda虚拟环境\",\"测试代码demo.py：\",\"# python 代码测试 # 计算 1+2+3+4+5 的和 sum = 0; for i in range(5): sum += i # 打印结果 print(sum); \",\"debuger配置.vscode下launch.json添加\",\"{ // 使用 IntelliSense 了解相关属性。 // 悬停以查看现有属性的描述。 // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387 \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"Python: Current File\\\", \\\"type\\\": \\\"python\\\", \\\"request\\\": \\\"launch\\\", // \\\"program\\\": \\\"${file}\\\", // 当前文件 \\\"program\\\": \\\"demo.py\\\", // 指定文件 \\\"console\\\": \\\"integratedTerminal\\\", \\\"justMyCode\\\": true // false表示可以进入第三方库（如Pytorch）里进行调试 } ] } \"]},{\"header\":\"三、Ubuntu安装环境\",\"slug\":\"三、ubuntu安装环境\",\"contents\":[\"#安装gcc sudo apt-get install gcc #安装g++ sudo apt-get install g++ #安装cmake sudo apt-get install cmake #安装gdb sudo apt-get install gdb \"]},{\"header\":\"四、C++ 开发环境配置\",\"slug\":\"四、c-开发环境配置\",\"contents\":[\"当前配置的环境主要为了演示C++基础知识教学，后面做项目时会有调整。\",\"测试代码main.cpp：\",\"#include <iostream> using namespace std; int main(){ // 计算 1+2+3+4+5 int sum {0}; for (int i {0}; i < 5; i++){ sum += i; } // 输出结果 cout << sum << endl; return 0; } \",\"先用g++ main.cpp -o main生成可执行文件\",\"再用VS Code 菜单：终端-运行生成任务生成可执行文件，需要在.vscode先添加tasks.json\",\"Linux中可以使用which g++确定g++的路径\",\"{ \\\"version\\\": \\\"2.0.0\\\", \\\"tasks\\\": [ { \\\"type\\\": \\\"cppbuild\\\", \\\"label\\\": \\\"C/C++: g++ 生成活动文件\\\", \\\"command\\\": \\\"/usr/bin/g++\\\", // g++的路径 \\\"args\\\": [ \\\"-fdiagnostics-color=always\\\", // 颜色 \\\"-g\\\", // 调试信息 \\\"-Wall\\\", // 开启所有警告 \\\"-std=c++14\\\", // c++14标准 \\\"${file}\\\", // 文件本身，仅适用于C++基础知识教学，无法同时编译所有文件 // \\\"${fileDirname}/*.cpp\\\", // 文件所在的文件夹路径下所有cpp文件 \\\"-o\\\", // 输出 \\\"${workspaceFolder}/release/${fileBasenameNoExtension}\\\" // 文件所在的文件夹路径/release/当前文件的文件名，不带后缀 ], \\\"options\\\": { \\\"cwd\\\": \\\"${fileDirname}\\\" // 文件所在的文件夹路径 }, \\\"problemMatcher\\\": [ \\\"$gcc\\\" ], \\\"group\\\": { \\\"kind\\\": \\\"build\\\", \\\"isDefault\\\": true }, \\\"detail\\\": \\\"编译器: /usr/bin/g++\\\" } ] } \",\"需要debuger，launch.json修改为：\",\"{ // 使用 IntelliSense 了解相关属性。 // 悬停以查看现有属性的描述。 // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387 \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"(gdb) 启动\\\", \\\"type\\\": \\\"cppdbg\\\", // C++调试 \\\"request\\\": \\\"launch\\\", \\\"program\\\": \\\"${workspaceFolder}/release/${fileBasenameNoExtension}\\\", // 文件所在的文件夹路径/release/当前文件的文件名，不带后缀 \\\"args\\\": [], \\\"stopAtEntry\\\": false, \\\"cwd\\\": \\\"${fileDirname}\\\", // 文件所在的文件夹路径 \\\"environment\\\": [], \\\"externalConsole\\\": false, \\\"MIMode\\\": \\\"gdb\\\", \\\"setupCommands\\\": [ { \\\"description\\\": \\\"为 gdb 启用整齐打印\\\", \\\"text\\\": \\\"-enable-pretty-printing\\\", \\\"ignoreFailures\\\": true }, { \\\"description\\\": \\\"将反汇编风格设置为 Intel\\\", \\\"text\\\": \\\"-gdb-set disassembly-flavor intel\\\", \\\"ignoreFailures\\\": true } ], \\\"preLaunchTask\\\": \\\"C/C++: g++ 生成活动文件\\\" // tasks.json的label }, { \\\"name\\\": \\\"Python: Current File\\\", \\\"type\\\": \\\"python\\\", \\\"request\\\": \\\"launch\\\", \\\"program\\\": \\\"${file}\\\", // 当前文件 // \\\"program\\\": \\\"demo.py\\\", // 指定文件 \\\"console\\\": \\\"integratedTerminal\\\", \\\"justMyCode\\\": true // false表示可以进入第三方库（如Pytorch）里进行调试 } ] } \"]},{\"header\":\"五、第一个C++程序\",\"slug\":\"五、第一个c-程序\",\"contents\":[\"#include <iostream> int main(){ int favorites_num; std::cout << \\\"请输入0~10中你最喜欢的数字：\\\" ; std::cin >> favorites_num; std::cout << favorites_num << \\\"也是我喜欢的数字！\\\" << std::endl; return 0; } \"]},{\"header\":\"六、附录：vs code 中变量解释\",\"slug\":\"六、附录-vs-code-中变量解释\",\"contents\":[\"以：/home/Coding/Test/.vscode/tasks.json 为例 ${workspaceFolder}:表示当前workspace文件夹路径，也即/home/Coding/Test ${workspaceRootFolderName}:表示workspace的文件夹名，也即Test ${file}:文件自身的绝对路径，也即/home/Coding/Test/.vscode/tasks.json ${relativeFile}:文件在workspace中的路径，也即.vscode/tasks.json ${fileBasenameNoExtension}:当前文件的文件名，不带后缀，也即tasks ${fileBasename}:当前文件的文件名，tasks.json ${fileDirname}:文件所在的文件夹路径，也即/home/Coding/Test/.vscode ${fileExtname}:当前文件的后缀，也即.json ${lineNumber}:当前文件光标所在的行号 ${env:PATH}:系统中的环境变量 \"]}]},\"/backend/video/qsv.html\":{\"title\":\"QSV文件\",\"contents\":[{\"header\":\"什么是qsv文件\",\"slug\":\"什么是qsv文件\",\"contents\":[]},{\"header\":\"头部信息\",\"slug\":\"头部信息\",\"contents\":[]},{\"header\":\"索引信息\",\"slug\":\"索引信息\",\"contents\":[]},{\"header\":\"json字符串\",\"slug\":\"json字符串\",\"contents\":[]},{\"header\":\"视频分段信息\",\"slug\":\"视频分段信息\",\"contents\":[]},{\"header\":\"总结\",\"slug\":\"总结\",\"contents\":[]}]},\"/backend/video/qsvextract.html\":{\"title\":\"QSV文件提取\",\"contents\":[{\"header\":\"创建类\",\"slug\":\"创建类\",\"contents\":[]},{\"header\":\"通用方法\",\"slug\":\"通用方法\",\"contents\":[]},{\"header\":\"逐字节读取文件\",\"slug\":\"逐字节读取文件\",\"contents\":[]},{\"header\":\"字节数组转16进制字符串\",\"slug\":\"字节数组转16进制字符串\",\"contents\":[]},{\"header\":\"字节数组转int\",\"slug\":\"字节数组转int\",\"contents\":[]},{\"header\":\"老版本解密算法\",\"slug\":\"老版本解密算法\",\"contents\":[]},{\"header\":\"新版本解密算法\",\"slug\":\"新版本解密算法\",\"contents\":[]},{\"header\":\"获取QSV头部信息\",\"slug\":\"获取qsv头部信息\",\"contents\":[]},{\"header\":\"获取json数据\",\"slug\":\"获取json数据\",\"contents\":[]},{\"header\":\"提取视频信息\",\"slug\":\"提取视频信息\",\"contents\":[]},{\"header\":\"参考资料\",\"slug\":\"参考资料\",\"contents\":[]}]},\"/ops/devops/gitlab-runner.html\":{\"title\":\"gitlab runner 介绍\",\"contents\":[{\"header\":\"注册\",\"slug\":\"注册\",\"contents\":[\"sudo gitlab-runner register --url http://192.168.0.200/ --registration-token $REGISTRATION_TOKEN \"]},{\"header\":\"查看runner命令\",\"slug\":\"查看runner命令\",\"contents\":[\"gitlab-runner list \"]},{\"header\":\"查看runner配置文件\",\"slug\":\"查看runner配置文件\",\"contents\":[\"cat /etc/gitlab-runner/config.toml \"]},{\"header\":\"客户端构建路径\",\"slug\":\"客户端构建路径\",\"contents\":[\"cd /home/gitlab-runner/builds \"]}]},\"/advanced/ai/sd/1.html\":{\"title\":\"Stable Diffusion安装教程\",\"contents\":[{\"header\":\"安装python环境\",\"slug\":\"安装python环境\",\"contents\":[]},{\"header\":\"安装git\",\"slug\":\"安装git\",\"contents\":[]},{\"header\":\"安装环境\",\"slug\":\"安装环境\",\"contents\":[]},{\"header\":\"Installation and Running\",\"slug\":\"installation-and-running\",\"contents\":[]},{\"header\":\"Automatic Installation on Windows\",\"slug\":\"automatic-installation-on-windows\",\"contents\":[]},{\"header\":\"Automatic Installation on Linux\",\"slug\":\"automatic-installation-on-linux\",\"contents\":[]}]},\"/advanced/ai/sd/2.html\":{\"title\":\"Prompt语法结构\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Prompt语法结构分 \",\"前缀 \",\"画风词\",\"效果器\",\"主体 \",\"人物\",\"物体\",\"场景 \",\"大环境\",\"小细节\"]}]},\"/advanced/ai/sd/\":{\"title\":\"Stable Diffusion\",\"contents\":[{\"header\":\"目录\",\"slug\":\"目录\",\"contents\":[\"安装教程\",\"操作说明\"]}]},\"/backend/cpp/\":{\"title\":\"Cpp\",\"contents\":[]},\"/backend/video/\":{\"title\":\"Video\",\"contents\":[]},\"/en/posts/\":{\"title\":\"Posts\",\"contents\":[]},\"/ops/devops/\":{\"title\":\"Devops\",\"contents\":[]},\"/en/posts/apple/\":{\"title\":\"Apple\",\"contents\":[]},\"/en/posts/banana/\":{\"title\":\"Banana\",\"contents\":[]}},\"/en/\":{\"/en/\":{\"title\":\"Blog Home\",\"contents\":[]},\"/en/intro.html\":{\"title\":\"Intro Page\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"Place your introduction and profile here.\"]}]},\"/en/slides.html\":{\"title\":\"Slide page\",\"contents\":[]},\"/en/demo/\":{\"title\":\"Features Demo\",\"contents\":[{\"header\":\"Catalog\",\"slug\":\"catalog\",\"contents\":[\"Markdown Enhance\",\"Page Config\",\"Function Disable\",\"Encryption Demo\"]}]},\"/en/demo/disable.html\":{\"title\":\"Disabling layout and features\",\"contents\":[]},\"/en/demo/encrypt.html\":{\"title\":\"Encryption Article\",\"contents\":[]},\"/en/demo/markdown.html\":{\"title\":\"Markdown Enhance\",\"contents\":[{\"header\":\"\",\"slug\":\"\",\"contents\":[\"VuePress basically generate pages from Markdown files. So you can use it to generate documentation or blog sites easily.\"]},{\"header\":\"Markdown Introduction\",\"slug\":\"markdown-introduction\",\"contents\":[]},{\"header\":\"Markdown Config\",\"slug\":\"markdown-config\",\"contents\":[]},{\"header\":\"Markdown Extension\",\"slug\":\"markdown-extension\",\"contents\":[]},{\"header\":\"VuePress Enhancement\",\"slug\":\"vuepress-enhancement\",\"contents\":[]},{\"header\":\"Theme Enhancement\",\"slug\":\"theme-enhancement\",\"contents\":[]},{\"header\":\"Custom Container\",\"slug\":\"custom-container\",\"contents\":[]},{\"header\":\"Tabs\",\"slug\":\"tabs\",\"contents\":[]},{\"header\":\"Code Tabs\",\"slug\":\"code-tabs\",\"contents\":[]},{\"header\":\"Superscript and Subscript\",\"slug\":\"superscript-and-subscript\",\"contents\":[]},{\"header\":\"Align\",\"slug\":\"align\",\"contents\":[]},{\"header\":\"Attrs\",\"slug\":\"attrs\",\"contents\":[]},{\"header\":\"Footnote\",\"slug\":\"footnote\",\"contents\":[]},{\"header\":\"Mark\",\"slug\":\"mark\",\"contents\":[]},{\"header\":\"Tasklist\",\"slug\":\"tasklist\",\"contents\":[]},{\"header\":\"Image Enhancement\",\"slug\":\"image-enhancement\",\"contents\":[]},{\"header\":\"Card\",\"slug\":\"card\",\"contents\":[]},{\"header\":\"Chart\",\"slug\":\"chart\",\"contents\":[]},{\"header\":\"Echarts\",\"slug\":\"echarts\",\"contents\":[]},{\"header\":\"Flowchart\",\"slug\":\"flowchart\",\"contents\":[]},{\"header\":\"Mermaid\",\"slug\":\"mermaid\",\"contents\":[]},{\"header\":\"Tex\",\"slug\":\"tex\",\"contents\":[]},{\"header\":\"Include files\",\"slug\":\"include-files\",\"contents\":[]},{\"header\":\"Code Demo\",\"slug\":\"code-demo\",\"contents\":[]},{\"header\":\"Stylize\",\"slug\":\"stylize\",\"contents\":[]},{\"header\":\"Playground\",\"slug\":\"playground\",\"contents\":[]},{\"header\":\"Vue Playground\",\"slug\":\"vue-playground\",\"contents\":[]}]},\"/en/demo/page.html\":{\"title\":\"Page Config\",\"contents\":[{\"header\":\"Page Information\",\"slug\":\"page-information\",\"contents\":[]},{\"header\":\"Page Content\",\"slug\":\"page-content\",\"contents\":[]}]},\"/en/posts/cherry.html\":{\"title\":\"Cherry\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[\"Here is the content.\"]},{\"header\":\"Heading 3\",\"slug\":\"heading-3\",\"contents\":[\"Here is the content.\"]}]},\"/en/posts/dragonfruit.html\":{\"title\":\"Dragon Fruit\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[\"Here is the content.\"]},{\"header\":\"Heading 3\",\"slug\":\"heading-3\",\"contents\":[\"Here is the content.\"]}]},\"/en/posts/strawberry.html\":{\"title\":\"Strawberry\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[\"Here is the content.\"]},{\"header\":\"Heading 3\",\"slug\":\"heading-3\",\"contents\":[\"Here is the content.\"]}]},\"/en/posts/tomato.html\":{\"title\":\"Tomato\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[\"Here is the content.\"]},{\"header\":\"Heading 3\",\"slug\":\"heading-3\",\"contents\":[\"Here is the content.\"]}]},\"/en/posts/apple/1.html\":{\"title\":\"Apple 1\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[\"Here is the content.\"]},{\"header\":\"Heading 3\",\"slug\":\"heading-3\",\"contents\":[\"Here is the content.\"]}]},\"/en/posts/apple/2.html\":{\"title\":\"Apple 2\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[]}]},\"/en/posts/apple/3.html\":{\"title\":\"Apple 3\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[\"Here is the content.\"]},{\"header\":\"Heading 3\",\"slug\":\"heading-3\",\"contents\":[\"Here is the content.\"]}]},\"/en/posts/apple/4.html\":{\"title\":\"Apple 4\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[\"Here is the content.\"]},{\"header\":\"Heading 3\",\"slug\":\"heading-3\",\"contents\":[\"Here is the content.\"]}]},\"/en/posts/banana/1.html\":{\"title\":\"Banana 1\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[\"Here is the content.\"]},{\"header\":\"Heading 3\",\"slug\":\"heading-3\",\"contents\":[\"Here is the content.\"]}]},\"/en/posts/banana/2.html\":{\"title\":\"Banana 2\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[]}]},\"/en/posts/banana/3.html\":{\"title\":\"Banana 3\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[\"Here is the content.\"]},{\"header\":\"Heading 3\",\"slug\":\"heading-3\",\"contents\":[\"Here is the content.\"]}]},\"/en/posts/banana/4.html\":{\"title\":\"Banana 4\",\"contents\":[{\"header\":\"Heading 2\",\"slug\":\"heading-2\",\"contents\":[\"Here is the content.\"]},{\"header\":\"Heading 3\",\"slug\":\"heading-3\",\"contents\":[\"Here is the content.\"]}]}}}");self.onmessage=({data:o})=>{self.postMessage($(o.query,m[o.routeLocale]))};
//# sourceMappingURL=original.js.map
