const Z="ENTRIES",W="KEYS",T="VALUES",p="";let O=class{constructor(e,t){const s=e._tree,n=Array.from(s.keys());this.set=e,this._type=t,this._path=n.length>0?[{node:s,keys:n}]:[]}next(){const e=this.dive();return this.backtrack(),e}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:e,keys:t}=E(this._path);if(E(t)===p)return{done:!1,value:this.result()};const s=e.get(E(t));return this._path.push({node:s,keys:Array.from(s.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const e=E(this._path).keys;e.pop(),!(e.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:e})=>E(e)).filter(e=>e!==p).join("")}value(){return E(this._path).node.get(p)}result(){switch(this._type){case T:return this.value();case W:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}};const E=e=>e[e.length-1],tt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,i=u+s,o=new Uint8Array(i*u).fill(s+1);for(let r=0;r<u;++r)o[r]=r;for(let r=1;r<i;++r)o[r*u]=r;return $(e,t,s,n,o,1,u,""),n},$=(e,t,s,n,u,i,o,r)=>{const a=i*o;t:for(const c of e.keys())if(c===p){const d=u[a-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=i;for(let l=0;l<c.length;++l,++d){const f=c[l],m=o*d,F=m-o;let h=u[m];const g=Math.max(0,d-s-1),A=Math.min(o-1,d+s);for(let _=g;_<A;++_){const I=f!==t[_],x=u[F+_]+ +I,y=u[F+_+1]+1,k=u[m+_]+1,V=u[m+_+1]=Math.min(x,y,k);V<h&&(h=V)}if(h>s)continue t}$(e.get(c),t,s,n,u,d,o,r+c)}};let R=class w{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=b(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,i]=S(n);for(const o of u.keys())if(o!==p&&o.startsWith(i)){const r=new Map;return r.set(o.slice(i.length),u.get(o)),new w(r,t)}}return new w(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,et(this._tree,t)}entries(){return new O(this,Z)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return tt(this._tree,t,s)}get(t){const s=M(this._tree,t);return s!==void 0?s.get(p):void 0}has(t){const s=M(this._tree,t);return s!==void 0&&s.has(p)}keys(){return new O(this,W)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,B(this._tree,t).set(p,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=B(this._tree,t);return n.set(p,s(n.get(p))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=B(this._tree,t);let u=n.get(p);return u===void 0&&n.set(p,u=s()),u}values(){return new O(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new w;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return w.from(Object.entries(t))}};const b=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==p&&t.startsWith(n))return s.push([e,n]),b(e.get(n),t.slice(n.length),s);return s.push([e,t]),b(void 0,"",s)},M=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==p&&t.startsWith(s))return M(e.get(s),t.slice(s.length))},B=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const i of e.keys())if(i!==p&&t[n]===i[0]){const o=Math.min(s-n,i.length);let r=1;for(;r<o&&t[n+r]===i[r];)++r;const a=e.get(i);if(r===i.length)e=a;else{const c=new Map;c.set(i.slice(r),a),e.set(t.slice(n,n+r),c),e.delete(i),e=c}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},et=(e,t)=>{const[s,n]=b(e,t);if(s!==void 0){if(s.delete(p),s.size===0)q(n);else if(s.size===1){const[u,i]=s.entries().next().value;P(n,u,i)}}},q=e=>{if(e.length===0)return;const[t,s]=S(e);if(t.delete(s),t.size===0)q(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==p&&P(e.slice(0,-1),n,u)}},P=(e,t,s)=>{if(e.length===0)return;const[n,u]=S(e);n.set(u+t,s),n.delete(u)},S=e=>e[e.length-1],st=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,j="or",N="and",nt="and_not",ut=(e,t)=>{e.includes(t)||e.push(t)},G=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},it=({score:e},{score:t})=>t-e,ot=()=>new Map,v=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},J=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,rt={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:i,match:o}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,o),G(n.terms,i)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:i,terms:o,match:r}=t.get(n);G(u.terms,o),s.set(n,{score:u.score+i,terms:u.terms,match:Object.assign(u.match,r)})}return s},[nt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},ct=(e,t,s,n,u,i)=>{const{k:o,b:r,d:a}=i;return Math.log(1+(s-t+.5)/(t+.5))*(a+e*(o+1)/(e+o*(1-r+r*n/u)))},ht=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,i=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:i}},lt={k:1.2,b:.7,d:.5},dt={idField:"id",extractField:(e,t)=>e[t],tokenize:(e,t)=>e.split(st),processTerm:(e,t)=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t,s)=>console!=null&&console.warn!=null&&console[e](t),autoVacuum:!0},U={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:lt},at={combineWith:N,prefix:(e,t,s)=>t===s.length-1},ft={batchSize:1e3,batchWait:10},H={minDirtFactor:.1,minDirtCount:20},Ft={...ft,...H};class gt{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ft:t.autoVacuum;this._options={...dt,...t,autoVacuum:s,searchOptions:{...U,...t.searchOptions||{}},autoSuggestOptions:{...at,...t.autoSuggestOptions||{}}},this._index=new R,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=H,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[i,o]of n)u[i]=Object.fromEntries(o);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const K=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},mt=(e,t,s,n)=>{if(!e._index.has(n)){K(e,s,t,n);return}const u=e._index.fetch(n,ot),i=u.get(t);i==null||i.get(s)==null?K(e,s,t,n):i.get(s)<=1?i.size<=1?u.delete(t):i.delete(s):i.set(s,i.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},X=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(rt[s])||new Map},L=(e,t,s,n,u,i,o,r,a=new Map)=>{if(u==null)return a;for(const c of Object.keys(i)){const d=i[c],l=e._fieldIds[c],f=u.get(l);if(f==null)continue;let m=f.size;const F=e._avgFieldLength[l];for(const h of f.keys()){if(!e._documentIds.has(h)){mt(e,l,h,s),m-=1;continue}const g=o?o(e._documentIds.get(h),s,e._storedFields.get(h)):1;if(!g)continue;const A=f.get(h),_=e._fieldLength.get(h)[l],I=ct(A,m,e._documentCount,_,F,r),x=n*d*g*I,y=a.get(h);if(y){y.score+=x,ut(y.terms,t);const k=J(y.match,s);k?k.push(c):y.match[s]=[c]}else a.set(h,{score:x,terms:[t],match:{[s]:[c]}})}}return a},pt=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((h,g)=>({...h,[g]:J(n.boost,g)||1}),{}),{boostDocument:i,weights:o,maxFuzzy:r,bm25:a}=n,{fuzzy:c,prefix:d}={...U.weights,...o},l=e._index.get(t.term),f=L(e,t.term,t.term,1,l,u,i,a);let m,F;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const h=t.fuzzy===!0?.2:t.fuzzy,g=h<1?Math.min(r,Math.round(t.term.length*h)):h;g&&(F=e._index.fuzzyGet(t.term,g))}if(m)for(const[h,g]of m){const A=h.length-t.term.length;if(!A)continue;F==null||F.delete(h);const _=d*h.length/(h.length+.3*A);L(e,t.term,h,_,g,u,i,a,f)}if(F)for(const h of F.keys()){const[g,A]=F.get(h);if(!A)continue;const _=c*h.length/(h.length+A);L(e,t.term,h,_,g,u,i,a,f)}return f},Y=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(f=>Y(e,f,d));return X(l,d.combineWith)}const{tokenize:n,processTerm:u,searchOptions:i}=e._options,o={tokenize:n,processTerm:u,...i,...s},{tokenize:r,processTerm:a}=o,c=r(t).flatMap(d=>a(d)).filter(d=>!!d).map(ht(o)).map(d=>pt(e,d,o));return X(c,o.combineWith)},_t=(e,t,s={})=>{const n=Y(e,t,s),u=[];for(const[i,{score:o,terms:r,match:a}]of n){const c=r.length,d={id:e._documentIds.get(i),score:o*c,terms:Object.keys(a),match:a};Object.assign(d,e._storedFields.get(i)),(s.filter==null||s.filter(d))&&u.push(d)}return u.sort(it),u},At=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:i,averageFieldLength:o,storedFields:r,dirtCount:a,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new gt(d);l._documentCount=t,l._nextId=s,l._documentIds=v(n),l._idToShortId=new Map,l._fieldIds=u,l._fieldLength=v(i),l._avgFieldLength=o,l._storedFields=v(r),l._dirtCount=a||0,l._index=new R;for(const[f,m]of l._documentIds)l._idToShortId.set(m,f);for(const[f,m]of e){const F=new Map;for(const h of Object.keys(m)){let g=m[h];c===1&&(g=g.ds),F.set(parseInt(h,10),v(g))}l._index.set(f,F)}return l},Q=Object.entries,yt=Object.fromEntries,Et=Object.keys,z=100,C=20,D=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let i=0,o=0;const r=(c,d=!1)=>{let l="";o===0?l=c.length>C?`… ${c.slice(-C)}`:c:d?l=c.length+o>z?`${c.slice(0,z-o)}… `:c:l=c.length>C?`${c.slice(0,C)} … ${c.slice(-C)}`:c,l&&u.push(l),o+=l.length,d||(u.push(["mark",t]),o+=t.length,o>=z&&u.push(" …"))};let a=s.indexOf(n,i);if(a===-1)return null;for(;a>=0;){const c=a+n.length;if(r(e.slice(i,a)),i=c,o>z)break;a=s.indexOf(n,i)}return o<z&&r(e.slice(i),!0),u},zt=(e,t,s={})=>{const n={};return _t(t,e,{fuzzy:.2,prefix:!0,boost:{header:4,text:2,title:1},...s}).forEach(u=>{const{title:i,id:o,terms:r,score:a}=u,c=o.split("#")[0];n[c]||(n[c]={title:i,contents:[]});const{contents:d}=n[c],l=f=>{const m=D(u.title,f);if(m&&d.push({type:"title",id:o,display:m,score:a}),"header"in u){const F=D(u.header,f);F&&d.push({type:"heading",id:o.split("#")[0],display:F,score:a})}if("text"in u)for(const F of u.text){const h=D(F,f);h&&d.push({type:"content",header:"header"in u?u.header:u.title,id:o.split("#")[0],display:h,score:a})}"customFields"in u&&Q(u.customFields).forEach(([F,h])=>{h.forEach(g=>{const A=D(g,f);A&&d.push({type:"custom",id:o,index:F,display:A,score:a})})})};r.forEach(f=>{l(f)})}),Et(n).sort((u,i)=>n[i].contents.reduce((o,{score:r})=>o+r,0)-n[u].contents.reduce((o,{score:r})=>o+r,0)).map(u=>n[u])},Ct=yt(Q(JSON.parse("{\"/en/\":{\"documentCount\":57,\"nextId\":57,\"documentIds\":{\"0\":\"v-5aa3d8ba\",\"1\":\"v-395cd082#catalog\",\"2\":\"v-4a2a37eb#markdown-introduction\",\"3\":\"v-4a2a37eb#markdown-config\",\"4\":\"v-4a2a37eb#markdown-extension\",\"5\":\"v-4a2a37eb#vuepress-enhancement\",\"6\":\"v-4a2a37eb#theme-enhancement\",\"7\":\"v-4a2a37eb#custom-container\",\"8\":\"v-4a2a37eb#tabs\",\"9\":\"v-4a2a37eb#code-tabs\",\"10\":\"v-4a2a37eb#superscript-and-subscript\",\"11\":\"v-4a2a37eb#align\",\"12\":\"v-4a2a37eb#attrs\",\"13\":\"v-4a2a37eb#footnote\",\"14\":\"v-4a2a37eb#mark\",\"15\":\"v-4a2a37eb#tasklist\",\"16\":\"v-4a2a37eb#image-enhancement\",\"17\":\"v-4a2a37eb#card\",\"18\":\"v-4a2a37eb#chart\",\"19\":\"v-4a2a37eb#echarts\",\"20\":\"v-4a2a37eb#flowchart\",\"21\":\"v-4a2a37eb#mermaid\",\"22\":\"v-4a2a37eb#tex\",\"23\":\"v-4a2a37eb#include-files\",\"24\":\"v-4a2a37eb#code-demo\",\"25\":\"v-4a2a37eb#stylize\",\"26\":\"v-4a2a37eb#playground\",\"27\":\"v-4a2a37eb#vue-playground\",\"28\":\"v-4a2a37eb#presentation\",\"29\":\"v-4a2a37eb\",\"30\":\"v-0e4acecb#page-information\",\"31\":\"v-0e4acecb#page-content\",\"32\":\"v-0e4acecb#page-structure\",\"33\":\"v-fb852992#heading-2\",\"34\":\"v-fb852992#heading-3\",\"35\":\"v-4fd051a1#heading-2\",\"36\":\"v-4fd051a1#heading-3\",\"37\":\"v-57615dc1#heading-2\",\"38\":\"v-57615dc1#heading-3\",\"39\":\"v-285adf66#heading-2\",\"40\":\"v-285adf66#heading-3\",\"41\":\"v-58aa03b4#heading-2\",\"42\":\"v-58aa03b4#heading-3\",\"43\":\"v-55405276#heading-2\",\"44\":\"v-55405276#heading-3\",\"45\":\"v-51d6a138#heading-2\",\"46\":\"v-51d6a138#heading-3\",\"47\":\"v-4e6ceffa#heading-2\",\"48\":\"v-4e6ceffa#heading-3\",\"49\":\"v-e748286e#heading-2\",\"50\":\"v-e748286e#heading-3\",\"51\":\"v-e3de7730#heading-2\",\"52\":\"v-e3de7730#heading-3\",\"53\":\"v-e074c5f2#heading-2\",\"54\":\"v-e074c5f2#heading-3\",\"55\":\"v-dd0b14b4#heading-2\",\"56\":\"v-dd0b14b4#heading-3\"},\"fieldIds\":{\"id\":0,\"title\":1,\"header\":2,\"text\":3,\"customFields\":4},\"fieldLength\":{\"0\":[2,2,null,7],\"1\":[3,2,1,8],\"2\":[4,2,2,1],\"3\":[4,2,2,1],\"4\":[4,2,2,1],\"5\":[4,2,2,1],\"6\":[4,2,2,1],\"7\":[4,2,2,1],\"8\":[3,2,1,1],\"9\":[4,2,2,1],\"10\":[5,2,3,1],\"11\":[3,2,1,1],\"12\":[3,2,1,1],\"13\":[3,2,1,1],\"14\":[3,2,1,1],\"15\":[3,2,1,1],\"16\":[4,2,2,1],\"17\":[3,2,1,1],\"18\":[3,2,1,1],\"19\":[3,2,1,1],\"20\":[3,2,1,1],\"21\":[3,2,1,1],\"22\":[3,2,1,1],\"23\":[4,2,2,1],\"24\":[4,2,2,1],\"25\":[3,2,1,1],\"26\":[3,2,1,1],\"27\":[4,2,2,1],\"28\":[3,2,1,1],\"29\":[2,2,null,19],\"30\":[4,2,2,1],\"31\":[4,2,2,1],\"32\":[4,2,2,1],\"33\":[4,1,2,5],\"34\":[4,1,2,5],\"35\":[4,2,2,5],\"36\":[4,2,2,5],\"37\":[4,1,2,5],\"38\":[4,1,2,5],\"39\":[4,1,2,5],\"40\":[4,1,2,5],\"41\":[4,2,2,5],\"42\":[4,2,2,5],\"43\":[4,2,2,1],\"44\":[4,2,2,1],\"45\":[4,2,2,5],\"46\":[4,2,2,5],\"47\":[4,2,2,5],\"48\":[4,2,2,5],\"49\":[4,2,2,5],\"50\":[4,2,2,5],\"51\":[4,2,2,1],\"52\":[4,2,2,1],\"53\":[4,2,2,5],\"54\":[4,2,2,5],\"55\":[4,2,2,5],\"56\":[4,2,2,5]},\"averageFieldLength\":[3.6666666666666665,1.894736842105263,1.691470054446461,2.9473684210526314],\"storedFields\":{\"0\":{\"title\":\"Intro Page\",\"text\":[\"Place your introduction and profile here.\"]},\"1\":{\"title\":\"Features Demo\",\"header\":\"Catalog\",\"text\":[\"Markdown Enhance\",\"Page Config\",\"Function Disable\",\"Encryption Demo\"]},\"2\":{\"title\":\"Markdown Enhance\",\"header\":\"Markdown Introduction\",\"text\":[]},\"3\":{\"title\":\"Markdown Enhance\",\"header\":\"Markdown Config\",\"text\":[]},\"4\":{\"title\":\"Markdown Enhance\",\"header\":\"Markdown Extension\",\"text\":[]},\"5\":{\"title\":\"Markdown Enhance\",\"header\":\"VuePress Enhancement\",\"text\":[]},\"6\":{\"title\":\"Markdown Enhance\",\"header\":\"Theme Enhancement\",\"text\":[]},\"7\":{\"title\":\"Markdown Enhance\",\"header\":\"Custom Container\",\"text\":[]},\"8\":{\"title\":\"Markdown Enhance\",\"header\":\"Tabs\",\"text\":[]},\"9\":{\"title\":\"Markdown Enhance\",\"header\":\"Code Tabs\",\"text\":[]},\"10\":{\"title\":\"Markdown Enhance\",\"header\":\"Superscript and Subscript\",\"text\":[]},\"11\":{\"title\":\"Markdown Enhance\",\"header\":\"Align\",\"text\":[]},\"12\":{\"title\":\"Markdown Enhance\",\"header\":\"Attrs\",\"text\":[]},\"13\":{\"title\":\"Markdown Enhance\",\"header\":\"Footnote\",\"text\":[]},\"14\":{\"title\":\"Markdown Enhance\",\"header\":\"Mark\",\"text\":[]},\"15\":{\"title\":\"Markdown Enhance\",\"header\":\"Tasklist\",\"text\":[]},\"16\":{\"title\":\"Markdown Enhance\",\"header\":\"Image Enhancement\",\"text\":[]},\"17\":{\"title\":\"Markdown Enhance\",\"header\":\"Card\",\"text\":[]},\"18\":{\"title\":\"Markdown Enhance\",\"header\":\"Chart\",\"text\":[]},\"19\":{\"title\":\"Markdown Enhance\",\"header\":\"Echarts\",\"text\":[]},\"20\":{\"title\":\"Markdown Enhance\",\"header\":\"Flowchart\",\"text\":[]},\"21\":{\"title\":\"Markdown Enhance\",\"header\":\"Mermaid\",\"text\":[]},\"22\":{\"title\":\"Markdown Enhance\",\"header\":\"Tex\",\"text\":[]},\"23\":{\"title\":\"Markdown Enhance\",\"header\":\"Include files\",\"text\":[]},\"24\":{\"title\":\"Markdown Enhance\",\"header\":\"Code Demo\",\"text\":[]},\"25\":{\"title\":\"Markdown Enhance\",\"header\":\"Stylize\",\"text\":[]},\"26\":{\"title\":\"Markdown Enhance\",\"header\":\"Playground\",\"text\":[]},\"27\":{\"title\":\"Markdown Enhance\",\"header\":\"Vue Playground\",\"text\":[]},\"28\":{\"title\":\"Markdown Enhance\",\"header\":\"Presentation\",\"text\":[]},\"29\":{\"title\":\"Markdown Enhance\",\"text\":[\"VuePress basically generate pages from Markdown files. So you can use it to generate documentation or blog sites easily.\"]},\"30\":{\"title\":\"Page Config\",\"header\":\"Page Information\",\"text\":[]},\"31\":{\"title\":\"Page Config\",\"header\":\"Page Content\",\"text\":[]},\"32\":{\"title\":\"Page Config\",\"header\":\"Page Structure\",\"text\":[]},\"33\":{\"title\":\"Cherry\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"34\":{\"title\":\"Cherry\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"35\":{\"title\":\"Dragon Fruit\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"36\":{\"title\":\"Dragon Fruit\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"37\":{\"title\":\"Strawberry\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"38\":{\"title\":\"Strawberry\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"39\":{\"title\":\"Tomato\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"40\":{\"title\":\"Tomato\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"41\":{\"title\":\"Apple 1\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"42\":{\"title\":\"Apple 1\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"43\":{\"title\":\"Apple 2\",\"header\":\"Heading 2\",\"text\":[]},\"44\":{\"title\":\"Apple 2\",\"header\":\"Heading 3\",\"text\":[]},\"45\":{\"title\":\"Apple 3\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"46\":{\"title\":\"Apple 3\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"47\":{\"title\":\"Apple 4\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"48\":{\"title\":\"Apple 4\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"49\":{\"title\":\"Banana 1\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"50\":{\"title\":\"Banana 1\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"51\":{\"title\":\"Banana 2\",\"header\":\"Heading 2\",\"text\":[]},\"52\":{\"title\":\"Banana 2\",\"header\":\"Heading 3\",\"text\":[]},\"53\":{\"title\":\"Banana 3\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"54\":{\"title\":\"Banana 3\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"55\":{\"title\":\"Banana 4\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"56\":{\"title\":\"Banana 4\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]}},\"dirtCount\":0,\"index\":[[\"1\",{\"1\":{\"41\":1,\"42\":1,\"49\":1,\"50\":1}}],[\"51d6a138\",{\"0\":{\"45\":1,\"46\":1}}],[\"55405276\",{\"0\":{\"43\":1,\"44\":1}}],[\"58aa03b4\",{\"0\":{\"41\":1,\"42\":1}}],[\"57615dc1\",{\"0\":{\"37\":1,\"38\":1}}],[\"5aa3d8ba\",{\"0\":{\"0\":1}}],[\"4\",{\"1\":{\"47\":1,\"48\":1,\"55\":1,\"56\":1}}],[\"4e6ceffa\",{\"0\":{\"47\":1,\"48\":1}}],[\"4fd051a1\",{\"0\":{\"35\":1,\"36\":1}}],[\"4a2a37eb\",{\"0\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1}}],[\"3\",{\"0\":{\"34\":1,\"36\":1,\"38\":1,\"40\":1,\"42\":1,\"44\":1,\"46\":1,\"48\":1,\"50\":1,\"52\":1,\"54\":1,\"56\":1},\"1\":{\"45\":1,\"46\":1,\"53\":1,\"54\":1},\"2\":{\"34\":1,\"36\":1,\"38\":1,\"40\":1,\"42\":1,\"44\":1,\"46\":1,\"48\":1,\"50\":1,\"52\":1,\"54\":1,\"56\":1}}],[\"395cd082\",{\"0\":{\"1\":1}}],[\"285adf66\",{\"0\":{\"39\":1,\"40\":1}}],[\"2\",{\"0\":{\"33\":1,\"35\":1,\"37\":1,\"39\":1,\"41\":1,\"43\":1,\"45\":1,\"47\":1,\"49\":1,\"51\":1,\"53\":1,\"55\":1},\"1\":{\"43\":1,\"44\":1,\"51\":1,\"52\":1},\"2\":{\"33\":1,\"35\":1,\"37\":1,\"39\":1,\"41\":1,\"43\":1,\"45\":1,\"47\":1,\"49\":1,\"51\":1,\"53\":1,\"55\":1}}],[\"heading\",{\"0\":{\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1},\"2\":{\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"here\",{\"3\":{\"0\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"0e4acecb\",{\"0\":{\"30\":1,\"31\":1,\"32\":1}}],[\"banana\",{\"1\":{\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"basically\",{\"3\":{\"29\":1}}],[\"blog\",{\"3\":{\"29\":1}}],[\"or\",{\"3\":{\"29\":1}}],[\"use\",{\"3\":{\"29\":1}}],[\"you\",{\"3\":{\"29\":1}}],[\"your\",{\"3\":{\"0\":1}}],[\"generate\",{\"3\":{\"29\":2}}],[\"strawberry\",{\"1\":{\"37\":1,\"38\":1}}],[\"structure\",{\"0\":{\"32\":1},\"2\":{\"32\":1}}],[\"stylize\",{\"0\":{\"25\":1},\"2\":{\"25\":1}}],[\"sites\",{\"3\":{\"29\":1}}],[\"so\",{\"3\":{\"29\":1}}],[\"subscript\",{\"0\":{\"10\":1},\"2\":{\"10\":1}}],[\"superscript\",{\"0\":{\"10\":1},\"2\":{\"10\":1}}],[\"mermaid\",{\"0\":{\"21\":1},\"2\":{\"21\":1}}],[\"mark\",{\"0\":{\"14\":1},\"2\":{\"14\":1}}],[\"markdown\",{\"0\":{\"2\":1,\"3\":1,\"4\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1},\"2\":{\"2\":1,\"3\":1,\"4\":1},\"3\":{\"1\":1,\"29\":1}}],[\"is\",{\"3\":{\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"it\",{\"3\":{\"29\":1}}],[\"information\",{\"0\":{\"30\":1},\"2\":{\"30\":1}}],[\"include\",{\"0\":{\"23\":1},\"2\":{\"23\":1}}],[\"introduction\",{\"0\":{\"2\":1},\"2\":{\"2\":1},\"3\":{\"0\":1}}],[\"intro\",{\"1\":{\"0\":1}}],[\"image\",{\"0\":{\"16\":1},\"2\":{\"16\":1}}],[\"apple\",{\"1\":{\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1}}],[\"attrs\",{\"0\":{\"12\":1},\"2\":{\"12\":1}}],[\"align\",{\"0\":{\"11\":1},\"2\":{\"11\":1}}],[\"and\",{\"0\":{\"10\":1},\"2\":{\"10\":1},\"3\":{\"0\":1}}],[\"the\",{\"3\":{\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"theme\",{\"0\":{\"6\":1},\"2\":{\"6\":1}}],[\"tomato\",{\"1\":{\"39\":1,\"40\":1}}],[\"to\",{\"3\":{\"29\":1}}],[\"tex\",{\"0\":{\"22\":1},\"2\":{\"22\":1}}],[\"tasklist\",{\"0\":{\"15\":1},\"2\":{\"15\":1}}],[\"tabs\",{\"0\":{\"8\":1,\"9\":1},\"2\":{\"8\":1,\"9\":1}}],[\"e074c5f2\",{\"0\":{\"53\":1,\"54\":1}}],[\"e3de7730\",{\"0\":{\"51\":1,\"52\":1}}],[\"e748286e\",{\"0\":{\"49\":1,\"50\":1}}],[\"easily\",{\"3\":{\"29\":1}}],[\"echarts\",{\"0\":{\"19\":1},\"2\":{\"19\":1}}],[\"extension\",{\"0\":{\"4\":1},\"2\":{\"4\":1}}],[\"encryption\",{\"3\":{\"1\":1}}],[\"enhancement\",{\"0\":{\"5\":1,\"6\":1,\"16\":1},\"2\":{\"5\":1,\"6\":1,\"16\":1}}],[\"enhance\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1},\"3\":{\"1\":1}}],[\"dd0b14b4\",{\"0\":{\"55\":1,\"56\":1}}],[\"dragon\",{\"1\":{\"35\":1,\"36\":1}}],[\"documentation\",{\"3\":{\"29\":1}}],[\"disable\",{\"3\":{\"1\":1}}],[\"demo\",{\"0\":{\"24\":1},\"1\":{\"1\":1},\"2\":{\"24\":1},\"3\":{\"1\":1}}],[\"fruit\",{\"1\":{\"35\":1,\"36\":1}}],[\"from\",{\"3\":{\"29\":1}}],[\"fb852992\",{\"0\":{\"33\":1,\"34\":1}}],[\"files\",{\"0\":{\"23\":1},\"2\":{\"23\":1},\"3\":{\"29\":1}}],[\"flowchart\",{\"0\":{\"20\":1},\"2\":{\"20\":1}}],[\"footnote\",{\"0\":{\"13\":1},\"2\":{\"13\":1}}],[\"function\",{\"3\":{\"1\":1}}],[\"features\",{\"1\":{\"1\":1}}],[\"cherry\",{\"1\":{\"33\":1,\"34\":1}}],[\"chart\",{\"0\":{\"18\":1},\"2\":{\"18\":1}}],[\"can\",{\"3\":{\"29\":1}}],[\"card\",{\"0\":{\"17\":1},\"2\":{\"17\":1}}],[\"catalog\",{\"0\":{\"1\":1},\"2\":{\"1\":1}}],[\"code\",{\"0\":{\"9\":1,\"24\":1},\"2\":{\"9\":1,\"24\":1}}],[\"content\",{\"0\":{\"31\":1},\"2\":{\"31\":1},\"3\":{\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"container\",{\"0\":{\"7\":1},\"2\":{\"7\":1}}],[\"config\",{\"0\":{\"3\":1},\"1\":{\"30\":1,\"31\":1,\"32\":1},\"2\":{\"3\":1},\"3\":{\"1\":1}}],[\"custom\",{\"0\":{\"7\":1},\"2\":{\"7\":1}}],[\"presentation\",{\"0\":{\"28\":1},\"2\":{\"28\":1}}],[\"profile\",{\"3\":{\"0\":1}}],[\"playground\",{\"0\":{\"26\":1,\"27\":1},\"2\":{\"26\":1,\"27\":1}}],[\"place\",{\"3\":{\"0\":1}}],[\"pages\",{\"3\":{\"29\":1}}],[\"page\",{\"0\":{\"30\":1,\"31\":1,\"32\":1},\"1\":{\"0\":1,\"30\":1,\"31\":1,\"32\":1},\"2\":{\"30\":1,\"31\":1,\"32\":1},\"3\":{\"1\":1}}],[\"vue\",{\"0\":{\"27\":1},\"2\":{\"27\":1}}],[\"vuepress\",{\"0\":{\"5\":1},\"2\":{\"5\":1},\"3\":{\"29\":1}}],[\"v\",{\"0\":{\"0\":1,\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}]],\"serializationVersion\":2},\"/\":{\"documentCount\":239,\"nextId\":239,\"documentIds\":{\"0\":\"v-184f4da6#一、个人优势\",\"1\":\"v-184f4da6#二、工作经历\",\"2\":\"v-184f4da6#_2-1-国泰新点软件股份有限公司\",\"3\":\"v-184f4da6#_2-1-1-工作内容\",\"4\":\"v-184f4da6#_2-1-2-工作业绩\",\"5\":\"v-184f4da6#_2-2-国泰新点软件股份有限公司\",\"6\":\"v-184f4da6#_2-2-1-工作内容\",\"7\":\"v-184f4da6#_2-2-2-工作业绩\",\"8\":\"v-184f4da6#_2-3-国泰新点软件股份有限公司\",\"9\":\"v-184f4da6#_2-3-1-工作内容\",\"10\":\"v-184f4da6#_2-3-2-工作业绩\",\"11\":\"v-184f4da6#三、项目经历\",\"12\":\"v-184f4da6#_3-1、搭建公司devops体系\",\"13\":\"v-184f4da6#_3-1-1-工作内容\",\"14\":\"v-184f4da6#_3-1-2-工作业绩\",\"15\":\"v-184f4da6#_3-2、产品微服务化重构\",\"16\":\"v-184f4da6#_3-2-1-工作内容\",\"17\":\"v-184f4da6#_3-2-2-工作业绩\",\"18\":\"v-184f4da6#_3-3-统一认证框架\",\"19\":\"v-184f4da6#_3-3-1-工作内容\",\"20\":\"v-184f4da6#_3-3-2-工作业绩\",\"21\":\"v-184f4da6#_3-4、个人项目\",\"22\":\"v-184f4da6#_6-1-工作内容\",\"23\":\"v-184f4da6#_6-2-工作业绩\",\"24\":\"v-638c1d18#目录\",\"25\":\"v-4bd1b706#git常用命令\",\"26\":\"v-4bd1b706#git配置\",\"27\":\"v-56155b0b#部署\",\"28\":\"v-56155b0b#监控linux\",\"29\":\"v-56155b0b#prometheus配置\",\"30\":\"v-56155b0b#监控mysql\",\"31\":\"v-76fa89e8#medusa编译\",\"32\":\"v-76fa89e8#medusa暴力破解ssh\",\"33\":\"v-76fa89e8#medusa命令详解\",\"34\":\"v-76fa89e8\",\"35\":\"v-d2f82416#nmap-编译\",\"36\":\"v-d2f82416\",\"37\":\"v-95ad2ff2#ubuntu开启ssh远程登录\",\"38\":\"v-95ad2ff2#ssh免密登录\",\"39\":\"v-95ad2ff2#在本地windows上生成公钥私钥对\",\"40\":\"v-95ad2ff2#将公钥放入linux服务器\",\"41\":\"v-95ad2ff2#vscode远程插件指定私钥\",\"42\":\"v-95ad2ff2#禁止ssh用户名密码登录\",\"43\":\"v-31936b48#学术加速\",\"44\":\"v-31936b48#磁盘分区与挂载\",\"45\":\"v-31936b48#查看空闲磁盘空间\",\"46\":\"v-31936b48#新建分区\",\"47\":\"v-31936b48#格式化分区\",\"48\":\"v-31936b48#检测分区\",\"49\":\"v-31936b48#移动文件\",\"50\":\"v-31936b48#磁盘挂载\",\"51\":\"v-31936b48#查看挂载\",\"52\":\"v-6e2ab9da#目录\",\"53\":\"v-190004b0#一、准备知识\",\"54\":\"v-190004b0#_1-1-c-的编译过程\",\"55\":\"v-190004b0#_1-2-静态链接库和动态链接库\",\"56\":\"v-190004b0#_1-3-为什么需要cmake\",\"57\":\"v-190004b0#_1-3-1-g-命令行编译\",\"58\":\"v-190004b0#_1-3-2-cmake简介\",\"59\":\"v-190004b0#二、cmake基础知识\",\"60\":\"v-190004b0#_2-1-安装\",\"61\":\"v-190004b0#_2-2-第一个cmake例子\",\"62\":\"v-190004b0#_2-3-语法基础\",\"63\":\"v-190004b0#_2-3-1-指定版本\",\"64\":\"v-190004b0#_2-3-2-设置项目\",\"65\":\"v-190004b0#_2-3-3-添加可执行文件目标\",\"66\":\"v-190004b0#_2-3-4-生成静态库并链接\",\"67\":\"v-190004b0#_2-3-5-生成动态库并连接\",\"68\":\"v-190004b0#_2-3-6-cmake-中的-public、private、interface\",\"69\":\"v-190004b0#_2-3-7-变量\",\"70\":\"v-190004b0#_2-3-8-include引入其他代码\",\"71\":\"v-190004b0#_2-3-9-条件控制\",\"72\":\"v-190004b0#_2-3-10-cmake分步编译\",\"73\":\"v-190004b0#_2-3-11-生成器表达式\",\"74\":\"v-190004b0#_2-3-12-函数和宏\",\"75\":\"v-190004b0#_2-3-13-设置安装\",\"76\":\"v-190004b0#_2-3-14-寻找依赖-find-package\",\"77\":\"v-190004b0#三、opencv-cmake示例\",\"78\":\"v-16ccd7d7#一、visual-studio-code相关信息\",\"79\":\"v-16ccd7d7#二、python开发环境配置\",\"80\":\"v-16ccd7d7#三、ubuntu安装环境\",\"81\":\"v-16ccd7d7#四、c-开发环境配置\",\"82\":\"v-16ccd7d7#五、第一个c-程序\",\"83\":\"v-16ccd7d7#六、附录-vs-code-中变量解释\",\"84\":\"v-2ab91088#quick-start\",\"85\":\"v-2ab91088#build-with-ffmpeg-support\",\"86\":\"v-2ab91088#build-core-modules\",\"87\":\"v-2ab91088#install\",\"88\":\"v-2ab91088\",\"89\":\"v-0a7030ed#什么是qsv文件\",\"90\":\"v-0a7030ed#头部信息\",\"91\":\"v-0a7030ed#索引信息\",\"92\":\"v-0a7030ed#json字符串\",\"93\":\"v-0a7030ed#视频分段信息\",\"94\":\"v-0a7030ed#总结\",\"95\":\"v-0a7030ed#后记\",\"96\":\"v-5d439e64#创建类\",\"97\":\"v-5d439e64#通用方法\",\"98\":\"v-5d439e64#逐字节读取文件\",\"99\":\"v-5d439e64#字节数组转16进制字符串\",\"100\":\"v-5d439e64#字节数组转int\",\"101\":\"v-5d439e64#老版本解密算法\",\"102\":\"v-5d439e64#新版本解密算法\",\"103\":\"v-5d439e64#获取qsv头部信息\",\"104\":\"v-5d439e64#获取json数据\",\"105\":\"v-5d439e64#提取视频信息\",\"106\":\"v-5d439e64#参考资料\",\"107\":\"v-5d439e64#往期系列\",\"108\":\"v-7bb63861#about-npm\",\"109\":\"v-7bb63861#using-npm\",\"110\":\"v-8dc8c832#intro\",\"111\":\"v-8dc8c832#about\",\"112\":\"v-8dc8c832#installing-and-updating\",\"113\":\"v-8dc8c832#install-update-script\",\"114\":\"v-8dc8c832#troubleshooting-on-linux\",\"115\":\"v-8dc8c832#usage\",\"116\":\"v-8dc8c832#use-a-mirror-of-node-binaries\",\"117\":\"v-9362ca3c#usage\",\"118\":\"v-9362ca3c\",\"119\":\"v-a3f8969a#注册\",\"120\":\"v-a3f8969a#查看runner命令\",\"121\":\"v-a3f8969a#查看runner配置文件\",\"122\":\"v-a3f8969a#客户端构建路径\",\"123\":\"v-83c1c1da#安装python环境\",\"124\":\"v-83c1c1da#安装git\",\"125\":\"v-83c1c1da#安装环境\",\"126\":\"v-83c1c1da#installation-and-running\",\"127\":\"v-83c1c1da#automatic-installation-on-windows\",\"128\":\"v-83c1c1da#automatic-installation-on-linux\",\"129\":\"v-83c1c1da#installation-on-apple-silicon\",\"130\":\"v-8058109c#反向词\",\"131\":\"v-8058109c\",\"132\":\"v-3e0e47ea#目录\",\"133\":\"v-5f8d07eb#介绍\",\"134\":\"v-5f8d07eb#一、eclipse插件\",\"135\":\"v-5f8d07eb#_1-1-介绍\",\"136\":\"v-5f8d07eb#_1-2-创建插件工程\",\"137\":\"v-5f8d07eb#_1-3-创建junit-listener\",\"138\":\"v-5f8d07eb#_1-4-实现junit-listener\",\"139\":\"v-5f8d07eb#_1-5-引入jar包\",\"140\":\"v-5f8d07eb#_1-6-启动调试\",\"141\":\"v-5f8d07eb#_1-7-导出插件\",\"142\":\"v-5f8d07eb#二、idea插件\",\"143\":\"v-5f8d07eb#_2-1-介绍\",\"144\":\"v-5f8d07eb#_2-2-创建插件工程\",\"145\":\"v-5f8d07eb#_2-3-创建junit-listener\",\"146\":\"v-5f8d07eb#_2-4-实现junit-listener\",\"147\":\"v-5f8d07eb#_2-5-引入jar包\",\"148\":\"v-5f8d07eb#_2-6-启动调试\",\"149\":\"v-5f8d07eb#_2-7-导出插件\",\"150\":\"v-dee51094#参数详解\",\"151\":\"v-dee51094#源码解析\",\"152\":\"v-dee51094#try-to-avoid-xx-usegclogfilerotation\",\"153\":\"v-dee51094#a-losing-old-gc-logs\",\"154\":\"v-dee51094#b-mixed-up-gc-logs\",\"155\":\"v-dee51094#c-forwarding-gc-logs-to-a-central-location\",\"156\":\"v-dee51094#d-tooling\",\"157\":\"v-dee51094#recommended-solution\",\"158\":\"v-1ae5788d#配置\",\"159\":\"v-1ae5788d#原理\",\"160\":\"v-1ae5788d#agentmojo\",\"161\":\"v-1ae5788d#faq\",\"162\":\"v-1ae5788d\",\"163\":\"v-76945eec#default生命周期\",\"164\":\"v-76945eec#plugin-bindings-for-pom-packaging\",\"165\":\"v-76945eec#plugin-bindings-for-jar-packaging\",\"166\":\"v-76945eec#plugin-bindings-for-ejb-packaging\",\"167\":\"v-76945eec#plugin-bindings-for-maven-plugin-packaging\",\"168\":\"v-76945eec#plugin-bindings-for-war-packaging\",\"169\":\"v-76945eec#plugin-bindings-for-ear-packaging\",\"170\":\"v-76945eec#plugin-bindings-for-rar-packaging\",\"171\":\"v-76945eec#clean生命周期\",\"172\":\"v-76945eec#site生命周期\",\"173\":\"v-76945eec\",\"174\":\"v-7420a911#about-apache-maven-surefire\",\"175\":\"v-7420a911#project-documentation\",\"176\":\"v-7420a911#maven-surefire-plugin\",\"177\":\"v-7420a911#maven-failsafe-plugin\",\"178\":\"v-7420a911#maven-surefire-report-plugin\",\"179\":\"v-7420a911#faq\",\"180\":\"v-2ed587f3#netty概述\",\"181\":\"v-2ed587f3#为什么使用netty\",\"182\":\"v-2ed587f3#nio的缺点\",\"183\":\"v-2ed587f3#netty的优点\",\"184\":\"v-2ed587f3#netty的使用场景\",\"185\":\"v-2ed587f3#netty的特点\",\"186\":\"v-2ed587f3#netty的架构\",\"187\":\"v-2ed587f3#功能特性\",\"188\":\"v-2ed587f3#核心组件\",\"189\":\"v-2ed587f3#bootstrap、serverbootstrap\",\"190\":\"v-2ed587f3#future、channelfuture\",\"191\":\"v-2ed587f3#channel\",\"192\":\"v-2ed587f3#selector\",\"193\":\"v-2ed587f3#nioeventloop\",\"194\":\"v-2ed587f3#nioeventloopgroup\",\"195\":\"v-2ed587f3#channelhandler\",\"196\":\"v-2ed587f3#channelhandlercontext\",\"197\":\"v-2ed587f3#channelpipeline\",\"198\":\"v-2ed587f3#netty服务端过程初始化并启动过程\",\"199\":\"v-2ed587f3#服务端netty的工作架构图\",\"200\":\"v-2ed587f3#示例项目\",\"201\":\"v-2ed587f3#参考文献\",\"202\":\"v-614c04f7#前言\",\"203\":\"v-614c04f7#一、logback介绍\",\"204\":\"v-614c04f7#二、logback配置\",\"205\":\"v-614c04f7#_2-1-pom依赖\",\"206\":\"v-614c04f7#_2-2-logback-xml配置\",\"207\":\"v-614c04f7#_2-3-logback-xml指定路径\",\"208\":\"v-614c04f7#_2-4-logback-xml默认配置\",\"209\":\"v-614c04f7#三、configuration标签\",\"210\":\"v-614c04f7#四、logger标签\",\"211\":\"v-614c04f7#五、root标签\",\"212\":\"v-614c04f7#六、appender标签\",\"213\":\"v-614c04f7#_6-1-consoleappender\",\"214\":\"v-614c04f7#_6-2-fileappender\",\"215\":\"v-614c04f7#_6-3-rollingfileappender\",\"216\":\"v-614c04f7#_6-3-1-fixedwindowrollingpolicy\",\"217\":\"v-614c04f7#_6-3-2-triggeringpolicy\",\"218\":\"v-614c04f7#_6-3-3-timebasedrollingpolicy\",\"219\":\"v-614c04f7#_6-3-4-sizeandtimebasedrollingpolicy\",\"220\":\"v-614c04f7#七、filter\",\"221\":\"v-614c04f7#_7-1-thresholdfilter\",\"222\":\"v-614c04f7#_7-2-levelfilter\",\"223\":\"v-614c04f7#参考文献\",\"224\":\"v-727d1ccd#前言\",\"225\":\"v-727d1ccd#一、原来的tomcat启动流程\",\"226\":\"v-727d1ccd#二、内嵌tomcat\",\"227\":\"v-727d1ccd#三、springboot启动tomcat的时机\",\"228\":\"v-727d1ccd#_3-1-servletwebserverapplicationcontext\",\"229\":\"v-727d1ccd#_3-2-tomcatservletwebserverfactory\",\"230\":\"v-727d1ccd#四、springboot中的tomcat如何加载servlet\",\"231\":\"v-727d1ccd#_4-1-servlet3-0标准可以不使用web-xml完成servlet的注册\",\"232\":\"v-727d1ccd#_4-2-springboot中的servletcontainerinitializer的实现类\",\"233\":\"v-727d1ccd#_4-3-servletcontainerinitializer的实现类执行onstartup方法的时机\",\"234\":\"v-727d1ccd#_4-4-分析tomcatstarter的onstartup方法\",\"235\":\"v-727d1ccd#_4-5-dispatcherservlet如何加载到tomcat容器\",\"236\":\"v-727d1ccd#总结\",\"237\":\"v-727d1ccd#个性化实现\",\"238\":\"v-727d1ccd#faq\"},\"fieldIds\":{\"id\":0,\"title\":1,\"header\":2,\"text\":3,\"customFields\":4},\"fieldLength\":{\"0\":[4,1,2,1],\"1\":[4,1,2,1],\"2\":[5,1,3,1],\"3\":[5,1,3,1],\"4\":[5,1,3,1],\"5\":[4,1,2,1],\"6\":[5,1,3,1],\"7\":[4,1,2,1],\"8\":[5,1,3,1],\"9\":[6,1,4,1],\"10\":[5,1,3,1],\"11\":[4,1,2,1],\"12\":[5,1,3,1],\"13\":[5,1,3,1],\"14\":[6,1,4,1],\"15\":[5,1,3,1],\"16\":[6,1,4,1],\"17\":[5,1,3,1],\"18\":[4,1,2,1],\"19\":[5,1,3,1],\"20\":[5,1,3,1],\"21\":[5,1,3,1],\"22\":[5,1,3,1],\"23\":[5,1,3,1],\"24\":[3,1,1,1],\"25\":[3,1,1,43],\"26\":[3,1,1,29],\"27\":[3,1,1,29],\"28\":[3,1,1,16],\"29\":[3,1,1,89],\"30\":[3,1,1,38],\"31\":[3,1,1,33],\"32\":[3,1,1,22],\"33\":[3,1,1,63],\"34\":[2,1,null,1],\"35\":[4,1,2,24],\"36\":[2,1,null,1],\"37\":[3,1,1,7],\"38\":[3,1,1,1],\"39\":[3,1,1,11],\"40\":[3,1,1,11],\"41\":[3,1,1,16],\"42\":[3,1,1,44],\"43\":[3,1,1,10],\"44\":[3,1,1,1],\"45\":[3,1,1,106],\"46\":[3,1,1,163],\"47\":[3,1,1,63],\"48\":[3,1,1,39],\"49\":[3,1,1,13],\"50\":[3,1,1,21],\"51\":[3,1,1,48],\"52\":[3,1,1,2],\"53\":[4,1,2,1],\"54\":[5,1,2,77],\"55\":[5,1,3,44],\"56\":[5,1,3,1],\"57\":[6,1,4,51],\"58\":[6,1,4,19],\"59\":[4,1,2,1],\"60\":[5,1,3,32],\"61\":[4,1,2,22],\"62\":[5,1,3,1],\"63\":[6,1,4,42],\"64\":[5,1,3,27],\"65\":[5,1,3,15],\"66\":[6,1,4,85],\"67\":[6,1,4,68],\"68\":[10,1,8,61],\"69\":[6,1,4,13],\"70\":[6,1,4,4],\"71\":[6,1,4,42],\"72\":[6,1,4,70],\"73\":[6,1,4,84],\"74\":[6,1,4,26],\"75\":[6,1,4,39],\"76\":[8,1,6,35],\"77\":[5,1,3,85],\"78\":[6,1,4,48],\"79\":[4,1,2,58],\"80\":[4,1,2,13],\"81\":[5,1,3,148],\"82\":[5,1,2,17],\"83\":[7,1,5,34],\"84\":[4,1,2,1],\"85\":[6,1,4,6],\"86\":[5,1,3,51],\"87\":[3,1,1,108],\"88\":[2,1,null,33],\"89\":[3,1,1,1],\"90\":[3,1,1,1],\"91\":[3,1,1,1],\"92\":[3,1,1,1],\"93\":[3,1,1,1],\"94\":[3,1,1,1],\"95\":[3,1,1,1],\"96\":[3,1,1,1],\"97\":[3,1,1,1],\"98\":[3,1,1,1],\"99\":[3,1,1,1],\"100\":[3,1,1,1],\"101\":[3,1,1,1],\"102\":[3,1,1,1],\"103\":[3,1,1,1],\"104\":[3,1,1,1],\"105\":[3,1,1,1],\"106\":[3,1,1,1],\"107\":[3,1,1,1],\"108\":[4,1,2,69],\"109\":[4,1,2,15],\"110\":[3,1,1,43],\"111\":[3,1,1,36],\"112\":[5,1,3,1],\"113\":[5,1,3,77],\"114\":[5,1,3,56],\"115\":[3,1,1,110],\"116\":[8,1,6,69],\"117\":[3,1,1,22],\"118\":[2,1,null,29],\"119\":[3,3,1,15],\"120\":[3,3,1,4],\"121\":[3,3,1,7],\"122\":[3,3,1,6],\"123\":[3,2,1,1],\"124\":[3,2,1,1],\"125\":[3,2,1,1],\"126\":[5,2,3,1],\"127\":[6,2,4,1],\"128\":[6,2,4,1],\"129\":[6,2,4,1],\"130\":[3,1,1,1],\"131\":[2,1,null,10],\"132\":[3,2,1,2],\"133\":[3,2,1,7],\"134\":[4,2,2,1],\"135\":[4,2,2,6],\"136\":[5,2,3,44],\"137\":[6,2,4,41],\"138\":[6,2,4,38],\"139\":[5,2,3,6],\"140\":[5,2,3,11],\"141\":[5,2,3,14],\"142\":[4,2,2,1],\"143\":[5,2,3,6],\"144\":[4,2,2,10],\"145\":[6,2,4,19],\"146\":[6,2,4,12],\"147\":[5,2,3,12],\"148\":[5,2,3,6],\"149\":[5,2,3,7],\"150\":[3,1,1,51],\"151\":[3,1,1,160],\"152\":[7,1,5,52],\"153\":[7,1,5,66],\"154\":[7,1,5,61],\"155\":[10,1,8,56],\"156\":[4,1,2,27],\"157\":[4,1,2,72],\"158\":[3,1,1,1],\"159\":[3,1,1,1],\"160\":[3,1,1,1],\"161\":[3,1,1,1],\"162\":[2,1,null,30],\"163\":[3,1,1,1],\"164\":[7,1,5,1],\"165\":[7,1,5,1],\"166\":[7,1,5,1],\"167\":[7,1,6,1],\"168\":[7,1,5,1],\"169\":[7,1,5,1],\"170\":[7,1,5,1],\"171\":[3,1,1,1],\"172\":[3,1,1,1],\"173\":[2,1,null,18],\"174\":[6,1,4,14],\"175\":[4,1,2,7],\"176\":[5,1,3,62],\"177\":[5,1,3,64],\"178\":[6,1,4,64],\"179\":[3,1,1,432],\"180\":[3,1,1,21],\"181\":[3,1,1,1],\"182\":[3,1,1,20],\"183\":[3,1,1,19],\"184\":[3,1,1,26],\"185\":[3,1,1,55],\"186\":[3,1,1,1],\"187\":[3,1,1,15],\"188\":[3,1,1,1],\"189\":[4,1,2,7],\"190\":[4,1,2,8],\"191\":[3,1,1,42],\"192\":[3,1,1,16],\"193\":[3,1,1,22],\"194\":[3,1,1,9],\"195\":[3,1,1,18],\"196\":[3,1,1,2],\"197\":[3,1,1,71],\"198\":[3,1,1,77],\"199\":[3,1,1,33],\"200\":[3,1,1,13],\"201\":[3,1,1,13],\"202\":[3,1,1,17],\"203\":[4,1,2,47],\"204\":[4,1,2,1],\"205\":[5,1,3,31],\"206\":[5,1,3,44],\"207\":[6,1,4,15],\"208\":[6,1,4,73],\"209\":[4,1,2,21],\"210\":[4,1,2,31],\"211\":[4,1,2,22],\"212\":[4,1,2,60],\"213\":[5,1,3,70],\"214\":[5,1,3,57],\"215\":[5,1,3,42],\"216\":[6,1,4,81],\"217\":[6,1,4,19],\"218\":[5,1,3,91],\"219\":[6,1,4,61],\"220\":[4,1,2,19],\"221\":[5,1,3,51],\"222\":[5,1,3,61],\"223\":[3,1,1,10],\"224\":[3,2,1,8],\"225\":[4,2,2,233],\"226\":[4,2,2,73],\"227\":[4,2,2,7],\"228\":[5,2,3,69],\"229\":[5,2,3,121],\"230\":[4,2,2,1],\"231\":[7,2,5,47],\"232\":[5,2,3,57],\"233\":[5,2,3,91],\"234\":[4,2,2,141],\"235\":[5,2,3,124],\"236\":[3,2,1,15],\"237\":[3,2,1,5],\"238\":[3,2,1,247]},\"averageFieldLength\":[4.255230125523013,1.2008368200836825,2.319404238050881,30.012552301255234],\"storedFields\":{\"0\":{\"title\":\"个人简介\",\"header\":\"一、个人优势\",\"text\":[]},\"1\":{\"title\":\"个人简介\",\"header\":\"二、工作经历\",\"text\":[]},\"2\":{\"title\":\"个人简介\",\"header\":\"2.1 国泰新点软件股份有限公司\",\"text\":[]},\"3\":{\"title\":\"个人简介\",\"header\":\"2.1.1 工作内容\",\"text\":[]},\"4\":{\"title\":\"个人简介\",\"header\":\"2.1.2 工作业绩\",\"text\":[]},\"5\":{\"title\":\"个人简介\",\"header\":\"2.2 国泰新点软件股份有限公司\",\"text\":[]},\"6\":{\"title\":\"个人简介\",\"header\":\"2.2.1 工作内容\",\"text\":[]},\"7\":{\"title\":\"个人简介\",\"header\":\"2.2.2 工作业绩\",\"text\":[]},\"8\":{\"title\":\"个人简介\",\"header\":\"2.3 国泰新点软件股份有限公司\",\"text\":[]},\"9\":{\"title\":\"个人简介\",\"header\":\"2.3.1 工作内容\",\"text\":[]},\"10\":{\"title\":\"个人简介\",\"header\":\"2.3.2 工作业绩\",\"text\":[]},\"11\":{\"title\":\"个人简介\",\"header\":\"三、项目经历\",\"text\":[]},\"12\":{\"title\":\"个人简介\",\"header\":\"3.1、搭建公司DevOps体系\",\"text\":[]},\"13\":{\"title\":\"个人简介\",\"header\":\"3.1.1 工作内容\",\"text\":[]},\"14\":{\"title\":\"个人简介\",\"header\":\"3.1.2 工作业绩\",\"text\":[]},\"15\":{\"title\":\"个人简介\",\"header\":\"3.2、产品微服务化重构\",\"text\":[]},\"16\":{\"title\":\"个人简介\",\"header\":\"3.2.1 工作内容\",\"text\":[]},\"17\":{\"title\":\"个人简介\",\"header\":\"3.2.2 工作业绩\",\"text\":[]},\"18\":{\"title\":\"个人简介\",\"header\":\"3.3 统一认证框架\",\"text\":[]},\"19\":{\"title\":\"个人简介\",\"header\":\"3.3.1 工作内容\",\"text\":[]},\"20\":{\"title\":\"个人简介\",\"header\":\"3.3.2 工作业绩\",\"text\":[]},\"21\":{\"title\":\"个人简介\",\"header\":\"3.4、个人项目\",\"text\":[]},\"22\":{\"title\":\"个人简介\",\"header\":\"6.1 工作内容\",\"text\":[]},\"23\":{\"title\":\"个人简介\",\"header\":\"6.2 工作业绩\",\"text\":[]},\"24\":{\"title\":\"前沿技术\",\"header\":\"目录\",\"text\":[\"人工智能\"]},\"25\":{\"title\":\"git\",\"header\":\"git常用命令\",\"text\":[\"git remote -v # 显示所有远程仓库 git remote rm newOrigin # 删除远程仓库 git remote add origin main # 新增远程仓库 git remote set-url origin https://github.com/lurj7988/blog.git # 设置远程仓库地址 git checkout # 显示所有本地仓库 git branch -a # 查看所有分支 git branch main # 创建一个名为main的新分支 git branch -d master # 删除分支 git checkout main # 切换到新的分支 git push origin main --force # 强制将本地仓库覆盖到远程仓库 git push --set-upstream origin main # fatal: The current branch main has no upstream branch. To push the current branch and set the remote as upstream \"]},\"26\":{\"title\":\"git\",\"header\":\"git配置\",\"text\":[\"proxy配置代理了clash的7890端口，实现通过vpn访问github\",\"[user] name = lurj email = naulurenjie@outlook.com [credential \\\"http://192.168.0.200\\\"] provider = generic [credential \\\"https://gitee.com\\\"] provider = generic [credential \\\"http://192.168.217.8\\\"] provider = generic [http] proxy = 192.168.188.1:7890 [https] proxy = 192.168.188.1:7890 [credential] helper = store \"]},\"27\":{\"title\":\"grafana\",\"header\":\"部署\",\"text\":[\"docker pull bitnami/prometheus:latest docker run -d --name=prometheus --net=host -v /opt/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml bitnami/prometheus:latest docker pull grafana/grafana docker run -d --name=grafana --net=host grafana/grafana:latest \",\"grafana访问地址http://192.168.220.235:3000/默认密码admin/admin\",\"prometheus访问地址http://192.168.220.235:9090/\",\"grafana监控模板下载地址https://grafana.com/grafana/dashboards/\"]},\"28\":{\"title\":\"grafana\",\"header\":\"监控linux\",\"text\":[\"安装包github下载地址https://github.com/prometheus/node_exporter\",\"./node_exporter >log.file 2>&1 & curl http://localhost:9100/metrics \"]},\"29\":{\"title\":\"grafana\",\"header\":\"prometheus配置\",\"text\":[\"# my global config global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. # scrape_timeout is set to the global default (10s). # Alertmanager configuration alerting: alertmanagers: - static_configs: - targets: # - alertmanager:9093 # Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files: # - \\\"first_rules.yml\\\" # - \\\"second_rules.yml\\\" # A scrape configuration containing exactly one endpoint to scrape: # Here it's Prometheus itself. scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. - job_name: \\\"prometheus\\\" # metrics_path defaults to '/metrics' # scheme defaults to 'http'. static_configs: - targets: [\\\"localhost:9090\\\"] # add a new node - job_name: \\\"prometheus_agent\\\" static_configs: - targets: [\\\"192.168.220.216:9100\\\",\\\"192.168.220.215:9100\\\"] - job_name: 'mysql' static_configs: - targets: [\\\"192.168.220.215:9104\\\"] \"]},\"30\":{\"title\":\"grafana\",\"header\":\"监控mysql\",\"text\":[\"安装包github下载地址https://github.com/prometheus/mysqld_exporter\",\"touch mysqld_exporter.cnf nohup ./mysqld_exporter --config.my-cnf=mysqld_exporter.cnf & curl http://localhost:9104/metrics \",\"[client] user=exporter password=eXpIHB666QWE! \",\"create user 'exporter'@'127.0.0.1' IDENTIFIED BY 'eXpIHB666QWE!'; GRANT SELECT, PROCESS, SUPER, REPLICATION CLIENT, RELOAD ON *.* TO 'exporter'@'127.0.0.1'; \"]},\"31\":{\"title\":\"medusa\",\"header\":\"medusa编译\",\"text\":[\"./configure --build=x86-pc-linux-gnu # 需要加上参数否则会报下面的错 make -j 4 && make install \",\"注意\",\"checking build system type... config.sub: too many arguments\",\"Try `config.sub --help' for more information.\",\"configure: error: /bin/sh ./config.sub x86_64-unknown-linux-gnu\"]},\"32\":{\"title\":\"medusa\",\"header\":\"medusa暴力破解ssh\",\"text\":[\"usage\",\"medusa -M ssh -H host.txt -U users.txt -p password medusa -M ssh -h 192.168.109.235 -u root -p 'Epoint123!@#' medusa -M ssh -h 192.168.109.235 -u root -P passwords.txt medusa -M ssh -H host.txt -U users.txt -p password \"]},\"33\":{\"title\":\"medusa\",\"header\":\"medusa命令详解\",\"text\":[\"medusa -h #目标IP地址 medusa -H #包含目标IP地址的文件 medusa -u #指定测试的用户名 medusa -U #指定测试的用户名字典 medusa -p #指定测试的密码 medusa -P #指定测试的密码字典 medusa -C #指定测试格式为user:password的字典 medusa -O #将输出结果保存在指定的文件 medusa -e #[n/s/ns] 额外的密码检测(n:空密码 s:用户名=密码) medusa -M #制定执行的模块(不带.mod扩展名) medusa -m #指定传递给模块的参数 medusa -d #查看支持破解的模块 medusa -s #启动SSL medusa -g #设置连接超时时间(默认值3) medusa -r #设置重试的次数(默认值3) medusa -t #设置同时测试的登陆总数 medusa -T #设置同时测试的主机总数 medusa -f #在破解得到第一个用户名或者密码后停止扫描主机 medusa -F #在任何竹主机上面破解得到第一个用户名或面后停止扫描 medusa -b #不显示软件启动时候的版本信息 medusa -q #显示模块的使用信息 medusa -v #详细等级(0-6) medusa -w #错误调试等级(0-10) medusa -V #显示版本信息 medusa -Z #恢复之前终端的扫描 \"]},\"34\":{\"title\":\"medusa\",\"text\":[\"Github\"]},\"35\":{\"title\":\"nmap\",\"header\":\"nmap 编译\",\"text\":[\"下载地址\",\"yum -y install bzip2 tar -xvf nmap-7.91.tar.bz2 ./configure --build=x86-pc-linux-gnu yum -y install gcc+ gcc-c++ make -j 4 && make install nmap --version \"]},\"36\":{\"title\":\"nmap\",\"text\":[\"Github\"]},\"37\":{\"title\":\"ssh\",\"header\":\"ubuntu开启SSH远程登录\",\"text\":[\"sudo apt install -y openssh-server \"]},\"38\":{\"title\":\"ssh\",\"header\":\"ssh免密登录\",\"text\":[]},\"39\":{\"title\":\"ssh\",\"header\":\"在本地Windows上生成公钥私钥对\",\"text\":[\"生产目录位于C:\\\\Users\\\\naulu\\\\.ssh，其中id_rsa为私钥，id_rsa.pub为公钥\",\"ssh-keygen \"]},\"40\":{\"title\":\"ssh\",\"header\":\"将公钥放入linux服务器\",\"text\":[\"将公钥中的内容添加到linux用户目录下的.ssh目录下的authorized_keys文件中。\",\"cd ~/.ssh touch authorized_keys vim authorized_keys \"]},\"41\":{\"title\":\"ssh\",\"header\":\"vscode远程插件指定私钥\",\"text\":[\"Host 192.168.188.128 HostName 192.168.188.128 User lurj IdentityFile C:/Users/naulu/.ssh/id_rsa \"]},\"42\":{\"title\":\"ssh\",\"header\":\"禁止ssh用户名密码登录\",\"text\":[\"修改 /etc/ssh/sshd_config\",\"$ sudo vim /etc/ssh/sshd_config ... # To disable tunneled clear text passwords, change to no here! #PasswordAuthentication yes #PermitEmptyPasswords no PasswordAuthentication no # Change to no to disable s/key passwords #ChallengeResponseAuthentication yes ChallengeResponseAuthentication no ... \",\"把PasswordAuthentication改成no，则ssh再发起登录的时候就会提示如下错误：\",\"ssh : Permission denied (publickey,gssapi-with-mic) \",\"通常禁止了用户名密码登录之后，需要配置public/private key pair进行登录，即ssh使用-i参数指定private key文件登录。\",\"反之如果ssh使用用户名密码登录遇到上述错误，则需要把 /etc/ssh/sshd_config配置文件里的配置项PasswordAuthentication改成yes。\"]},\"43\":{\"title\":\"ubuntu\",\"header\":\"学术加速\",\"text\":[\"export http_proxy=http://192.168.188.1:7890 && export https_proxy=http://192.168.188.1:7890 \"]},\"44\":{\"title\":\"ubuntu\",\"header\":\"磁盘分区与挂载\",\"text\":[\"参考链接\"]},\"45\":{\"title\":\"ubuntu\",\"header\":\"查看空闲磁盘空间\",\"text\":[\"进入以后，m表示帮助，F表示查看空闲的磁盘，q表示退出，d表示删除分区，n表示新建分区，w表示保存配置等\",\"lurj@lurj:~$ sudo fdisk /dev/sda Welcome to fdisk (util-linux 2.37.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. GPT PMBR size mismatch (41943039 != 167772159) will be corrected by write. This disk is currently in use - repartitioning is probably a bad idea. It's recommended to umount all file systems, and swapoff all swap partitions on this disk. Command (m for help): F Unpartitioned space /dev/sda: 60 GiB, 64425541120 bytes, 125831135 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes Start End Sectors Size 41940992 167772126 125831135 60G Command (m for help): All unwritten changes will be lost, do you really want to quit? y \"]},\"46\":{\"title\":\"ubuntu\",\"header\":\"新建分区\",\"text\":[\"选择n指令进去新建分区模式，选择默认分区号，根据指令设置磁盘大小，选择p指令查看分区是否添加成功，选择w指令保存配置，选择q指令退出不保存配置。\",\"lurj@lurj:~$ sudo fdisk /dev/sda Welcome to fdisk (util-linux 2.37.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. GPT PMBR size mismatch (41943039 != 167772159) will be corrected by write. This disk is currently in use - repartitioning is probably a bad idea. It's recommended to umount all file systems, and swapoff all swap partitions on this disk. Command (m for help): n Partition number (4-128, default 4): First sector (41940992-167772126, default 41940992): Last sector, +/-sectors or +/-size{K,M,G,T,P} (41940992-167772126, default 167772126): Created a new partition 4 of type 'Linux filesystem' and of size 60 GiB. Command (m for help): p Disk /dev/sda: 80 GiB, 85899345920 bytes, 167772160 sectors Disk model: VMware Virtual S Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: gpt Disk identifier: 209A5215-C303-4C38-802F-FADB733C53A6 Device Start End Sectors Size Type /dev/sda1 2048 4095 2048 1M BIOS boot /dev/sda2 4096 3719167 3715072 1.8G Linux filesystem /dev/sda3 3719168 41940991 38221824 18.2G Linux filesystem /dev/sda4 41940992 167772126 125831135 60G Linux filesystem Command (m for help): w The partition table has been altered. Syncing disks. \"]},\"47\":{\"title\":\"ubuntu\",\"header\":\"格式化分区\",\"text\":[\"对新分区/dev/sda4进行格式化，注意，不格式化不能对分区进行挂载\",\"lurj@lurj:~$ sudo mkfs -t ext4 /dev/sda4 mke2fs 1.46.5 (30-Dec-2021) Creating filesystem with 15728640 4k blocks and 3939840 inodes Filesystem UUID: 71fe7d8e-63cf-42c1-abe3-686063d202ce Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424 Allocating group tables: done Writing inode tables: done Creating journal (65536 blocks): done Writing superblocks and filesystem accounting information: done \"]},\"48\":{\"title\":\"ubuntu\",\"header\":\"检测分区\",\"text\":[\"lurj@lurj:~$ sudo e2fsck -f /dev/sda4 e2fsck 1.46.5 (30-Dec-2021) Pass 1: Checking inodes, blocks, and sizes Pass 2: Checking directory structure Pass 3: Checking directory connectivity Pass 4: Checking reference counts Pass 5: Checking group summary information /dev/sda4: 11/3939840 files (0.0% non-contiguous), 326171/15728640 blocks \"]},\"49\":{\"title\":\"ubuntu\",\"header\":\"移动文件\",\"text\":[\"将需要挂载的目录中的文件先移动出去\",\"cd /home/lurj # 查看隐藏文件 ls -a # 移动文件包含隐藏文件 sudo mv *.[^.]* /opt/ \"]},\"50\":{\"title\":\"ubuntu\",\"header\":\"磁盘挂载\",\"text\":[\"# 此方法只能临时挂载，系统重启后就失效 sudo mount /dev/sda4 /home/lurj # 设置开机自动挂载，编辑/etc/fstab文件，添加如下内容 sudo vim /etc/fstab # /dev/sda4 /home/lurj ext4 defaults 0 0 # 取消挂载 sudo umount /home/lurj \"]},\"51\":{\"title\":\"ubuntu\",\"header\":\"查看挂载\",\"text\":[\"lurj@lurj:~$ df -h Filesystem Size Used Avail Use% Mounted on tmpfs 1.6G 1.6M 1.6G 1% /run /dev/mapper/ubuntu--vg-ubuntu--lv 9.8G 3.9G 5.5G 42% / tmpfs 7.8G 0 7.8G 0% /dev/shm tmpfs 5.0M 0 5.0M 0% /run/lock /dev/sda2 1.8G 253M 1.4G 16% /boot tmpfs 1.6G 4.0K 1.6G 1% /run/user/1000 /dev/sda4 59G 5.4G 51G 10% /home/lurj \"]},\"52\":{\"title\":\"人工智能\",\"header\":\"目录\",\"text\":[\"Stable Diffusion\"]},\"53\":{\"title\":\"cmake\",\"header\":\"一、准备知识\",\"text\":[]},\"54\":{\"title\":\"cmake\",\"header\":\"1.1 C++的编译过程\",\"text\":[\"使用g++等编译工具，从源码生成最终的可执行文件一般有这几步：预处理（Preprocess）、编译（Compile）、汇编（assemble）、链接（link）。\",\"imgcompile.jpg\",\"输入g++ --help可以看到对应命令：\",\"-E Preprocess only; do not compile, assemble or link. -S Compile only; do not assemble or link. -c Compile and assemble, but do not link. -o <file> Place the output into <file>. \",\"以下面程序为例：\",\"#include <iostream> int main() { std::cout << \\\"Hello World!\\\" << std::endl; return 0; } \",\"第一步：预处理 C++中预处理指令以 # 开头。在预处理阶段，会对#define进行宏展开，处理#if，#else等条件编译指令，递归处理#include。这一步需要我们添加所有头文件的引用路径。\",\"# 将xx.cpp源文件预处理成xx.i文件（文本文件） g++ -E main.cpp -o main.i \",\"第二步：编译\",\"检查代码的规范性和语法错误等，检查完毕后把代码翻译成汇编语言文件。\",\"# 将xx.i文件编译为xx.s的汇编文件（文本文件） g++ -S main.i -o main.s \",\"第三步：汇编 基于汇编语言文件生成二进制格式的目标文件。\",\"# 将xx.s文件汇编成xx.o的二进制目标文件 g++ -c main.s -o main.o \",\"第四步：链接\",\"将目标代码与所依赖的库文件进行关联或者组装，合成一个可执行文件\",\"# 将xx.o二进制文件进行链接，最终生成可执行程序 g++ main.o -o main \"]},\"55\":{\"title\":\"cmake\",\"header\":\"1.2 静态链接库和动态链接库\",\"text\":[\"所谓静态和动态，其区别是链接的阶段不一样。\",\"静态链接库名称一般是lib库名称.a（.a代表archive library），其链接发生在编译环节。一个工程如果依赖一个静态链接库，其输出的库或可执行文件会将静态链接库*.a打包到该工程的输出文件中（可执行文件或库），因此生成的文件比较大，但在运行时也就不再需要库文件了。\",\"而动态链接库的链接发生在程序的执行过程中，其在编译环节仅执行链接检查，而不进行真正的链接，这样可以节省系统的开销。动态库一般后缀名为*.so（.so代表shared object，Linux：lib库名称.so ，macOS：lib库名称.dylib）。动态链接库加载后，在内存中仅保存一份拷贝，多个程序依赖它时，不会重复加载和拷贝，这样也节省了内存的空间。\",\"以下图为例\",\"工程A和B依赖静态链接库 static library，A和B在运行时，内存中会有多份static library；\",\"工程A和B依赖动态链接库 shared library，A和B在运行时，内存中只有一份 shared library（shared：共享）。\",\"img20230122221807.jpg\",\"以上只是非常简单的一个解释以区分动态链接库和静态链接库。更多底层的知识需要单独进行深入讲解。\"]},\"56\":{\"title\":\"cmake\",\"header\":\"1.3 为什么需要CMake\",\"text\":[]},\"57\":{\"title\":\"cmake\",\"header\":\"1.3.1 g++ 命令行编译\",\"text\":[\"当我们编译附件中1.hello_world时，我们可以运行\",\"g++ main.cpp -o main \",\"当我们需要引入外部库时，如附件中的2.external_libs，需要引入gflags（Google开源的命令行参数处理库），我们则需要运行：\",\"# 安装gflags sudo apt-get install libgflags-dev libgflags2.2 // -lgflags表示链接gflags库，-o main表示输出文件名为main g++ main.cpp -lgflags -o main # 或者： # 安装pkg-config sudo apt-get install pkg-config // pkg-config是一个工具，用于查找和管理安装在系统上的库文件，--cflags --libs gflags表示查找gflags库的头文件和库文件的路径，-o main表示输出文件名为main g++ main.cpp `pkg-config --cflags --libs gflags` -o main # 测试输出 ./main --age 31 --name alice \",\"有些时候有一些常用库我们也不用手动添加头文件或链接库路径，通常g++能在默认查询路径中找到他们。当我们的项目文件变得多起来，引入的外部库也多起来时，命令行编译这种方式就会变得十分臃肿，也不方便调试和编辑。通常在测试单个文件时会使用命令行进行编译，但不推荐在一个实际项目中使用命令行编译。\"]},\"58\":{\"title\":\"cmake\",\"header\":\"1.3.2 CMake简介\",\"text\":[\"在实际工作中推荐使用CMake构建C++项目，CMake是用于构建、测试和软件打包的开源跨平台工具；\",\"特性：\",\"自动搜索可能需要的程序、库和头文件的能力；\",\"独立的构建目录（如build），可以安全清理\",\"支持复杂的自定义命令（下载、生成各种文件）\",\"自定义配置可选组件\",\"从简单的文本文件（CMakeLists.txt）自动生成工作区和项目的能力\",\"在主流平台上自动生成文件依赖项并支持并行构建\",\"几乎支持所有的IDE\"]},\"59\":{\"title\":\"cmake\",\"header\":\"二、CMake基础知识\",\"text\":[]},\"60\":{\"title\":\"cmake\",\"header\":\"2.1 安装\",\"text\":[\"ubuntu上请执行\",\"sudo apt install cmake -y \",\"或者编译安装：\",\"# 以v3.25.1版本为例 git clone -b v3.25.1 https://github.com/Kitware/CMake.git cd CMake # 你使用`--prefix`来指定安装路径，或者去掉`--prefix`,安装在默认路径。 ./bootstrap --prefix=<安装路径> && make && sudo make install # 验证 cmake --version \"]},\"61\":{\"title\":\"cmake\",\"header\":\"2.2 第一个CMake例子\",\"text\":[\"附件位置：3.first_cmake\",\"# 第一步：配置，-S 指定源码目录，-B 指定构建目录 cmake -S . -B build # 第二步：生成，--build 指定构建目录 cmake --build build # 运行 ./build/first_cmake \",\"vs code插件：\",\"安装twxs.cmake做代码提示；\",\"安装ms-vscode.cmake-tools界面操作。\"]},\"62\":{\"title\":\"cmake\",\"header\":\"2.3 语法基础\",\"text\":[]},\"63\":{\"title\":\"cmake\",\"header\":\"2.3.1 指定版本\",\"text\":[\"以附件：3.first_cmake/CMakeLists.txt为例：\",\"# CMake 最低版本号要求 cmake_minimum_required(VERSION 3.10) # first_cmake是项目名称，VERSION是版本号，DESCRIPTION是项目描述，LANGUAGES是项目语言 project(first_cmake VERSION 1.0.0 DESCRIPTION \\\"项目描述\\\" LANGUAGES CXX) # 添加一个可执行程序，first_cmake是可执行程序名称，main.cpp是源文件 add_executable(first_cmake main.cpp) \",\"命令cmake_minimum_required来指定当前工程所使用的CMake版本，不区分大小写的，通常用小写。VERSION是这个函数的一个特殊关键字，版本的值在关键字之后。CMake中的命令大多和cmake_minimum_required相似，不区分大小写，并有很多关键字来引导命令的参数输入（类似函数传参）。\"]},\"64\":{\"title\":\"cmake\",\"header\":\"2.3.2 设置项目\",\"text\":[\"以附件：3.first_cmake/CMakeLists.txt为例：\",\"project(ProjectName VERSION 1.0.0 DESCRIPTION \\\"项目描述\\\" LANGUAGES CXX) \",\"在CMakeLists.txt的开头，都会使用project来指定本项目的名称、版本、介绍、与使用的语言。在project中，第一个ProjectName（例子中用的是first_cmake）不需要参数，其他关键字都有参数。\"]},\"65\":{\"title\":\"cmake\",\"header\":\"2.3.3 添加可执行文件目标\",\"text\":[\"以附件：3.first_cmake/CMakeLists.txt为例：\",\"add_executable(first_cmake main.cpp) \",\"这里我们用到add_executable，其中第一个参数是最终生成的可执行文件名以及在CMake中定义的Target名。我们可以在CMake中继续使用Target的名字为Target的编译设置新的属性和行为。命令中第一个参数后面的参数都是编译目标所使用到的源文件。\"]},\"66\":{\"title\":\"cmake\",\"header\":\"2.3.4 生成静态库并链接\",\"text\":[\"附件位置：4.static_lib_test\",\"A.生成静态库\",\"#account_dir/CMakeLists.txt # 最低版本要求 cmake_minimum_required(VERSION 3.10) # 项目信息 project(Account) # 添加静态库，Linux下会生成libAccount.a add_library(Account STATIC Account.cpp Account.h) \",\"# 编译静态库后，会在build下生成 build/libAccount.a 静态库文件 account_dir/ ├── Account.cpp ├── Account.h ├── build │ └── libAccount.a └── CMakeLists.txt \",\"这里我们用到add_library, 和add_executable一样，Account为最终生成的库文件名（lib库名称.a），第二个参数是用于指定链接库为动态链接库（SHARED）还是静态链接库（STATIC），后面的参数是需要用到的源文件。\",\"B.链接\",\"# test_account/CMakeLists.txt # 最低版本要求 cmake_minimum_required(VERSION 3.10) # 项目名称 project(test_account) # 添加执行文件 add_executable(test_account test_account.cpp) # 添加头文件目录，如果不添加，找不到头文件 target_include_directories(test_account PUBLIC \\\"../account_dir\\\") # 添加库文件目录，如果不添加，找不到库文件 target_link_directories(test_account PUBLIC \\\"../account_dir/build\\\") # 添加目标链接库 target_link_libraries(test_account PRIVATE Account) \",\"# 编译后目录如下 4.static_lib_test/ ├── account_dir │ ├── Account.cpp │ ├── Account.h │ ├── build │ │ └── libAccount.a │ └── CMakeLists.txt └── test_account ├── build │ └── test_account ├── CMakeLists.txt └── test_account.cpp \",\"我们通过add_library和add_executable定义了Target，我们可以通过Target的名称为其添加属性，例如：\",\"# 指定目标包含的头文件目录 target_include_directories(test_account PUBLIC \\\"../account_dir\\\") # 添加库文件目录，如果不添加，找不到库文件 target_link_directories(test_account PUBLIC \\\"../account_dir/build\\\") # 指定目标链接的库 target_link_libraries(test_account PRIVATE Account) \",\"通过target_include_directories，我们给test_account添加了头文件引用路径\\\"../account_dir\\\"。上面的关键词PUBLIC,PRIVATE用于说明目标属性的作用范围，更多介绍参考下节。\",\"通过target_link_libraries，将前面生成的静态库libAccount.a链接给对象test_account，但此时还没指定库文件的目录，CMake无法定位库文件\",\"再通过target_link_directories，添加库文件的目录即可。\"]},\"67\":{\"title\":\"cmake\",\"header\":\"2.3.5 生成动态库并连接\",\"text\":[\"附件位置：5.dynamic_lib_test\",\"A.生成动态库\",\"#account_dir/CMakeLists.txt # 添加动态库，Linux下会生成libAccount.so add_library(Account SHARED Account.cpp Account.h) \",\"# 编译动态库后，会在build下生成 build/libAccount.so 动态库文件 account_dir/ ├── Account.cpp ├── Account.h ├── build │ └── libAccount.so └── CMakeLists.txt \",\"B.链接\",\"操作不变。\",\"# ldd查看依赖的动态库 ldd ./build/test_account libAccount.so => /home/enpei/Documents/course_cpp_tensorrt/course_5/src/5.dynamic_lib_test/test_account/../account_dir/build/libAccount.so (0x00007fb692cf1000) \",\"当然，也可以用一个CMakeLists.txt来一次性编译，参考附件6.build_together\",\"#6.build_together/CMakeLists.txt` # 最低版本要求 cmake_minimum_required(VERSION 3.10) # 项目信息 project(test_account) # 添加动态库 add_library(Account SHARED \\\"./account_dir/Account.cpp\\\" \\\"./account_dir/Account.h\\\") # 添加可执行文件 add_executable(test_account \\\"./test_account/test_account.cpp\\\") # 添加头文件 target_include_directories(test_account PUBLIC \\\"./account_dir\\\") # 添加链接库 target_link_libraries(test_account Account) \"]},\"68\":{\"title\":\"cmake\",\"header\":\"2.3.6 CMake 中的 PUBLIC、PRIVATE、INTERFACE\",\"text\":[\"CMake中经常使用target_...()类似的命令，一般这样的命令支持通过PUBLIC、PRIVATE、INTERFACE关键字来控制传播。\",\"以target_link_libraries(A B)为例，从理解的角度来看\",\"PRIVATE ：依赖项B仅链接到目标A，如果有C 链接了A，C不会链接B\",\"INTERFACE ：依赖项B并不链接到目标A，如果有C 链接了A，C会链接B\",\"PUBLIC ：依赖项B链接到目标A，如果有C 链接了A，C也会链接B\",\"其实就是对象属性的传递，打个散烟的比方：\",\"PRIVATE： 就是自己抽，不给别人抽\",\"INTERFACE ：就是自己不抽，给别人抽\",\"PUBLIC ：就是自己抽，也给别人抽\",\"从使用的角度来说，如果有C链接了目标A\",\"如果B仅用于A的实现，且不在头文件中提供给C使用，使用PRIVATE\",\"如果B不用于A的实现，仅在头文件中作为借口给C使用，使用INTERFACE\",\"如果B既用于A的实现，也在头文件中提供给C使用，使用PUBLIC\",\"举例：\",\"# 创建库 add_library(C c.cpp) add_library(D d.cpp) add_library(B b.cpp) # C是B的PUBLIC依赖项 target_link_libraries(B PUBLIC C) # D是B的PRIVATE依赖项 target_link_libraries(B PRIVATE D) # 添加可执行文件 add_executable(A a.cpp) # 将B链接到A target_link_libraries(A B) \",\"因为C是B的PUBLIC依赖项，所以C会传播到A\",\"因为D是B的PRIVATE依赖性，所以D不会传播到A\"]},\"69\":{\"title\":\"cmake\",\"header\":\"2.3.7 变量\",\"text\":[\"附件位置：7.message_var_demo\",\"像其他编程语言一样，我们应该将CMake理解为一门编程语言。我们也需要设定变量来储存我们的选项，信息。有时候我们通过变量来判断我们在什么平台上，通过变量来判断我们需要编译哪些Target，也通过变量来决定添加哪些依赖。\"]},\"70\":{\"title\":\"cmake\",\"header\":\"2.3.8 include引入其他代码\",\"text\":[\"附件位置：8.include_demo\"]},\"71\":{\"title\":\"cmake\",\"header\":\"2.3.9 条件控制\",\"text\":[\"附件位置：9.if_demo\",\"正如前面所讲，应该把CMake当成编程语言，除了可以设置变量以外，CMake还可以写条件控制。\",\"if(variable) # 为true的常量：ON、YES、TRUE、Y、1、非0数字 else() # 为false的常量：OFF、NO、FALSE、N、0、空字符串、NOTFOUND endif() \",\"可以和条件一起使用的关键词有\",\"NOT, TARGET, EXISTS (file), DEFINED等 STREQUAL, AND, OR, MATCHES (regular expression), VERSION_LESS, VERSION_LESS_EQUAL等 \"]},\"72\":{\"title\":\"cmake\",\"header\":\"2.3.10 CMake分步编译\",\"text\":[\"附件位置：10.steps_demo\",\"# 查看所有目标 $ cmake -S . -B build $ cd build $ cmake --build . --target help The following are some of the valid targets for this Makefile: ... all (the default if no target is provided) ... clean ... depend ... rebuild_cache ... edit_cache ... steps_demo ... main.o ... main.i ... main.s # 1.预处理 $ cmake --build . --target main.i # 输出：Preprocessing CXX source to CMakeFiles/steps_demo.dir/main.cpp.i # 可以打开滑到底部 # 2.编译 $ cmake --build . --target main.s # 输出汇编代码：Compiling CXX source to assembly CMakeFiles/steps_demo.dir/main.cpp.s # 3.汇编 $ cmake --build . --target main.o # 输出二进制文件：Building CXX object CMakeFiles/steps_demo.dir/main.cpp.o # 链接 $ cmake --build . Scanning dependencies of target steps_demo [ 50%] Linking CXX executable steps_demo [100%] Built target steps_demo # 运行 ./steps_demo \"]},\"73\":{\"title\":\"cmake\",\"header\":\"2.3.11 生成器表达式\",\"text\":[\"附件位置：11.generator_expression\",\"生成器表达式简单来说就是在CMake生成构建系统的时候根据不同配置动态生成特定的内容。有时用它可以让代码更加精简，我们介绍几种常用的。\",\"需要注意的是，生成表达式被展开是在生成构建系统的时候，所以不能通过解析配置CMakeLists.txt阶段的message命令打印，可以用类似file(GENERATE OUTPUT \\\"./generator_test.txt\\\" CONTENT \\\"$<$<BOOL:TRUE>:TEST>\\\")生成文件的方式间接测试。\",\"在其最一般的形式中，生成器表达式是$<...>，尖括号中间可以是如下几种类型：\",\"条件表达式\",\"变量查询（Variable-Query）\",\"目标查询（Target-Query）\",\"输出相关的表达式\",\"# 1.条件表达式：$<condition:true_string>，当condition为真时，返回true_string，否则返回空字符串 $<0:TEST> $<1:TEST> $<$<BOOL:TRUE>:TEST> # 2.变量查询（Variable-Query） $<TARGET_EXISTS:target>：判断目标是否存在 $<CONFIG:Debug>：判断当前构建类型是否为Debug # 3.目标查询（Target-Query） $<TARGET_FILE:target>：获取编译目标的文件路径 $<TARGET_FILE_NAME:target>：获取编译目标的文件名 \",\"4.输出相关表达式：用于在不同的环节使用不同参数，比如需要在install和build环节分别用不同的参数，我们可以这样写：\",\"add_library(Foo ...) target_include_directories(Foo PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}> ) \",\"其中$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>仅在build环节生效;而$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>仅在install环节生效。通过设定不同阶段不同的参数，我们可以避免路径混乱的问题。\"]},\"74\":{\"title\":\"cmake\",\"header\":\"2.3.12 函数和宏\",\"text\":[\"附件位置：12.function_macro\",\"# 定义一个宏，宏名为my_macro，没有参数 macro(my_macro) message(\\\"宏内部的信息\\\") set(macro_var \\\"宏内部变量test\\\") endmacro(my_macro) # 定义一个函数，函数名为second_func，有两个参数 function(second_func arg1 arg2) message(\\\"第一个参数：${arg1}, 第二个参数：${arg2}\\\") endfunction(second_func) \"]},\"75\":{\"title\":\"cmake\",\"header\":\"2.3.13 设置安装\",\"text\":[\"附件位置：13.install_demo\",\"当需要发布项目时你需要指定项目文件的安装路径。下面的代码片段中，使用install安装demo_test，并分别将可执行文件安装在bin中，动态链接库和静态链接库都安装在lib，公共头文件安装在include。这里的路径都将添加${CMAKE_INSTALL_PREFIX}作为前缀（如果不设置CMAKE_INSTALL_PREFIX，则会安装到/usr/local 目录下）。实现安装的功能在你需要发布你项目给其他人使用时，非常有用。\",\"# 设置安装 install(TARGETS demo_test RUNTIME DESTINATION bin # 可执行文件 LIBRARY DESTINATION lib # 动态库 ARCHIVE DESTINATION lib # 静态库 PUBLIC_HEADER DESTINATION include # 公共头文件 ) \"]},\"76\":{\"title\":\"cmake\",\"header\":\"2.3.14 寻找依赖 find_package\",\"text\":[\"对于大部分支持了CMake的项目来说，均可以通过find_package找到对应的依赖库，参考附件：14.find_demo\",\"# 使用find_package寻找<LibaryName>库，如果找到，一般都会有以下变量（库作者设置） <LibaryName>_FOUND：表示是否找到 <LibaryName>_INCLUDE_DIR：表示头文件目录 <LibaryName>_LIBRARIES：表示库文件目录 \",\"假设我们编写了一个新的函数库，我们希望别的项目可以通过find_package对它进行引用，我们有两种办法：\",\"编写一个Find<LibraryName>.cmake，适用于导入非cmake安装的项目，参考附件：15.custom_find\",\"使用install安装，生成<LibraryName>Config.cmake文件，适用于导入自己开发的cmake项目，参考附件：16.custom_install_demo\"]},\"77\":{\"title\":\"cmake\",\"header\":\"三、opencv CMake示例\",\"text\":[\"附件位置：17.demo_opencv/\",\"安装OpenCV：sudo apt install libopencv-dev\",\"依赖和链接OpenCV与常规的添加依赖并没有太多不同，同时OpenCV提供了cmake find package的功能，因此我们可以通过find_package方便的定位opencv在系统中的位置和需要添加的依赖。\",\"find_package(OpenCV REQUIRED) message(\\\"OPENCV INCLUDE DIRS: ${OpenCV_INCLUDE_DIRS}\\\") message(\\\"OPENCV LINK LIBRARIES: ${OpenCV_LIBS}\\\") \",\"如果cmake找到了OpenCV，配置cmake后，命令行会有如下输出：\",\"OPENCV INCLUDE DIRS: /usr/include/opencv4 OPENCV LINK LIBRARIES: opencv_calib3d;opencv_core;opencv_dnn;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_objdetect;opencv_photo;opencv_stitching;opencv_video;opencv_videoio;opencv_aruco;opencv_bgsegm;opencv_bioinspired;opencv_ccalib;opencv_datasets;opencv_dnn_objdetect;opencv_dnn_superres;opencv_dpm;opencv_face;opencv_freetype;opencv_fuzzy;opencv_hdf;opencv_hfs;opencv_img_hash;opencv_line_descriptor;opencv_optflow;opencv_phase_unwrapping;opencv_plot;opencv_quality;opencv_reg;opencv_rgbd;opencv_saliency;opencv_shape;opencv_stereo;opencv_structured_light;opencv_superres;opencv_surface_matching;opencv_text;opencv_tracking;opencv_videostab;opencv_viz;opencv_ximgproc;opencv_xobjdetect;opencv_xphoto \"]},\"78\":{\"title\":\"c++环境配置\",\"header\":\"一、Visual Studio Code相关信息\",\"text\":[\"Visual Studio Code 下载地址：https://code.visualstudio.com/download\",\"VS Code建议安装插件列表： \",\"中文菜单： \",\"MS-CEINTL.vscode-language-pack-zh-hans\",\"SSH远程开发： \",\"ms-vscode-remote.remote-ssh\",\"ms-vscode-remote.remote-ssh-edit\",\"ms-vscode.remote-explorer\",\"C++开发 \",\"ms-vscode.cpptools\",\"python开发 \",\"ms-python.python\",\"代码补全 \",\"TabNine.tabnine-vscode\",\"GitHub.copilot\",\"VS Code SSH远程连接Ubuntu主机 \",\"本地Ubuntu示例\",\"autoDL示例： \",\"autoDL地址：https://www.autodl.com/home\",\"省钱妙招：无卡启动（不挂载GPU，￥0.1/h左右）\"]},\"79\":{\"title\":\"c++环境配置\",\"header\":\"二、Python开发环境配置\",\"text\":[\"建议conda虚拟环境\",\"测试代码demo.py：\",\"# python 代码测试 # 计算 1+2+3+4+5 的和 sum = 0; for i in range(5): sum += i # 打印结果 print(sum); \",\"debuger配置.vscode下launch.json添加\",\"{ // 使用 IntelliSense 了解相关属性。 // 悬停以查看现有属性的描述。 // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387 \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"Python: Current File\\\", \\\"type\\\": \\\"python\\\", \\\"request\\\": \\\"launch\\\", // \\\"program\\\": \\\"${file}\\\", // 当前文件 \\\"program\\\": \\\"demo.py\\\", // 指定文件 \\\"console\\\": \\\"integratedTerminal\\\", \\\"justMyCode\\\": true // false表示可以进入第三方库（如Pytorch）里进行调试 } ] } \"]},\"80\":{\"title\":\"c++环境配置\",\"header\":\"三、Ubuntu安装环境\",\"text\":[\"#安装gcc sudo apt-get install gcc #安装g++ sudo apt-get install g++ #安装cmake sudo apt-get install cmake #安装gdb sudo apt-get install gdb \"]},\"81\":{\"title\":\"c++环境配置\",\"header\":\"四、C++ 开发环境配置\",\"text\":[\"当前配置的环境主要为了演示C++基础知识教学，后面做项目时会有调整。\",\"测试代码main.cpp：\",\"#include <iostream> using namespace std; int main(){ // 计算 1+2+3+4+5 int sum {0}; for (int i {0}; i < 5; i++){ sum += i; } // 输出结果 cout << sum << endl; return 0; } \",\"先用g++ main.cpp -o main生成可执行文件\",\"再用VS Code 菜单：终端-运行生成任务生成可执行文件，需要在.vscode先添加tasks.json\",\"Linux中可以使用which g++确定g++的路径\",\"{ \\\"version\\\": \\\"2.0.0\\\", \\\"tasks\\\": [ { \\\"type\\\": \\\"cppbuild\\\", \\\"label\\\": \\\"C/C++: g++ 生成活动文件\\\", \\\"command\\\": \\\"/usr/bin/g++\\\", // g++的路径 \\\"args\\\": [ \\\"-fdiagnostics-color=always\\\", // 颜色 \\\"-g\\\", // 调试信息 \\\"-Wall\\\", // 开启所有警告 \\\"-std=c++14\\\", // c++14标准 \\\"${file}\\\", // 文件本身，仅适用于C++基础知识教学，无法同时编译所有文件 // \\\"${fileDirname}/*.cpp\\\", // 文件所在的文件夹路径下所有cpp文件 \\\"-o\\\", // 输出 \\\"${workspaceFolder}/release/${fileBasenameNoExtension}\\\" // 文件所在的文件夹路径/release/当前文件的文件名，不带后缀 ], \\\"options\\\": { \\\"cwd\\\": \\\"${fileDirname}\\\" // 文件所在的文件夹路径 }, \\\"problemMatcher\\\": [ \\\"$gcc\\\" ], \\\"group\\\": { \\\"kind\\\": \\\"build\\\", \\\"isDefault\\\": true }, \\\"detail\\\": \\\"编译器: /usr/bin/g++\\\" } ] } \",\"需要debuger，launch.json修改为：\",\"{ // 使用 IntelliSense 了解相关属性。 // 悬停以查看现有属性的描述。 // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387 \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"(gdb) 启动\\\", \\\"type\\\": \\\"cppdbg\\\", // C++调试 \\\"request\\\": \\\"launch\\\", \\\"program\\\": \\\"${workspaceFolder}/release/${fileBasenameNoExtension}\\\", // 文件所在的文件夹路径/release/当前文件的文件名，不带后缀 \\\"args\\\": [], \\\"stopAtEntry\\\": false, \\\"cwd\\\": \\\"${fileDirname}\\\", // 文件所在的文件夹路径 \\\"environment\\\": [], \\\"externalConsole\\\": false, \\\"MIMode\\\": \\\"gdb\\\", \\\"setupCommands\\\": [ { \\\"description\\\": \\\"为 gdb 启用整齐打印\\\", \\\"text\\\": \\\"-enable-pretty-printing\\\", \\\"ignoreFailures\\\": true }, { \\\"description\\\": \\\"将反汇编风格设置为 Intel\\\", \\\"text\\\": \\\"-gdb-set disassembly-flavor intel\\\", \\\"ignoreFailures\\\": true } ], \\\"preLaunchTask\\\": \\\"C/C++: g++ 生成活动文件\\\" // tasks.json的label }, { \\\"name\\\": \\\"Python: Current File\\\", \\\"type\\\": \\\"python\\\", \\\"request\\\": \\\"launch\\\", \\\"program\\\": \\\"${file}\\\", // 当前文件 // \\\"program\\\": \\\"demo.py\\\", // 指定文件 \\\"console\\\": \\\"integratedTerminal\\\", \\\"justMyCode\\\": true // false表示可以进入第三方库（如Pytorch）里进行调试 } ] } \"]},\"82\":{\"title\":\"c++环境配置\",\"header\":\"五、第一个C++程序\",\"text\":[\"#include <iostream> int main(){ int favorites_num; std::cout << \\\"请输入0~10中你最喜欢的数字：\\\" ; std::cin >> favorites_num; std::cout << favorites_num << \\\"也是我喜欢的数字！\\\" << std::endl; return 0; } \"]},\"83\":{\"title\":\"c++环境配置\",\"header\":\"六、附录：vs code 中变量解释\",\"text\":[\"以：/home/Coding/Test/.vscode/tasks.json 为例 ${workspaceFolder}:表示当前workspace文件夹路径，也即/home/Coding/Test ${workspaceRootFolderName}:表示workspace的文件夹名，也即Test ${file}:文件自身的绝对路径，也即/home/Coding/Test/.vscode/tasks.json ${relativeFile}:文件在workspace中的路径，也即.vscode/tasks.json ${fileBasenameNoExtension}:当前文件的文件名，不带后缀，也即tasks ${fileBasename}:当前文件的文件名，tasks.json ${fileDirname}:文件所在的文件夹路径，也即/home/Coding/Test/.vscode ${fileExtname}:当前文件的后缀，也即.json ${lineNumber}:当前文件光标所在的行号 ${env:PATH}:系统中的环境变量 \"]},\"84\":{\"title\":\"opencv\",\"header\":\"Quick start\",\"text\":[]},\"85\":{\"title\":\"opencv\",\"header\":\"Build with ffmpeg support\",\"text\":[\"sudo apt install -y ffmpeg \"]},\"86\":{\"title\":\"opencv\",\"header\":\"Build core modules\",\"text\":[\"# Install minimal prerequisites (Ubuntu 18.04 as reference) sudo apt update && sudo apt install -y cmake g++ wget unzip # Download and unpack sources wget -O opencv.zip https://github.com/opencv/opencv/archive/4.x.zip unzip opencv.zip # Create build directory mkdir -p build && cd build # Configure cmake ../opencv-4.x # Build cmake --build . # Allow N jobs at once; infinite jobs with no arg. sudo make -j8 sudo make -j4 \"]},\"87\":{\"title\":\"opencv\",\"header\":\"Install\",\"text\":[\"Warning\",\"The installation process only copies files to predefined locations and does minor patching. Installing using this method does not integrate opencv into the system package registry and thus, for example, opencv can not be uninstalled automatically. We do not recommend system-wide installation to regular users due to possible conflicts with system packages.\",\"By default OpenCV will be installed to the /usr/local directory, all files will be copied to following locations:\",\"/usr/local/bin - executable files\",\"/usr/local/lib - libraries (.so)\",\"/usr/local/cmake/opencv4 - cmake package\",\"/usr/local/include/opencv4 - headers\",\"/usr/local/share/opencv4 - other files (e.g. trained cascades in XML format)\",\"Since /usr/local is owned by the root user, the installation should be performed with elevated privileges (sudo):\",\"sudo make install \",\"or\",\"sudo ninja install \",\"Installation root directory can be changed with CMAKE_INSTALL_PREFIX configuration parameter, e.g. -DCMAKE_INSTALL_PREFIX=$HOME/.local to install to current user's local directory. Installation layout can be changed with OPENCV_*_INSTALL_PATH parameters. See OpenCV configuration options reference for details.\"]},\"88\":{\"title\":\"opencv\",\"text\":[\"OpenCV (Open Source Computer Vision Library: http://opencv.org) is an open-source library that includes several hundreds of computer vision algorithms.\",\"See the OpenCV website for the latest news, downloads, documentation, and tutorials.\"]},\"89\":{\"title\":\"QSV文件\",\"header\":\"什么是qsv文件\",\"text\":[]},\"90\":{\"title\":\"QSV文件\",\"header\":\"头部信息\",\"text\":[]},\"91\":{\"title\":\"QSV文件\",\"header\":\"索引信息\",\"text\":[]},\"92\":{\"title\":\"QSV文件\",\"header\":\"json字符串\",\"text\":[]},\"93\":{\"title\":\"QSV文件\",\"header\":\"视频分段信息\",\"text\":[]},\"94\":{\"title\":\"QSV文件\",\"header\":\"总结\",\"text\":[]},\"95\":{\"title\":\"QSV文件\",\"header\":\"后记\",\"text\":[]},\"96\":{\"title\":\"QSV文件提取\",\"header\":\"创建类\",\"text\":[]},\"97\":{\"title\":\"QSV文件提取\",\"header\":\"通用方法\",\"text\":[]},\"98\":{\"title\":\"QSV文件提取\",\"header\":\"逐字节读取文件\",\"text\":[]},\"99\":{\"title\":\"QSV文件提取\",\"header\":\"字节数组转16进制字符串\",\"text\":[]},\"100\":{\"title\":\"QSV文件提取\",\"header\":\"字节数组转int\",\"text\":[]},\"101\":{\"title\":\"QSV文件提取\",\"header\":\"老版本解密算法\",\"text\":[]},\"102\":{\"title\":\"QSV文件提取\",\"header\":\"新版本解密算法\",\"text\":[]},\"103\":{\"title\":\"QSV文件提取\",\"header\":\"获取QSV头部信息\",\"text\":[]},\"104\":{\"title\":\"QSV文件提取\",\"header\":\"获取json数据\",\"text\":[]},\"105\":{\"title\":\"QSV文件提取\",\"header\":\"提取视频信息\",\"text\":[]},\"106\":{\"title\":\"QSV文件提取\",\"header\":\"参考资料\",\"text\":[]},\"107\":{\"title\":\"QSV文件提取\",\"header\":\"往期系列\",\"text\":[]},\"108\":{\"title\":\"npm\",\"header\":\"About npm\",\"text\":[\"npm is the world's largest software registry. Open source developers from every continent use npm to share and borrow packages, and many organizations use npm to manage private development as well.\",\"npm consists of three distinct components:\",\"the website\",\"the Command Line Interface (CLI)\",\"the registry\",\"Use the website to discover packages, set up profiles, and manage other aspects of your npm experience. For example, you can set up organizations to manage access to public or private packages.\",\"The CLI runs from a terminal, and is how most developers interact with npm.\",\"The registry is a large public database of JavaScript software and the meta-information surrounding it.\"]},\"109\":{\"title\":\"npm\",\"header\":\"Using npm\",\"text\":[\"set registry\",\"npm get registry npm config set registry http://registry.npm.taobao.org/ npm config set registry https://registry.npmjs.org/ \",\"install package\",\"npm install yarn -g \"]},\"110\":{\"title\":\"nvm\",\"header\":\"Intro\",\"text\":[\"nvm allows you to quickly install and use different versions of node via the command line.\",\"Example:\",\"$ nvm use 16 Now using node v16.9.1 (npm v7.21.1) $ node -v v16.9.1 $ nvm use 14 Now using node v14.18.0 (npm v6.14.15) $ node -v v14.18.0 $ nvm install 12 Now using node v12.22.6 (npm v6.14.5) $ node -v v12.22.6 \",\"Simple as that!\"]},\"111\":{\"title\":\"nvm\",\"header\":\"About\",\"text\":[\"nvm is a version manager for node.js, designed to be installed per-user, and invoked per-shell. nvm works on any POSIX-compliant shell (sh, dash, ksh, zsh, bash), in particular on these platforms: unix, macOS, and windows WSL.\"]},\"112\":{\"title\":\"nvm\",\"header\":\"Installing and Updating\",\"text\":[]},\"113\":{\"title\":\"nvm\",\"header\":\"Install & Update Script\",\"text\":[\"To install or update nvm, you should run the install script. To do that, you may either download and run the script manually, or use the following cURL or Wget command:\",\"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash \",\"wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash \",\"Running either of the above commands downloads a script and runs it. The script clones the nvm repository to ~/.nvm, and attempts to add the source lines from the snippet below to the correct profile file (~/.bash_profile, ~/.zshrc, ~/.profile, or ~/.bashrc).\",\"export NVM_DIR=\\\"$([ -z \\\"${XDG_CONFIG_HOME-}\\\" ] && printf %s \\\"${HOME}/.nvm\\\" || printf %s \\\"${XDG_CONFIG_HOME}/nvm\\\")\\\" [ -s \\\"$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"$NVM_DIR/nvm.sh\\\" # This loads nvm \"]},\"114\":{\"title\":\"nvm\",\"header\":\"Troubleshooting on Linux\",\"text\":[\"On Linux, after running the install script, if you get nvm: command not found or see no feedback from your terminal after you type command -v nvm, simply close your current terminal, open a new terminal, and try verifying again. Alternatively, you can run the following commands for the different shells on the command line:\",\"bash: source ~/.bashrc\",\"zsh: source ~/.zshrc\",\"ksh: . ~/.profile\",\"These should pick up the nvm command.\"]},\"115\":{\"title\":\"nvm\",\"header\":\"Usage\",\"text\":[\"To download, compile, and install the latest release of node, do this:\",\"nvm install node # \\\"node\\\" is an alias for the latest version \",\"To install a specific version of node:\",\"nvm install 14.7.0 # or 16.3.0, 12.22.1, etc \",\"The first version installed becomes the default. New shells will start with the default version of node (e.g., nvm alias default).\",\"You can list available versions using ls-remote:\",\"nvm ls-remote \",\"And then in any new shell just use the installed version:\",\"nvm use node \",\"Or you can just run it:\",\"nvm run node --version \",\"Or, you can run any arbitrary command in a subshell with the desired version of node:\",\"nvm exec 4.2 node --version \",\"You can also get the path to the executable to where it was installed:\",\"nvm which 12.22 \",\"In place of a version pointer like \\\"14.7\\\" or \\\"16.3\\\" or \\\"12.22.1\\\", you can use the following special default aliases with nvm install, nvm use, nvm run, nvm exec, nvm which, etc:\",\"node: this installs the latest version of node\",\"iojs: this installs the latest version of io.js\",\"stable: this alias is deprecated, and only truly applies to nodev0.12 and earlier. Currently, this is an alias for node.\",\"unstable: this alias points to nodev0.11 - the last \\\"unstable\\\" node release, since post-1.0, all node versions are stable. (in SemVer, versions communicate breakage, not stability).\"]},\"116\":{\"title\":\"nvm\",\"header\":\"Use a mirror of node binaries\",\"text\":[\"To use a mirror of the node binaries, set $NVM_NODEJS_ORG_MIRROR:\",\"export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node/ nvm install node NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node/ nvm install 4.2 \",\"To use a mirror of the io.js binaries, set $NVM_IOJS_ORG_MIRROR:\",\"export NVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3 NVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3 \",\"nvm use will not, by default, create a \\\"current\\\" symlink. Set $NVM_SYMLINK_CURRENT to \\\"true\\\" to enable this behavior, which is sometimes useful for IDEs. Note that using nvm in multiple shell tabs with this environment variable enabled can cause race conditions.\"]},\"117\":{\"title\":\"yarn\",\"header\":\"Usage\",\"text\":[\"Install the project dependencies.\",\"yarn install \",\"Read a configuration settings.\",\"yarn config get registry yarn config set registry http://registry.npm.taobao.org/ yarn config set registry https://registry.yarnpkg.com \"]},\"118\":{\"title\":\"yarn\",\"text\":[\"Yarn is a package manager that doubles down as project manager. Whether you work on one-shot projects or large monorepos, as a hobbyist or an enterprise user, we've got you covered.\"]},\"119\":{\"title\":\"gitlab runner 介绍\",\"header\":\"注册\",\"text\":[\"sudo gitlab-runner register --url http://192.168.0.200/ --registration-token $REGISTRATION_TOKEN \"]},\"120\":{\"title\":\"gitlab runner 介绍\",\"header\":\"查看runner命令\",\"text\":[\"gitlab-runner list \"]},\"121\":{\"title\":\"gitlab runner 介绍\",\"header\":\"查看runner配置文件\",\"text\":[\"cat /etc/gitlab-runner/config.toml \"]},\"122\":{\"title\":\"gitlab runner 介绍\",\"header\":\"客户端构建路径\",\"text\":[\"cd /home/gitlab-runner/builds \"]},\"123\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"安装python环境\",\"text\":[]},\"124\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"安装git\",\"text\":[]},\"125\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"安装环境\",\"text\":[]},\"126\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"Installation and Running\",\"text\":[]},\"127\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"Automatic Installation on Windows\",\"text\":[]},\"128\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"Automatic Installation on Linux\",\"text\":[]},\"129\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"Installation on Apple Silicon\",\"text\":[]},\"130\":{\"title\":\"Prompt语法结构\",\"header\":\"反向词\",\"text\":[]},\"131\":{\"title\":\"Prompt语法结构\",\"text\":[\"Prompt语法结构分 \",\"前缀 \",\"画风词\",\"效果器\",\"主体 \",\"人物\",\"物体\",\"场景 \",\"大环境\",\"小细节\"]},\"132\":{\"title\":\"Stable Diffusion\",\"header\":\"目录\",\"text\":[\"安装教程\",\"操作说明\"]},\"133\":{\"title\":\"JUnit Listener\",\"header\":\"介绍\",\"text\":[\"JUnit Listener是一个Junit的监听器，可以用来监听Junit的执行过程，比如在测试用例执行前后做一些操作，比如在测试用例执行失败后做一些操作。本文主要介绍几种实现方式。\"]},\"134\":{\"title\":\"JUnit Listener\",\"header\":\"一、eclipse插件\",\"text\":[]},\"135\":{\"title\":\"JUnit Listener\",\"header\":\"1.1 介绍\",\"text\":[\"在eclipse中，可以通过插件的方式来实现Junit Listener，这种方式的好处是可以在eclipse中直接使用，不需要额外的配置。\"]},\"136\":{\"title\":\"JUnit Listener\",\"header\":\"1.2 创建插件工程\",\"text\":[\"在eclipse中，点击help->Install New Software，然后在Work with中选择--All Available Sites--，然后在Find中输入Eclipse Plug-in Development Environment，然后点击Next，然后一直点击Next，直到安装完成，如下图所示：\",\"eclipseplugintools\",\"点击File->New->Other，选择Plug-in Project，然后点击Next，然后输入项目名称，然后点击Next，然后选择This plug-in will make contributions to the UI，然后点击Next，输入项目名称。\",\"eclipseproject\",\"点击Create a plug-in using a template选择Hello World Command，然后点击Next，然后点击Finish，如下图所示：\",\"eclipseplugintemplate\"]},\"137\":{\"title\":\"JUnit Listener\",\"header\":\"1.3 创建Junit Listener\",\"text\":[\"点击plugn.xml，然后点击Extensions，然后点击Add，然后选择org.junit.runner.notification.RunListener，然后点击Finish，如下图所示：\",\"eclipsepluginrunlistener\",\"也可以直接在plugin.xml中添加如下代码：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <?eclipse version=\\\"3.4\\\"?> <plugin> <extension point=\\\"org.eclipse.jdt.junit.testRunListeners\\\"> <testRunListener class=\\\"eclipse.junit.listener.plugin.handlers.JunitTestRunListener\\\"> </testRunListener> </extension> </plugin> \"]},\"138\":{\"title\":\"JUnit Listener\",\"header\":\"1.4 实现Junit Listener\",\"text\":[\"public class JunitTestRunListener extends TestRunListener { /** * A test run session has finished. The test tree can be accessed through * the session element. * * <p> * Important: The implementor of this method must not keep the session * element when the method is finished. * </p> * * @param session * the test */ @Override public void sessionFinished(ITestRunSession session) { } } \"]},\"139\":{\"title\":\"JUnit Listener\",\"header\":\"1.5 引入jar包\",\"text\":[\"在plugin.xml中点击Runtime，然后找到Classpate点击Add，然后选择需要引入的jar包即可，如下图所示：\",\"eclipseplugindependence\"]},\"140\":{\"title\":\"JUnit Listener\",\"header\":\"1.6 启动调试\",\"text\":[\"在plugin.xml中点击Overview，然后点击Launch an Eclipse application in Debug mode，然后点击Launch，如下图所示：\",\"eclipsedebug\"]},\"141\":{\"title\":\"JUnit Listener\",\"header\":\"1.7 导出插件\",\"text\":[\"选择项目右键点击Export，然后选择Plug-in Development->Deployable plug-ins and fragments，然后点击Next，然后选择项目，然后点击Finish，如下图所示：\",\"eclipsepluginexport\"]},\"142\":{\"title\":\"JUnit Listener\",\"header\":\"二、idea插件\",\"text\":[]},\"143\":{\"title\":\"JUnit Listener\",\"header\":\"2.1 介绍\",\"text\":[\"在idea中，可以通过插件的方式来实现Junit Listener，这种方式的好处是可以在idea中直接使用，不需要额外的配置。\"]},\"144\":{\"title\":\"JUnit Listener\",\"header\":\"2.2 创建插件工程\",\"text\":[\"点击File->New->Project，然后选择IDE Plugin，然后输入项目名称，然后点击Next，然后点击Finish，如下图所示：\",\"ideaproject\"]},\"145\":{\"title\":\"JUnit Listener\",\"header\":\"2.3 创建Junit Listener\",\"text\":[\"编辑plugin.xml，在<extensions defaultExtensionNs=\\\"com.intellij\\\">中添加如下代码：\",\"<extensions defaultExtensionNs=\\\"com.intellij\\\"> <testStatusListener implementation=\\\"com.original.idea.junit.listener.JunitTestStatusListener\\\"/> </extensions> \"]},\"146\":{\"title\":\"JUnit Listener\",\"header\":\"2.4 实现Junit Listener\",\"text\":[\"public class JunitTestStatusListener extends TestStatusListener { @Override public void testSuiteFinished(@Nullable AbstractTestProxy root) { } } \"]},\"147\":{\"title\":\"JUnit Listener\",\"header\":\"2.5 引入jar包\",\"text\":[\"编辑build.gradle.kts添加如下代码：\",\"dependencies{ implementation(\\\"com.alibaba:fastjson:1.2.83\\\") } \"]},\"148\":{\"title\":\"JUnit Listener\",\"header\":\"2.6 启动调试\",\"text\":[\"点击侧边栏gradle，然后点击Tasks->intellij->runIde，然后点击调试运行。\"]},\"149\":{\"title\":\"JUnit Listener\",\"header\":\"2.7 导出插件\",\"text\":[\"点击侧边栏gradle，然后点击Tasks->intellij->buildPlugin，然后点击运行，如下图所示：\",\"ideabuildplugin\"]},\"150\":{\"title\":\"GC配置\",\"header\":\"参数详解\",\"text\":[\"参数名称\",\"参数说明\",\"-XX:+PrintGCDetails\",\"输出GC的详细日志\",\"-XX:+PrintGCTimeStamps\",\"输出GC的时间戳（以基准时间的形式）\",\"-Xloggc:../logs/gc.log\",\"此参数主要定义GC Log 的详细信息。\",\"-XX:UseGCLogFileRotation\",\"Enabled GC log rotation, requires -Xloggc.\",\"-XX:NumberOfGCLogFiles=5\",\"Set the number of files to use when rotating logs, must be >= 1.The rotated log files will use the following naming scheme, <filename>.0, <filename>.1, ..., <filename>.n-1.\",\"-XX:GCLogFileSize=100M\",\"The size of the log file at which point the log will be rotated, must be >= 8K.\"]},\"151\":{\"title\":\"GC配置\",\"header\":\"源码解析\",\"text\":[\"arguments.cpp\",\"// check if do gclog rotation // +UseGCLogFileRotation is a must, // no gc log rotation when log file not supplied or // NumberOfGCLogFiles is 0 void check_gclog_consistency() { if (UseGCLogFileRotation) { if ((Arguments::gc_log_filename() == NULL) || (NumberOfGCLogFiles == 0)) { jio_fprintf(defaultStream::output_stream(), \\\"To enable GC log rotation, use -Xloggc:<filename> -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=<num_of_files>\\\\n\\\" \\\"where num_of_file > 0\\\\n\\\" \\\"GC log rotation is turned off\\\\n\\\"); UseGCLogFileRotation = false; } } if (UseGCLogFileRotation && (GCLogFileSize != 0) && (GCLogFileSize < 8*K)) { FLAG_SET_CMDLINE(uintx, GCLogFileSize, 8*K); jio_fprintf(defaultStream::output_stream(), \\\"GCLogFileSize changed to minimum 8K\\\\n\\\"); } } \",\"ostream.cpp\",\"void gcLogFileStream::rotate_log_impl(bool force, outputStream* out) { if (NumberOfGCLogFiles == 1) { // rotate in same file rewind(); _bytes_written = 0L; jio_snprintf(time_msg, sizeof(time_msg), \\\"File %s rotated at %s\\\\n\\\", _file_name, os::local_time_string((char *)time_str, sizeof(time_str))); write(time_msg, strlen(time_msg)); if (out != NULL) { out->print(\\\"%s\\\", time_msg); } dump_loggc_header(); return; } // rotate file in names extended_filename.0, extended_filename.1, ..., // extended_filename.<NumberOfGCLogFiles - 1>. Current rotation file name will // have a form of extended_filename.<i>.current where i is the current rotation // file number. After it reaches max file size, the file will be saved and renamed // with .current removed from its tail. _cur_file_num++; if (_cur_file_num > NumberOfGCLogFiles - 1) _cur_file_num = 0; int result = jio_snprintf(current_file_name, JVM_MAXPATHLEN, \\\"%s.%d\\\" CURRENTAPPX, _file_name, _cur_file_num); if (result >= JVM_MAXPATHLEN) { warning(\\\"Cannot create new log file name: %s: file name is too long.\\\\n\\\", current_file_name); return; } } gcLogFileStream::gcLogFileStream(const char* file_name) : _file_lock(NULL) { _cur_file_num = 0; _bytes_written = 0L; _file_name = make_log_name(file_name, NULL); if (_file_name == NULL) { warning(\\\"Cannot open file %s: file name is too long.\\\\n\\\", file_name); _need_close = false; UseGCLogFileRotation = false; return; } // gc log file rotation if (UseGCLogFileRotation && NumberOfGCLogFiles > 1) { char tempbuf[JVM_MAXPATHLEN]; jio_snprintf(tempbuf, sizeof(tempbuf), \\\"%s.%d\\\" CURRENTAPPX, _file_name, _cur_file_num); _file = fopen(tempbuf, \\\"w\\\"); } else { _file = fopen(_file_name, \\\"w\\\"); } if (_file != NULL) { _need_close = true; dump_loggc_header(); if (UseGCLogFileRotation) { _file_lock = new Mutex(Mutex::leaf, \\\"GCLogFile\\\"); } } else { warning(\\\"Cannot open file %s due to %s\\\\n\\\", _file_name, strerror(errno)); _need_close = false; } } \"]},\"152\":{\"title\":\"GC配置\",\"header\":\"Try to avoid -XX:+UseGCLogFileRotation\",\"text\":[\"Developers take advantage of the JVM argument -XX:+UseGCLogFileRotation to rotate GC log files.\",\"Example:\",\"-XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:../logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=100M \",\"As shown above, the JVM will rotate the GC log file whenever its size reaches 20MB. It will generate up to five files, with extensions gc.log.0, gc.log.1, gc.log.2, gc.log.3, and gc.log.4.\",\"But this approach has a few challenges:\"]},\"153\":{\"title\":\"GC配置\",\"header\":\"a.Losing Old GC Logs\",\"text\":[\"Suppose you configured -XX:NumberOfGCLogFiles=5, then over a period of time, five GC log files will be created:\",\"gc.log.0 ← oldest GC Log content\",\"gc.log.1\",\"gc.log.2\",\"gc.log.3\",\"gc.log.4 ← latest GC Log content\",\"The most recent GC log contents will be written to gc.log.4 and old GC log contents will be present in gc.log.0.\",\"When the application starts to generate more GC logs than the configured -XX:NumberOfGCLogFiles, in this case, five, then old GC log contents in gc.log.0 will be deleted. New GC events will be written to gc.log.0. It means that you will end up not having all the generated GC logs. You will lose the visibility of all events.\"]},\"154\":{\"title\":\"GC配置\",\"header\":\"b.Mixed-Up GC Logs\",\"text\":[\"Suppose an application has created five GC log files, including:\",\"gc.log.0\",\"gc.log.1\",\"gc.log.2\",\"gc.log.3\",\"gc.log.4\",\"Then, let’s say you are restarting the application. Now, new GC logs will be written to gc.log.0 file and old GC log content will be present in gc.log.1, gc.log.2, gc.log.3, gc.log.4, etc.\",\"gc.log.0 ← GC log file content after restart\",\"gc.log.1 ← GC log file content before restart\",\"gc.log.2 ← GC log file content before restart\",\"gc.log.3 ← GC log file content before restart\",\"gc.log.4 ← GC log file content before restart\",\"So, your new GC log contents get mixed up with old GC logs. Thus, to mitigate this problem, you might have to move all the old GC logs to a different folder before you restart the application.\"]},\"155\":{\"title\":\"GC配置\",\"header\":\"c.Forwarding GC Logs to a Central Location\",\"text\":[\"In this approach, the current active file to which GC logs are written is marked with the extension .current. For example, if GC events are currently written to the file gc.log.3, it would be named as: gc.log.3.current.\",\"If you want to forward GC logs from each server to a central location, then most DevOps engineers use rsyslog. However, this file naming convention poses a significant challenge to use rsyslog, as described in this blog.\"]},\"156\":{\"title\":\"GC配置\",\"header\":\"d.Tooling\",\"text\":[\"Now, to analyze the GC log file using the GC tools such as (GCeasy, GCViewer, etc.), you will have to upload multiple GC log files instead of just one single GC Log file.\"]},\"157\":{\"title\":\"GC配置\",\"header\":\"Recommended Solution\",\"text\":[\"We can suffix the GC log file with the time stamp at which the JVM was restarted, then the GC Log file locations will become unique. Then, new GC logs will not override the old GC logs. It can be achieved by suffixing %t to the GC log file name, as shown below:\",\"-XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:../logs/gc-%t.log \",\"%t suffixes timestamp to the GC log file in the format: YYYY-MM-DD_HH-MM-SS. So, the generated GC log file name will start to look like: gc-2019-01-29_20-41-47.log.\",\"This simple solution addresses all the shortcomings of -XX:+UseGCLogFileRotation.\",\"参考原文\"]},\"158\":{\"title\":\"jacoco\",\"header\":\"配置\",\"text\":[]},\"159\":{\"title\":\"jacoco\",\"header\":\"原理\",\"text\":[]},\"160\":{\"title\":\"jacoco\",\"header\":\"AgentMojo\",\"text\":[]},\"161\":{\"title\":\"jacoco\",\"header\":\"FAQ\",\"text\":[]},\"162\":{\"title\":\"jacoco\",\"text\":[\"JaCoCo is a free code coverage library for Java, which has been created by the EclEmma team based on the lessons learned from using and integration existing libraries for many years.\"]},\"163\":{\"title\":\"lifecycle\",\"header\":\"default生命周期\",\"text\":[]},\"164\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for pom packaging\",\"text\":[]},\"165\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for jar packaging\",\"text\":[]},\"166\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for ejb packaging\",\"text\":[]},\"167\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for maven-plugin packaging\",\"text\":[]},\"168\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for war packaging\",\"text\":[]},\"169\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for ear packaging\",\"text\":[]},\"170\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for rar packaging\",\"text\":[]},\"171\":{\"title\":\"lifecycle\",\"header\":\"clean生命周期\",\"text\":[]},\"172\":{\"title\":\"lifecycle\",\"header\":\"site生命周期\",\"text\":[]},\"173\":{\"title\":\"lifecycle\",\"text\":[\"Maven的生命周期就是为了对所有的构建过程进行抽象和统一。在大量项目的构建过程中，Maven总结出了一套高度完善的，易于扩展的生命周期，包括项目的清理，初始化，编译，测试，打包，集成测试，验证，部署和生成站点等构建步骤。在我们日常的maven使用中，一条条简单的命令，mvn clean, mvn package等都是在执行Maven的某个生命周期阶段。\"]},\"174\":{\"title\":\"surefire\",\"header\":\"About Apache Maven Surefire\",\"text\":[\"Surefire is a test framework project. This is the aggregator POM in Apache Maven Surefire project.\"]},\"175\":{\"title\":\"surefire\",\"header\":\"Project Documentation\",\"text\":[\"Usage of maven-surefire-plugin, maven-failsafe-plugin, maven-surefire-report-plugin\"]},\"176\":{\"title\":\"surefire\",\"header\":\"maven-surefire-plugin\",\"text\":[\"Best practice is to define the version of the Surefire Plugin that you want to use in either your pom.xml or a parent pom.xml:\",\"<project> [...] <build> <pluginManagement> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> <version>2.22.2</version> </plugin> </plugins> </pluginManagement> </build> [...] </project> \",\"The Surefire Plugin can be invoked by calling the test phase of the build lifecycle.\",\"mvn test \",\"And more parameters in SurefirePlugin.java\"]},\"177\":{\"title\":\"surefire\",\"header\":\"maven-failsafe-plugin\",\"text\":[\"To use the Failsafe Plugin, you need to add the following configuration to your pom.xml:\",\"<project> [...] <build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-failsafe-plugin</artifactId> <version>2.22.2</version> <executions> <execution> <goals> <goal>integration-test</goal> <goal>verify</goal> </goals> </execution> </executions> </plugin> </plugins> </build> [...] </project> \",\"The Failsafe Plugin can be invoked by calling the verify phase of the build lifecycle.\",\"mvn verify \",\"And more parameters in VerifyMojo.java\"]},\"178\":{\"title\":\"surefire\",\"header\":\"maven-surefire-report-plugin\",\"text\":[\"To generate the Surefire report as part of the site generation, add the following in the <reporting> section of your POM:\",\"<project> ... <reporting> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-report-plugin</artifactId> <version>3.1.0</version> </plugin> </plugins> </reporting> ... </project> \",\"The plugin can also generate the report using its standalone goal:\",\"mvn surefire-report:report mvn surefire-report:report -DlinkXRef=false -Daggregate=true \",\"And more parameters in SurefireReportMojo.java\",\"A HTML report should be generated in ${basedir}/target/site/surefire-report.html.\"]},\"179\":{\"title\":\"surefire\",\"header\":\"FAQ\",\"text\":[\"Question：Why test is called during mvn surefire-report:report execution and test fails without interruption?\",\"Answer\",\"The maven-surefire-report-plugin define the test phase in lifecycle.xml, and set the parameter testFailureIgnore to \\\"true\\\" to ignore a failure during testing. Its use is NOT RECOMMENDED, but quite convenient onoccasion.\",\"<lifecycles> <lifecycle> <id>surefire</id> <phases> <phase> <id>test</id> <configuration> <testFailureIgnore>true</testFailureIgnore> </configuration> </phase> </phases> </lifecycle> </lifecycles> \",\"Question：crashed tests - unit tests with large logging output does not produce surefire report?\",\"Description\",\"Upon upgrading our maven-surefire-plugin from version 2.15 to version 2.21.0. We noticed that the number of tests being run by our jenkins test job changed. Upon further investigation we found a test class with 7 test cases that were not being reported at all (not as passed, failed, or skipped).\",\"When we ran just that test class from the command line it failed with\",\"[2023-06-06 10:17:14.877] [ERROR] There are test failures. [2023-06-06 10:17:14.877] [2023-06-06 10:17:14.877] Please refer to /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test/target/surefire-reports for the individual test results. [2023-06-06 10:17:14.877] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream. [2023-06-06 10:17:14.877] The forked VM terminated without properly saying goodbye. VM crash or System.exit called? [2023-06-06 10:17:14.877] Command was /bin/sh -c cd /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test && /opt/jdk8u312-b07/jre/bin/java -jar /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test/target/surefire/surefirebooter7106199231689045505.jar /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test/target/surefire 2023-06-06T10-16-01_649-jvmRun1 surefire2911789998602964175tmp surefire_02965824114494373512tmp [2023-06-06 10:17:14.877] Process Exit Code: 0 [2023-06-06 10:17:14.877] org.apache.maven.surefire.booter.SurefireBooterForkException: The forked VM terminated without properly saying goodbye. VM crash or System.exit called? [2023-06-06 10:17:14.877] Command was /bin/sh -c cd /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test && /opt/jdk8u312-b07/jre/bin/java -jar /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test/target/surefire/surefirebooter7106199231689045505.jar /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test/target/surefire 2023-06-06T10-16-01_649-jvmRun1 surefire2911789998602964175tmp surefire_02965824114494373512tmp [2023-06-06 10:17:14.877] Process Exit Code: 0 [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.booterclient.ForkStarter.fork(ForkStarter.java:669) [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.booterclient.ForkStarter.run(ForkStarter.java:282) [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.booterclient.ForkStarter.run(ForkStarter.java:245) [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1183) [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011) [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857) \",\"but did not produce any output in the target/surefire-reports directory explaining why the failures were not reported in the jobs test report. Trying different maven-surefire-plugin versions the tests pass successfully with version 2.19.1, but fail with every version tried between 2.20 and 3.0.0-M5. Note we run our tests with these options:\",\"<reuseForks>false</reuseForks>\",\"<forkCount>1</forkCount>\",\"<reportFormat>xml</reportFormat>\",\"I also noticed that the tests in question did produce a lot of logging output. I found that the tests would pass if I added the configuration option:\",\"<redirectTestOutputToFile>true</redirectTestOutputToFile>\",\"I have reproduced the problem with a simpler test module that is attached. Upon playing with the output in this module the issue appears to happen when the output is about 1.2MB or higher.\",\"Not sure what changed between version 2.19.1 and 2.20 with how output from the forked jvm is collected but it appear to have a problem if there is too much output. If the tests were being reported as failed then this issue would not be a huge problem, but having tests just not be reported because their output grows is a critical issue for us as we may not notice that the test has effectively been dropped from our test suite, unless we closely audit the ~30000 test cases we run every run to detect missing tests which is hard to do as new tests are constantly being added.\",\"Answer\",\"Here is an official issue for this problem.\",\"Solution\",\"Add the following configuration to your pom.xml:\",\"<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> <version>2.22.2</version> <configuration> <redirectTestOutputToFile>true</redirectTestOutputToFile> </configuration> </plugin> \",\"OR\",\"<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> <version>3.1.0</version> </plugin> \",\"Question：How to translate the Surefire report into another language?\",\"Answer\",\"@since 3.1.0@seeThe Surefire Report Plugin supports internationalization. The default language is English. To translate the report into another language, you need to create a custom resource bundle and configure the plugin to use it.\",\"<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-report-plugin</artifactId> <version>3.1.0</version> <configuration> <customBundle>src/site/custom/surefire-report_cn.properties</customBundle> </configuration> </plugin> \",\"The Content of src/site/custom/surefire-report_cn.properties is as follows:\",\"report.surefire.name=\\\\u5355\\\\u5143\\\\u6d4b\\\\u8bd5 report.surefire.description=\\\\u62a5\\\\u544a\\\\u9879\\\\u76ee\\\\u7684\\\\u6d4b\\\\u8bd5\\\\u7ed3\\\\u679c\\\\u3002 report.surefire.title=\\\\u5355\\\\u5143\\\\u6d4b\\\\u8bd5\\\\u62a5\\\\u544a report.surefire.label.summary=\\\\u603b\\\\u7ed3 report.surefire.label.tests=\\\\u6d4b\\\\u8bd5\\\\u6570\\\\u91cf report.surefire.label.errors=\\\\u9519\\\\u8bef\\\\u6570\\\\u91cf report.surefire.label.failures=\\\\u5931\\\\u8d25\\\\u6570\\\\u91cf report.surefire.label.skipped=\\\\u8df3\\\\u8fc7\\\\u6570\\\\u91cf report.surefire.label.successrate=\\\\u6210\\\\u529f\\\\u7387 report.surefire.label.time=\\\\u8017\\\\u65f6 report.surefire.label.packagelist=\\\\u5305\\\\u540d\\\\u6e05\\\\u5355 report.surefire.label.package=\\\\u5305\\\\u540d report.surefire.label.class=\\\\u7c7b\\\\u540d report.surefire.label.testcases=\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b report.surefire.label.failuredetails=\\\\u6545\\\\u969c\\\\u8be6\\\\u60c5 report.surefire.text.note1=\\\\u6ce8\\\\u610f\\\\uff1a\\\\u5931\\\\u8d25\\\\u662f\\\\u9884\\\\u671f\\\\u7684\\\\uff0c\\\\u5e76\\\\u4f7f\\\\u7528\\\\u65ad\\\\u8a00\\\\u8fdb\\\\u884c\\\\u68c0\\\\u67e5\\\\uff0c\\\\u800c\\\\u9519\\\\u8bef\\\\u662f\\\\u610f\\\\u5916\\\\u7684\\\\u3002 report.surefire.text.note2=\\\\u6ce8\\\\u610f\\\\uff1a\\\\u5305\\\\u7edf\\\\u8ba1\\\\u6570\\\\u636e\\\\u4e0d\\\\u662f\\\\u9012\\\\u5f52\\\\u8ba1\\\\u7b97\\\\u7684\\\\uff0c\\\\u5b83\\\\u4eec\\\\u53ea\\\\u662f\\\\u603b\\\\u7ed3\\\\u4e86\\\\u6240\\\\u6709\\\\u7684\\\\u6d4b\\\\u8bd5\\\\u5957\\\\u4ef6\\\\u6570\\\\u91cf\\\\u3002 report.failsafe.name=\\\\u6545\\\\u969c\\\\u4fdd\\\\u9669 report.failsafe.description=\\\\u62a5\\\\u544a\\\\u9879\\\\u76ee\\\\u7684\\\\u96c6\\\\u6210\\\\u6d4b\\\\u8bd5\\\\u7ed3\\\\u679c\\\\u3002 report.failsafe.title=\\\\u6545\\\\u969c\\\\u4fdd\\\\u9669\\\\u62a5\\\\u544a \"]},\"180\":{\"title\":\"netty介绍\",\"header\":\"Netty概述\",\"text\":[\"Netty是一个异步事件驱动的网络应用程序框架，用于快速开发可维护的高性能协议服务器和客户端。\",\"Netty对JDK自带的NIO的API进行了良好的封装，解决了上述问题。且Netty拥有高性能、吞吐量更高，延迟更低，减少资源消耗，最小化不必要的内存复制等优点。\",\"Netty现在都在用的是4.x，5.x版本已经废弃，Netty4.x需要JDK 6以上版本支持。\",\"开源地址：https://github.com/netty/netty\"]},\"181\":{\"title\":\"netty介绍\",\"header\":\"为什么使用Netty\",\"text\":[]},\"182\":{\"title\":\"netty介绍\",\"header\":\"NIO的缺点\",\"text\":[\"NIO的主要问题是：\",\"NIO的类库和API繁杂，学习成本高，你需要熟练掌握Selector、ServerSocketChannel、SocketChannel、ByteBuffer等。\",\"需要熟悉Java多线程编程。这是因为NIO编程涉及到Reactor模式，你必须对多线程和网络编程非常熟悉，才能写出高质量的NIO程序。\",\"臭名昭著的 epoll bug。它会导致Selector空轮询，最终导致CPU 100%。直到JDK1.7版本依然没得到根本性的解决。\"]},\"183\":{\"title\":\"netty介绍\",\"header\":\"Netty的优点\",\"text\":[\"使用简单：封装了NIO的很多细节，使用更简单。\",\"功能强大：预置了多种编解码功能，支持多种主流协议。\",\"定制能力强：可以通过ChannelHandler对通信框架进行灵活地扩展。\",\"性能高：通过与其他业界主流的NIO框架对比，Netty的综合性能最优。\",\"稳定：Netty修复了已经发现的所有NIO的bug，让开发人员可以专注于业务本身。\",\"社区活跃：Netty是活跃的开源项目，版本迭代周期短，bug修复速度快。\"]},\"184\":{\"title\":\"netty介绍\",\"header\":\"Netty的使用场景\",\"text\":[\"互联网行业：在分布式系统中，各个节点之间需要远程服务调用，高性能的RPC框架必不可少，Netty作为异步高性能的通信框架，往往作为基础通信组件被这些RPC框架使用。典型的应用有：阿里分布式服务框架Dubbo的RPC框架使用Dubbo协议进行节点间通信，Dubbo协议默认使用Netty作为基础通信组件，用于实现。各进程节点之间的内部通信。Rocketmq底层也是用的Netty作为基础通信组件。\",\"游戏行业：无论是手游服务端还是大型的网络游戏，Java语言得到了越来越广泛的应用。Netty作为高性能的基础通信组件，它本身提供了TCP/UDP和HTTP协议栈。\",\"大数据领域：经典的 Hadoop 的高性能通信和序列化组件Avro的RPC框架，默认采用Netty进行跨界点通信，它的Netty Service基于Netty框架二次封装实现。\"]},\"185\":{\"title\":\"netty介绍\",\"header\":\"Netty的特点\",\"text\":[\"Netty的对JDK自带的NIO的API进行封装，解决上述问题，主要特点有：\",\"设计优雅 适用于各种传输类型的统一API - 阻塞和非阻塞Socket基于灵活且可扩展的事件模型，可以清晰地分离关注点高度可定制的线程模型-单线程，一个或多个线程池真正的无连接数据报套接字支持（自3.1起）\",\"高性能 、高吞吐、低延迟、低消耗\",\"最小化不必要的内存复制\",\"安全完整的SSL/TLS和StartTLS支持\",\"高并发：Netty是一款基于NIO（Nonblocking IO，非阻塞IO）开发的网络通信框架，对比于BIO（Blocking I/O，阻塞IO），他的并发性能得到了很大提高。\",\"传输快：Netty 的传输依赖于零拷贝特性，尽量减少不必要的内存拷贝，实现了更高效率的传输。\",\"封装好：Netty 封装了 NIO 操作的很多细节，提供了易于使用调用接口。\",\"社区活跃，不断更新 社区活跃，版本迭代周期短，发现的BUG可以被及时修复，同时，更多的新功能会被加入\",\"使用方便详细记录的Javadoc，用户指南和示例没有其他依赖项，JDK 5（Netty 3.x）或6（Netty 4.x）就足够了\"]},\"186\":{\"title\":\"netty介绍\",\"header\":\"Netty的架构\",\"text\":[]},\"187\":{\"title\":\"netty介绍\",\"header\":\"功能特性\",\"text\":[\"Netty的架构\",\"传输服务支持BIO和NIO\",\"容器集成支持OSGI、JBossMC、Spring、Guice容器\",\"协议支持HTTP、Protobuf、二进制、文本、WebSocket等一系列常见协议都支持。 还支持通过实行编码解码逻辑来实现自定义协议\",\"Core核心可扩展事件模型、通用通信API、支持零拷贝的ByteBuf缓冲对象\"]},\"188\":{\"title\":\"netty介绍\",\"header\":\"核心组件\",\"text\":[]},\"189\":{\"title\":\"netty介绍\",\"header\":\"Bootstrap、ServerBootstrap\",\"text\":[\"Bootstrap意思是引导，一个Netty应用通常由一个Bootstrap开始，主要作用是配置整个Netty程序，串联各个组件，Netty中Bootstrap类是客户端程序的启动引导类，ServerBootstrap是服务端启动引导类。\"]},\"190\":{\"title\":\"netty介绍\",\"header\":\"Future、ChannelFuture\",\"text\":[\"正如前面介绍，在Netty中所有的IO操作都是异步的，不能立刻得知消息是否被正确处理，但是可以过一会等它执行完成或者直接注册一个监听，具体的实现就是通过Future和ChannelFutures，他们可以注册一个监听，当操作执行成功或失败时监听会自动触发注册的监听事件。\"]},\"191\":{\"title\":\"netty介绍\",\"header\":\"Channel\",\"text\":[\"Netty网络通信的组件，能够用于执行网络I/O操作。Channel为用户提供：\",\"当前网络连接的通道的状态（例如是否打开？是否已连接？）\",\"网络连接的配置参数（例如接收缓冲区大小）\",\"提供异步的网络I/O操作(如建立连接，读写，绑定端口)，异步调用意味着任何I/O调用都将立即返回，并且不保证在调用结束时所请求的I/O操作已完成。调用立即返回一个ChannelFuture实例，通过注册监听器到ChannelFuture上，可以I/O操作成功、失败或取消时回调通知调用方。\",\"支持关联I/O操作与对应的处理程序\",\"不同协议、不同的阻塞类型的连接都有不同的Channel类型与之对应，下面是一些常用的Channel类型\",\"NioSocketChannel，异步的客户端TCP Socket连接\",\"NioServerSocketChannel，异步的服务器端TCP Socket 连接\",\"NioDatagramChannel，异步的UDP连接\",\"NioSctpChannel，异步的客户端Sctp连接\",\"NioSctpServerChannel，异步的Sctp服务器端连接 这些通道涵盖了UDP和TCP网络IO以及文件IO.\"]},\"192\":{\"title\":\"netty介绍\",\"header\":\"Selector\",\"text\":[\"Netty基于Selector对象实现I/O多路复用，通过 Selector, 一个线程可以监听多个连接的Channel事件, 当向一个Selector中注册Channel 后，Selector 内部的机制就可以自动不断地查询(select) 这些注册的Channel是否有已就绪的I/O事件(例如可读, 可写, 网络连接完成等)，这样程序就可以很简单地使用一个线程高效地管理多个Channel。\"]},\"193\":{\"title\":\"netty介绍\",\"header\":\"NioEventLoop\",\"text\":[\"NioEventLoop中维护了一个线程和任务队列，支持异步提交执行任务，线程启动时会调用NioEventLoop的run方法，执行I/O任务和非I/O任务：\",\"I/O任务 即selectionKey中ready的事件，如accept、connect、read、write等，由processSelectedKeys方法触发。\",\"非IO任务 添加到taskQueue中的任务，如register0、bind0等任务，由runAllTasks方法触发。\",\"两种任务的执行时间比由变量ioRatio控制，默认为50，则表示允许非IO任务执行的时间与IO任务的执行时间相等。\"]},\"194\":{\"title\":\"netty介绍\",\"header\":\"NioEventLoopGroup\",\"text\":[\"NioEventLoopGroup，主要管理eventLoop的生命周期，可以理解为一个线程池，内部维护了一组线程，每个线程(NioEventLoop)负责处理多个Channel上的事件，而一个Channel只对应于一个线程。\"]},\"195\":{\"title\":\"netty介绍\",\"header\":\"ChannelHandler\",\"text\":[\"ChannelHandler是一个接口，处理I / O事件或拦截I / O操作，并将其转发到其ChannelPipeline(业务处理链)中的下一个处理程序。\",\"ChannelHandler本身并没有提供很多方法，因为这个接口有许多的方法需要实现，方便使用期间，可以继承它的子类：\",\"ChannelInboundHandler用于处理入站I/O事件\",\"ChannelOutboundHandler用于处理出站I/O操作\",\"或者使用以下适配器类：\",\"ChannelInboundHandlerAdapter用于处理入站I/O事件\",\"ChannelOutboundHandlerAdapter用于处理出站I/O操作\",\"ChannelDuplexHandler用于处理入站和出站事件\"]},\"196\":{\"title\":\"netty介绍\",\"header\":\"ChannelHandlerContext\",\"text\":[\"保存Channel相关的所有上下文信息，同时关联一个ChannelHandler对象\"]},\"197\":{\"title\":\"netty介绍\",\"header\":\"ChannelPipeline\",\"text\":[\"保存ChannelHandler的List，用于处理或拦截Channel的入站事件和出站操作。 ChannelPipeline实现了一种高级形式的拦截过滤器模式，使用户可以完全控制事件的处理方式，以及Channel中各个的ChannelHandler如何相互交互。\",\"下图引用Netty的Javadoc4.1中ChannelPipline的说明，描述了ChannelPipeline中ChannelHandler通常如何处理I/O事件。 I/O事件由ChannelInboundHandler或ChannelOutboundHandler处理，并通过调用ChannelHandlerContext中定义的事件传播方法（例如ChannelHandlerContext.fireChannelRead（Object）和ChannelOutboundInvoker.write（Object））转发到其最近的处理程序。\",\" I/O Request via Channel or ChannelHandlerContext | +---------------------------------------------------+---------------+ | ChannelPipeline | | | \\\\|/ | | +---------------------+ +-----------+----------+ | | | Inbound Handler N | | Outbound Handler 1 | | | +----------+----------+ +-----------+----------+ | | /|\\\\ | | | | \\\\|/ | | +----------+----------+ +-----------+----------+ | | | Inbound Handler N-1 | | Outbound Handler 2 | | | +----------+----------+ +-----------+----------+ | | /|\\\\ . | | . . | | ChannelHandlerContext.fireIN_EVT() ChannelHandlerContext.OUT_EVT()| | [ method call] [method call] | | . . | | . \\\\|/ | | +----------+----------+ +-----------+----------+ | | | Inbound Handler 2 | | Outbound Handler M-1 | | | +----------+----------+ +-----------+----------+ | | /|\\\\ | | | | \\\\|/ | | +----------+----------+ +-----------+----------+ | | | Inbound Handler 1 | | Outbound Handler M | | | +----------+----------+ +-----------+----------+ | | /|\\\\ | | +---------------+-----------------------------------+---------------+ | \\\\|/ +---------------+-----------------------------------+---------------+ | | | | | [ Socket.read() ] [ Socket.write() ] | | | | Netty Internal I/O Threads (Transport Implementation) | +-------------------------------------------------------------------+ 123456789101112131415161718192021222324252627282930313233343536373839 \",\"入站事件由自下而上方向的入站处理程序处理，如图左侧所示。入站Handler处理程序通常处理由图底部的I/O线程生成的入站数据。通常通过实际输入操作（例如SocketChannel.read（ByteBuffer））从远程读取入站数据。\",\"出站事件由上下方向处理，如图右侧所示。 出站Handler处理程序通常会生成或转换出站传输，例如write请求。 I/O线程通常执行实际的输出操作，例如SocketChannel.write（ByteBuffer）。\",\"在Netty中每个Channel都有且仅有一个ChannelPipeline与之对应, 它们的组成关系如下:\",\"channel\",\"一个Channel包含了一个ChannelPipeline, 而ChannelPipeline中又维护了一个由ChannelHandlerContext组成的双向链表, 并且每个ChannelHandlerContext中又关联着一个ChannelHandler。入站事件和出站事件在一个双向链表中，入站事件会从链表head往后传递到最后一个入站的handler，出站事件会从链表tail往前传递到最前一个出站的handler，两种类型的handler互不干扰。\"]},\"198\":{\"title\":\"netty介绍\",\"header\":\"Netty服务端过程初始化并启动过程\",\"text\":[\"初始化并启动Netty服务端过程如下：\",\"public static void main(String[] args) { // 创建mainReactor NioEventLoopGroup boosGroup = new NioEventLoopGroup(); // 创建工作线程组 NioEventLoopGroup workerGroup = new NioEventLoopGroup(); final ServerBootstrap serverBootstrap = new ServerBootstrap(); serverBootstrap // 组装NioEventLoopGroup .group(boosGroup, workerGroup) // 设置channel类型为NIO类型 .channel(NioServerSocketChannel.class) // 设置连接配置参数 .option(ChannelOption.SO_BACKLOG, 1024) .childOption(ChannelOption.SO_KEEPALIVE, true) .childOption(ChannelOption.TCP_NODELAY, true) // 配置入站、出站事件handler .childHandler(new ChannelInitializer<NioSocketChannel>() { @Override protected void initChannel(NioSocketChannel ch) { // 配置入站、出站事件channel ch.pipeline().addLast(...); ch.pipeline().addLast(...); } }); // 绑定端口 int port = 8080; serverBootstrap.bind(port).addListener(future -> { if (future.isSuccess()) { System.out.println(new Date() + \\\": 端口[\\\" + port + \\\"]绑定成功!\\\"); } else { System.err.println(\\\"端口[\\\" + port + \\\"]绑定失败!\\\"); } }); } \",\"基本过程如下：\",\"初始化创建2个NioEventLoopGroup，其中boosGroup用于Accetpt连接建立事件并分发请求， workerGroup用于处理I/O读写事件和业务逻辑\",\"基于ServerBootstrap(服务端启动引导类)，配置EventLoopGroup、Channel类型，连接参数、配置入站、出站事件handler\",\"绑定端口，开始工作\"]},\"199\":{\"title\":\"netty介绍\",\"header\":\"服务端Netty的工作架构图\",\"text\":[\"结合上面的介绍的Netty Reactor模型，介绍服务端Netty的工作架构图：\",\"reactor\",\"server端包含1个Boss NioEventLoopGroup和1个Worker NioEventLoopGroup，NioEventLoopGroup相当于1个事件循环组，这个组里包含多个事件循环NioEventLoop，每个NioEventLoop包含1个selector和1个事件循环线程。\",\"每个Boss NioEventLoop循环执行的任务包含3步：\",\"轮询accept事件\",\"处理accept I/O事件，与Client建立连接，生成NioSocketChannel，并将NioSocketChannel注册到某个Worker NioEventLoop的Selector上\",\"处理任务队列中的任务，runAllTasks。\",\"任务队列中的任务包括用户调用eventloop.execute或schedule执行的任务，或者其它线程提交到该eventloop的任务。\",\"每个Worker NioEventLoop循环执行的任务包含3步：\",\"轮询read、write事件；\",\"处I/O事件，即read、write事件，在NioSocketChannel可读、可写事件发生时进行处理\",\"处理任务队列中的任务，runAllTasks。\"]},\"200\":{\"title\":\"netty介绍\",\"header\":\"示例项目\",\"text\":[\"https://github.com/waylau/netty-4-user-guide\",\"https://github.com/waylau/netty-4-user-guide-demos\",\"https://github.com/fuzhengwei/itstack-demo-netty\",\"https://github.com/fuzhengwei/itstack-demo-rpc\"]},\"201\":{\"title\":\"netty介绍\",\"header\":\"参考文献\",\"text\":[\"https://blog.csdn.net/crazymakercircle/article/details/124588880\",\"https://zhuanlan.zhihu.com/p/474844021\"]},\"202\":{\"title\":\"logback\",\"header\":\"前言\",\"text\":[\"SLF4J，即简单日志门面（Simple Logging Facade for Java），不是具体的日志解决方案，它只服务于各种各样的日志系统。\",\"SLF4J最常用的日志实现框架是：log4j、logback。一般有slf4j+log4j、slf4j+log4j2、slf4j+logback三种日志组合。本文选取logback做具体介绍。\"]},\"203\":{\"title\":\"logback\",\"header\":\"一、logback介绍\",\"text\":[\"Logback是由log4j创始人设计的另一个开源日志组件,官方网站：http://logback.qos.ch。它当前分为以下三个模块：\",\"ogback-core：其它两个模块的基础模块。\",\"logback-classic：它是log4j的一个改良版本，同时它完整实现了slf4j API使你可以很方便地更换成其它日志系统如log4j或JDK14 Logging。\",\"logback-access：访问模块与Servlet容器集成提供通过Http来访问日志的功能。\",\"默认情况下，Spring Boot会用Logback来记录日志，并用INFO级别输出到控制台。\",\"日志级别（log level）：用来控制日志信息的输出，从高到低分为共分为七个等级:\",\"日志等级\",\"off 最高等级，用于关闭所有日志记录。\",\"fatal 指出每个严重的错误事件将会导致应用程序的退出。\",\"error 指出虽然发生错误事件，但仍然不影响系统的继续运行。\",\"warm 表明会出现潜在的错误情形。\",\"info 一般和在粗粒度级别上，强调应用程序的运行全程。\",\"debug 一般用于细粒度级别上，对调试应用程序非常有帮助。\",\"all 最低等级，用于打开所有日志记录。\"]},\"204\":{\"title\":\"logback\",\"header\":\"二、logback配置\",\"text\":[]},\"205\":{\"title\":\"logback\",\"header\":\"2.1 pom依赖\",\"text\":[\"<dependency> <groupId>ch.qos.logback</groupId> <artifactId>logback-classic</artifactId> <version>1.2.3</version> </dependency> <!--引入以上依赖，会自动引入以下jar logback-classic.x.x.x.jar logback-core.x.x.x.jar slf4j-api-x.x.x.jar --> \",\"注意spring-boot-starter里已集成spring-boot-starter-logging，可直接使用。\"]},\"206\":{\"title\":\"logback\",\"header\":\"2.2 logback.xml配置\",\"text\":[\"首先会从resource文件中查询logback-test.groovy, logback-test.xml, logback.groovy, logback.xml文件，找到就会刷新文件反正文件变化，找不到就会加上-spring继续查询。具体代码实现可以查看org.springframework.boot.logging.AbstractLoggingSystem类。\",\"private void initializeWithConventions(LoggingInitializationContext initializationContext, LogFile logFile) { String config = getSelfInitializationConfig(); if (config != null && logFile == null) { // self initialization has occurred, reinitialize in case of property changes reinitialize(initializationContext); return; } if (config == null) { //logback-test-spring.groovy logback-test-spring.xml logback-spring.groovy logback-spring.xml config = getSpringInitializationConfig(); } if (config != null) { loadConfiguration(initializationContext, config, logFile); return; } loadDefaults(initializationContext, logFile); } \"]},\"207\":{\"title\":\"logback\",\"header\":\"2.3 logback.xml指定路径\",\"text\":[\"在application.properties中指定logback.xml路径，如：\",\"logging.config=classpath:logback-spring.xml \",\"也可以指定vm参数启动时指定，如：\",\"java -jar xxx.jar -Dlogging.config=classpath:logback-spring.xml \"]},\"208\":{\"title\":\"logback\",\"header\":\"2.4 logback.xml默认配置\",\"text\":[\"spring-boot-2.6.14.jar!\\\\org\\\\springframework\\\\boot\\\\logging\\\\logback\\\\base.xml文件内容如下：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <!-- Base logback configuration provided for compatibility with Spring Boot 1.1 --> <included> <include resource=\\\"org/springframework/boot/logging/logback/defaults.xml\\\" /> <property name=\\\"LOG_FILE\\\" value=\\\"${LOG_FILE:-${LOG_PATH:-${LOG_TEMP:-${java.io.tmpdir:-/tmp}}}/spring.log}\\\"/> <include resource=\\\"org/springframework/boot/logging/logback/console-appender.xml\\\" /> <include resource=\\\"org/springframework/boot/logging/logback/file-appender.xml\\\" /> <root level=\\\"INFO\\\"> <appender-ref ref=\\\"CONSOLE\\\" /> <appender-ref ref=\\\"FILE\\\" /> </root> </included> \",\"可以继承base.xml，然后自定义配置，如：\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?> <configuration> <!-- 配置信息需要放在前面 --> <property name=\\\"LOG_PATH\\\" value=\\\"D:/\\\"/> <include resource=\\\"org/springframework/boot/logging/logback/base.xml\\\"/> <logger name=\\\"com.xxx\\\" level=\\\"DEBUG\\\" additivity=\\\"false\\\"> <appender-ref ref=\\\"FILE\\\"/> </logger> </configuration> \"]},\"209\":{\"title\":\"logback\",\"header\":\"三、configuration标签\",\"text\":[\"configuration节点主要包含appdender、logger、root三个标签，configuration标签的属性如下：\",\"scan: 当此属性设置为true时，配置文件如果发生改变，将会被重新加载，默认值为true。\",\"scanPeriod: 设置监测配置文件是否有修改的时间间隔，如果没有给出时间单位，默认单位是毫秒。当scan为true时，此属性生效。默认的时间间隔为1分钟。\",\"debug: 当此属性设置为true时，将打印出logback内部日志信息，实时查看logback运行状态。默认值为false。\"]},\"210\":{\"title\":\"logback\",\"header\":\"四、logger标签\",\"text\":[\"logger是configuration的子节点，用来设置某一个包或者具体的某一个类的日志打印级别、以及指定appender。logger仅有一个name属性，一个可选的level和一个可选的addtivity属性。\",\"name: 用来指定受此logger约束的某一个包或者具体的某一个类。\",\"level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，还有一个特殊值INHERITED或者同义词NULL，代表强制执行上级的级别。如果未设置此属性，那么当前logger将会继承上级的级别。\",\"addtivity: 是否向上级logger传递打印信息。默认是true。如果存在重复打印问题，可以设置addtivity=false解决。\",\"logger可以包含零个或多个appender-ref元素，标识这个appender将会添加到这个logger。\"]},\"211\":{\"title\":\"logback\",\"header\":\"五、root标签\",\"text\":[\"root也是logger元素，但是它是根logger。只有一个level属性，因为已经被命名为root，所以不需要name属性。\",\"level: 用来设置打印级别，大小写无关：TRACE, DEBUG, INFO, WARN, ERROR, ALL 和 OFF，不能设置为INHERITED或者同义词NULL。默认是DEBUG。\",\"root可以包含零个或多个appender-ref元素，标识这个appender将会添加到这个logger。\"]},\"212\":{\"title\":\"logback\",\"header\":\"六、appender标签\",\"text\":[\"appender有两个必要属性name和class，name指定appender名称，class指定appender的全限定名。另一个属性encoder：负责两件事，一是把日志信息转换成字节数组，二是把字节数组写入到输出流。目前PatternLayoutEncoder 是唯一有用的且默认的encoder，有一个节点，用来设置日志的输入格式，使用“%”加“转换符”方式。\",\"<encoder class=\\\"ch.qos.logback.classic.encoder.PatternLayoutEncoder\\\"> <pattern>%yellow(%d{yyyy-MM-dd HH:mm:ss}) %red([%thread]) %highlight(%-5level) %cyan(%logger{50}) - %magenta(%msg) %n</pattern> <charset>UTF-8</charset> </encoder> \",\"%d表示日期\",\"%thread表示线程名\",\"%-5level表示级别从左显示5个字符宽度\",\"%msg是日志消息\",\"%n是换行符\",\"如果要输出“%”则必须用“\\\\”对“%”进行转义\",\"下面介绍几种常用的appender。\"]},\"213\":{\"title\":\"logback\",\"header\":\"6.1 ConsoleAppender\",\"text\":[\"把日志输出到控制台，有以下子节点：\",\"<encoder>：对日志进行格式化,上面已介绍；\",\"<target>：字符串System.out或者System.err，默认System.out；\",\"<configuration scan=\\\"true\\\" scanPeriod=\\\"60 seconds\\\" debug=\\\"false\\\"> <!-- 控制台输出 --> <appender name=\\\"STDOUT\\\" class=\\\"ch.qos.logback.core.ConsoleAppender\\\"> <encoder> <!--格式化输出：%d表示日期，%thread表示线程名，%highlight()高亮显示，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符--> <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %highlight(%-5level) [%logger{15}:%line] - %msg%n</pattern> <charset>UTF-8</charset> </encoder> </appender> <!-- 日志输出级别 --> <root level=\\\"error\\\"> <appender-ref ref=\\\"STDOUT\\\" /> </root> </configuration> \"]},\"214\":{\"title\":\"logback\",\"header\":\"6.2 FileAppender\",\"text\":[\"把日志添加到文件，有以下子节点：\",\"<file>：被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。\",\"<append>：如果是true，日志被追加到文件结尾，如果是false，清空现存文件，默认是true。\",\"<encoder>：对记录事件进行格式化。\",\"<prudent>：如果是true，日志会被安全的写入文件，即使其他的FileAppender也在向此文件做写入操作，效率低，默认是false。\",\"<configuration> <appender name=\\\"FILE\\\" class=\\\"ch.qos.logback.core.FileAppender\\\"> <file>testFile.log</file> <append>true</append> <encoder> <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern> </encoder> </appender> <root level=\\\"DEBUG\\\"> <appender-ref ref=\\\"FILE\\\" /> </root> </configuration> \"]},\"215\":{\"title\":\"logback\",\"header\":\"6.3 RollingFileAppender\",\"text\":[\"滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件。这个是最常用的！\",\"有以下子节点：\",\"<file>：被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。\",\"<filter>: 表示过滤器，用法稍后讲解。\",\"<append>：如果是 true，日志被追加到文件结尾，如果是false，清空现存文件，默认是true。\",\"<encoder>：对记录日志进行格式化。\",\"<rollingPolicy>: 当发生滚动时，决定 RollingFileAppender的行为，涉及文件移动和重命名。\",\"<triggeringPolicy >: 告知RollingFileAppender何时激活滚动。\",\"<prudent>：当为true时，不支持FixedWindowRollingPolicy。支持TimeBasedRollingPolicy，但是有两个限制，1.不支持也不允许文件压缩，2.不能设置file属性，必须留空\"]},\"216\":{\"title\":\"logback\",\"header\":\"6.3.1 FixedWindowRollingPolicy\",\"text\":[\"根据固定窗口算法重命名文件的滚动策略。有以下子节点：\",\"minIndex: 窗口索引最小值 maxIndex: 窗口索引最大值，当用户指定的窗口过大时，会自动将窗口设置为12。 fileNamePattern :必须包含“%i”例如，假设最小值和最大值分别为1和2，命名模式为 mylog%i.log,会产生归档文件mylog1.log和mylog2.log。还可以指定文件压缩选项，例如，mylog%i.log.gz 或者 没有log%i.log.zip。\",\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?> <configuration> <appender name=\\\"FILE\\\" class=\\\"ch.qos.logback.core.rolling.RollingFileAppender\\\"> <file>test.log</file> <rollingPolicy class=\\\"ch.qos.logback.core.rolling.FixedWindowRollingPolicy\\\"> <fileNamePattern>tests.%i.log.zip</fileNamePattern> <minIndex>1</minIndex> <maxIndex>3</maxIndex> </rollingPolicy> <triggeringPolicy class=\\\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\\\"> <maxFileSize>5MB</maxFileSize> </triggeringPolicy> <encoder> <pattern>%-4relative [%thread] %-5level %logger{35} - %msg%n</pattern> </encoder> </appender> <root level=\\\"DEBUG\\\"> <appender-ref ref=\\\"FILE\\\" /> </root> </configuration> \"]},\"217\":{\"title\":\"logback\",\"header\":\"6.3.2 triggeringPolicy\",\"text\":[\"如果当前活动文件的大小超过指定大小会触发当前活动文件滚动。只有一个节点:<maxFileSize>，当前活动日志文件的大小，默认值是10MB。\",\"<triggeringPolicy class=\\\"ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy\\\"> <MaxFileSize>25MB</MaxFileSize> </triggeringPolicy> \"]},\"218\":{\"title\":\"logback\",\"header\":\"6.3.3 TimeBasedRollingPolicy\",\"text\":[\"根据时间的滚动策略，既负责滚动也负责触发滚动。有以下子节点：\",\"fileNamePattern 必要节点，文件名必须包含%d转换符，%d可以包含一个 java.text.SimpleDateFormat指定的时间格式，如：%d{yyyy-MM},如果直接使用%d，默认格式是yyyy-MM-dd。RollingFileAppender的file子节点可有可无，通过设置file，可以为活动文件和归档文件指定不同位置，当前日志总是记录到file指定的文件（活动文件），活动文件的名字不会改变；如果没设置file，活动文件的名字会根据fileNamePattern 的值，每隔一段时间改变一次。“/”或者“\\\\”会被当做目录分隔符。 maxHistory 可选节点，控制保留的归档文件的最大数量，超出数量就删除旧文件。假设设置每个月滚动，且<maxHistory>是6，则只保存最近6个月的文件，删除之前的旧文件。注意，删除旧文件时，那些为了归档而创建的目录也会被删除。\",\"<appender name=\\\"file\\\" class=\\\"ch.qos.logback.core.rolling.RollingFileAppender\\\"> <rollingPolicy class=\\\"ch.qos.logback.core.rolling.TimeBasedRollingPolicy\\\"> <FileNamePattern>d://log/business.log.%d.log</FileNamePattern> <maxHistory>30</maxHistory> </rollingPolicy> <encoder> <pattern>%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} - %msg%n</pattern> <charset>UTF-8</charset> </encoder> </appender> <logger name=\\\"com.z7.springcloud.service\\\" level=\\\"INFO\\\" additivity=\\\"false\\\"> <appender-ref ref=\\\"file\\\" /> </logger> \"]},\"219\":{\"title\":\"logback\",\"header\":\"6.3.4 SizeAndTimeBasedRollingPolicy\",\"text\":[\"最常用的滚动策略，根据时间再根据文件大小来滚动生成文件，例如：\",\"<!--当前项目的目录下--> <property name=\\\"LOG_HOME\\\" value=\\\"logs/cloud\\\" /> <appender name=\\\"file\\\" class=\\\"ch.qos.logback.core.rolling.RollingFileAppender\\\"> <rollingPolicy class=\\\"ch.qos.logback.core.rolling.SizeAndTimeBasedRollingPolicy\\\"> <!-- rollover daily --> <fileNamePattern>${LOG_HOME}/mylog-%d{yyyy-MM-dd}.%i.log</fileNamePattern> <!-- 每个文件最多5MB，保存60天的历史记录，但最多20GB --> <maxFileSize>5MB</maxFileSize> <maxHistory>60</maxHistory> <totalSizeCap>20GB</totalSizeCap> </rollingPolicy> <encoder> <pattern>%d{yyyy-MM-dd'T'HH:mm:ss.SSSXXX} - %msg%n</pattern> <charset>UTF-8</charset> </encoder> </appender> \"]},\"220\":{\"title\":\"logback\",\"header\":\"七、filter\",\"text\":[\"过滤器，执行一个过滤器会有返回个枚举值，即DENY，NEUTRAL，ACCEPT其中之一。\",\"返回DENY，日志将立即被抛弃不再经过其他过滤器； 返回NEUTRAL，有序列表里的下个过滤器过接着处理日志； 返回ACCEPT，日志会被立即处理，不再经过剩余过滤器。\",\"过滤器被添加到<Appender>中，为<Appender>添加一个或多个过滤器后，可以用任意条件对日志进行过滤。<Appender>有多个过滤器时，按照配置顺序执行。\",\"下面是几个常用的过滤器：\"]},\"221\":{\"title\":\"logback\",\"header\":\"7.1 ThresholdFilter\",\"text\":[\"临界值过滤器，过滤掉低于指定临界值的日志。当日志级别等于或高于临界值时，过滤器返回NEUTRAL；当日志级别低于临界值时，日志会被拒绝。\",\"例如：过滤掉所有低于INFO级别的日志。\",\"<configuration> <appender name=\\\"CONSOLE\\\" class=\\\"ch.qos.logback.core.ConsoleAppender\\\"> <!-- 过滤掉 TRACE 和 DEBUG 级别的日志--> <filter class=\\\"ch.qos.logback.classic.filter.ThresholdFilter\\\"> <level>INFO</level> </filter> <encoder> <pattern> %-4relative [%thread] %-5level %logger{30} - %msg%n </pattern> </encoder> </appender> <root level=\\\"DEBUG\\\"> <appender-ref ref=\\\"CONSOLE\\\" /> </root> </configuration> \"]},\"222\":{\"title\":\"logback\",\"header\":\"7.2 LevelFilter\",\"text\":[\"级别过滤器，根据日志级别进行过滤。如果日志级别等于配置级别，过滤器会根据onMath 和 onMismatch接收或拒绝日志。有以下子节点：\",\"<level>:设置过滤级别\",\"<onMatch>:用于配置符合过滤条件的操作\",\"<onMismatch>:用于配置不符合过滤条件的操作\",\"例如：将过滤器的日志级别配置为INFO，所有INFO级别的日志交给appender处理，非INFO级别的日志，被过滤掉。\",\"<configuration> <appender name=\\\"CONSOLE\\\" class=\\\"ch.qos.logback.core.ConsoleAppender\\\"> <filter class=\\\"ch.qos.logback.classic.filter.LevelFilter\\\"> <level>INFO</level> <onMatch>ACCEPT</onMatch> <onMismatch>DENY</onMismatch> </filter> <encoder> <pattern> %-4relative [%thread] %-5level %logger{30} - %msg%n </pattern> </encoder> </appender> <root level=\\\"DEBUG\\\"> <appender-ref ref=\\\"CONSOLE\\\" /> </root> </configuration> \"]},\"223\":{\"title\":\"logback\",\"header\":\"参考文献\",\"text\":[\"http://logback.qos.ch/\",\"https://zhuanlan.zhihu.com/p/474844021\"]},\"224\":{\"title\":\"tomcat embed\",\"header\":\"前言\",\"text\":[\"众所周知springboot通过Fatjar运行时内嵌了tomcat，那么tomcat是如何启动的，又是如何调整tomcat启动参数的，我们来一探究竟。\",\"内置Tomcat长什么样，它与原来的Tomcat有啥区别\",\"Springboot是如何使用的内置tomcat\",\"DispatcherServlet是如何加载到tomcat容器的\"]},\"225\":{\"title\":\"tomcat embed\",\"header\":\"一、原来的Tomcat启动流程\",\"text\":[\"1.运行catalina.shstart脚本最终会执行Bootstrap的mian方法\",\"eval exec \\\"\\\\\\\"$_RUNJDB\\\\\\\"\\\" \\\"\\\\\\\"$CATALINA_LOGGING_CONFIG\\\\\\\"\\\" $LOGGING_MANAGER \\\"$JAVA_OPTS\\\" \\\"$CATALINA_OPTS\\\" \\\\ -D$ENDORSED_PROP=\\\"$JAVA_ENDORSED_DIRS\\\" \\\\ -classpath \\\"$CLASSPATH\\\" \\\\ -sourcepath \\\"$CATALINA_HOME\\\"/../../java \\\\ -Dcatalina.base=\\\"$CATALINA_BASE\\\" \\\\ -Dcatalina.home=\\\"$CATALINA_HOME\\\" \\\\ -Djava.io.tmpdir=\\\"$CATALINA_TMPDIR\\\" \\\\ //这里会运行Bootstrap的main方法 并传入start参数 org.apache.catalina.startup.Bootstrap \\\"$@\\\" start fi \",\"2.执行Bootstrap的mian方法 构建Catalina对象 并执行其load和start方法\",\"//全局变量 用于保存Bootstrap实例 private static volatile Bootstrap daemon = null; //全局变量 用于保存Catalina对象 private Object catalinaDaemon = null; public static void main(String args[]) { synchronized (daemonLock) { if (daemon == null) { // Don't set daemon until init() has completed Bootstrap bootstrap = new Bootstrap(); try { //这里 构建Catalina对象并赋值给全局变量catalinaDaemon bootstrap.init(); } catch (Throwable t) { ... } //这里初始化了全局变量 daemon = bootstrap; } else { ... } try { ... if (command.equals(\\\"start\\\")) { daemon.setAwait(true); //本质是调用了Catalina对象的load方法 daemon.load(args); //本质上是调用了Catalina的start方法 daemon.start(); ... } } catch (Throwable t) { ... } ... } //构建Catalina对象并赋值给全局变量catalinaDaemon public void init() throws Exception { ... //通过反射构建Catalina对象 Class<?> startupClass = catalinaLoader.loadClass(\\\"org.apache.catalina.startup.Catalina\\\"); Object startupInstance = startupClass.getConstructor().newInstance(); ... //这里把Catalina对象赋予了全局变量catalinaDaemon catalinaDaemon = startupInstance; } //本质是调用了Catalina对象的load方法 private void load(String[] arguments) throws Exception { // Call the load() method String methodName = \\\"load\\\"; ... Method method = catalinaDaemon.getClass().getMethod(methodName, paramTypes); //这里就是调用了Catalina对象的load方法 method.invoke(catalinaDaemon, param); } //本质上是调用了Catalina的start方法 public void start() throws Exception { Method method = catalinaDaemon.getClass().getMethod(\\\"start\\\", (Class [])null); method.invoke(catalinaDaemon, (Object [])null); } \",\"3.Catalina的load方法\",\"//全局变量Server对象 该对象通过解析server.xml生成 protected Server server = null; public void load() { ... // Parse main server.xml // 解析server.xml文件 初始化server对象 parseServerXml(true); Server s = getServer() ... // Start the new server try { getServer().init(); } catch (LifecycleException e) { ... } ... } \",\"server.xml的结构是一个4层嵌套的树状结构。一层也就是根节点是server元素，二层是service元素，三层是Engine元素，四层是Host元素。最终其被解析Server对象。该对象内部包含一组service对象，每个service对象包含一个Engine对象，每个Engine对象包含一组Host对象。\",\"其实每个Host对象还对应一组Context对象也就是我们常说的Servlet容器，只是在server.xml文件中体现的比较隐晦。Host对象有一个属性叫做appBase，该属性的默认值是webapps，最终解析时会去Tomcat根目录下的webapps文件中找web.xml，找到一个就生成一个Context对象。\",\"4.Catalina的start方法\",\"//本质上就是调用server的start方法 public void start() { ... // Start the new server try { getServer().start(); } catch (LifecycleException e) { ... } ... } //返回全局变量server public Server getServer() { return server; } \",\"这里蕴含这一个设计模式值得一提,通过load方法可以知道Server内部有一组service，每个service内部有一个Engine，每个Engine内部有一组host，每个host内部有一组context。这里提到的每一个对象都有init方法和start方法，在server的start方法被调用后需要执行其下每个service对象的init方法和start方法，当service的start方法被调用后需要执行其下Engine的init方法和start方法以此类推一直到调用完Context的init方法和start方法。Tomcat使用抽象模板的设计模式完成了该流程的实现。 首先看看抽象模板类LifecycleBase，上述提到的所有对象都继承该类，该类有4个主要方法，其中start是模板类的核心方法。\",\"public abstract class LifecycleBase implements Lifecycle { //抽象模板类提供的公共方法 public final synchronized void init() throws LifecycleException { if (!state.equals(LifecycleState.NEW)) { invalidTransition(Lifecycle.BEFORE_INIT_EVENT); } try { setStateInternal(LifecycleState.INITIALIZING, null, false); //该方法是一个抽象方法由子类完成实现 //server类的实现方式 就是便利其内部的sercie对象 挨个调用其init方法 //service类的实现方法 就是调用engine的 init方法 //engine的实现方法 就是便利其内部的host对象 挨个调用其init方法 //以此类推。。。 initInternal(); //这里会发生状态变更 防止重复init用的 setStateInternal(LifecycleState.INITIALIZED, null, false); } catch (Throwable t) { handleSubClassException(t, \\\"lifecycleBase.initFail\\\", toString()); } } //抽象模板类提供的公共方法 public final synchronized void start() throws LifecycleException { if (state.equals(LifecycleState.NEW)) { //start方法中会先执行init方法 init(); } else if (state.equals(LifecycleState.FAILED)) { ... } else if (!state.equals(LifecycleState.INITIALIZED) && !state.equals(LifecycleState.STOPPED)) { ... } ... try { setStateInternal(LifecycleState.STARTING_PREP, null, false); //该方法是一个抽象方法由子类完成实现 //server类的实现方式 就是便利其内部的sercie对象 挨个调用其start方法 //service类的实现方法 就是调用engine的 start方法 //engine的实现方法 就是便利其内部的host对象 挨个调用其start方法 //以此类推。。。 startInternal(); ... } catch (Throwable t) { ... } } //子类实现 protected abstract void initInternal() throws LifecycleException; //子类实现 protected abstract void startInternal() throws LifecycleException; } \",\"基于对LifecycleBase的4个方法的分析，我们看看当server的start方法被调用时会发生什么\",\"server的start方法会调用其父类LifecycleBase的公共start方法\",\"接着会调用LifecycleBase的init方法\",\"接着会调用LifecycleBase的initInternal方法，该方法由子类server实现，便利其下的service对象挨个调用init方法\",\"service对象的init方法是由父类LifecycleBase实现的，所以会执行LifecycleBase的init方法。这里有一个状态变更即元素的state状态由LifecycleState.NEW变成了LifecycleState.INITIALIZING防止在start方法中再次执行init方法\",\"以此类推最终所有元素的init方法会被调用并且状态变成了LifecycleState.INITIALIZING，最终又回到了server的start方法此时init方法已经执行完了\",\"继续向下走执行startInternal方法，该方法由子类server实现，便利其下的service对象挨个调用start方法\",\"start方法由父类LifecycleBase实现的，所以会执行LifecycleBase的start方法，此时因为对象状态已经不是new状态了，init方法不会执行，继续执行startInternal方法，以此类推最终所有元素的start方法会被执行\",\"最终各个元素的init和start方法都被执行了一遍\"]},\"226\":{\"title\":\"tomcat embed\",\"header\":\"二、内嵌Tomcat\",\"text\":[\"阿帕奇提供了一个类，名字就叫Tomcat。该类和Catalina类十分相似，内部也有一个Server对象并且提供了start方法，本质也是调用的server.start。接下来看看这个类\",\"public class Tomcat { //全局变量 protected Server server; //启动方法 public void start() throws LifecycleException { getServer(); //本质是server的start方法 server.start(); } //重点在后边的这几个方法 //获取server public Server getServer() { ... if (server != null) { return server; } //这里直接new对象了 不像Catalina那样需要解析server.xml文件 server = new StandardServer(); initBaseDir(); ... //顺便为其创建了一个service对象 Service service = new StandardService(); service.setName(\\\"Tomcat\\\"); server.addService(service); return server; } //获取service 内部调用了getServer 一样的道理 没有就new public Service getService() { return getServer().findServices()[0]; } //获取引擎 一样的逻辑 没有就new public Engine getEngine() { Service service = getServer().findServices()[0]; if (service.getContainer() != null) { return service.getContainer(); } Engine engine = new StandardEngine(); engine.setName( \\\"Tomcat\\\" ); engine.setDefaultHost(hostname); engine.setRealm(createDefaultRealm()); service.setContainer(engine); return engine; } //获取host 同上没有就new public Host getHost() { Engine engine = getEngine(); if (engine.findChildren().length > 0) { return (Host) engine.findChildren()[0]; } Host host = new StandardHost(); host.setName(hostname); getEngine().addChild(host); return host; } } \",\"最终可以发现内嵌Tomcat本质上和Catalina对象一样，都是通过初始化一个Server对象然后调用Server对象的start方法完成tomcat启动的。区别就是初始化Server的过程不在需要解析server.xml文件了，各种get就能完成初始化。\"]},\"227\":{\"title\":\"tomcat embed\",\"header\":\"三、Springboot启动Tomcat的时机\",\"text\":[\"springboot启动类的mian方法中会执行SpringApplication.run方法，该方法会创建并启动一个容器AnnotationConfigServletWebServerApplicationContext,容器启动会执行祖先类AbstractApplicationContext的refresh方法，该方法中的onRefresh方法被AnnotationConfigServletWebServerApplicationContext的父类ServletWebServerApplicationContext重写了，内置Tomcat就在onRefresh方法中被启动了。\"]},\"228\":{\"title\":\"tomcat embed\",\"header\":\"3.1 ServletWebServerApplicationContext\",\"text\":[\"public class ServletWebServerApplicationContext extends GenericWebApplicationContext implements ConfigurableWebServerApplicationContext { @Override protected void onRefresh() { super.onRefresh(); try { createWebServer();//创建web服务 } catch (Throwable ex) { throw new ApplicationContextException(\\\"Unable to start web server\\\", ex); } } private void createWebServer() { WebServer webServer = this.webServer; ServletContext servletContext = getServletContext(); if (webServer == null && servletContext == null) { StartupStep createWebServer = this.getApplicationStartup().start(\\\"spring.boot.webserver.create\\\"); //从spring容器中获取TomcatServletWebServerFactory如果没注入则直接进行注入 ServletWebServerFactory factory = getWebServerFactory(); createWebServer.tag(\\\"factory\\\", factory.getClass().toString()); this.webServer = factory.getWebServer(getSelfInitializer());//获取WebServer createWebServer.end(); getBeanFactory().registerSingleton(\\\"webServerGracefulShutdown\\\", new WebServerGracefulShutdownLifecycle(this.webServer)); getBeanFactory().registerSingleton(\\\"webServerStartStop\\\", new WebServerStartStopLifecycle(this, this.webServer)); } else if (servletContext != null) { try { getSelfInitializer().onStartup(servletContext); } catch (ServletException ex) { throw new ApplicationContextException(\\\"Cannot initialize servlet context\\\", ex); } } initPropertySources(); } } \"]},\"229\":{\"title\":\"tomcat embed\",\"header\":\"3.2 TomcatServletWebServerFactory\",\"text\":[\"通过ServletWebServerFactoryConfiguration完成TomcatServletWebServerFactory注入，同时会注入一些个性化接口，这些接口会在TomcatServletWebServerFactory的构造器中被调用。个性化接口有：\",\"TomcatContextCustomizer\",\"TomcatConnectorCustomizer\",\"TomcatProtocolHandlerCustomizer\",\"最终会通过TomcatServletWebServerFactory工厂类构建WebServer对象，跟getWebServer方法\",\"public class TomcatServletWebServerFactory extends AbstractServletWebServerFactory implements ConfigurableTomcatWebServerFactory, ResourceLoaderAware { @Override public WebServer getWebServer(ServletContextInitializer... initializers) { ... prepareContext(tomcat.getHost(), initializers);//准备上下文 return getTomcatWebServer(tomcat); } protected void prepareContext(Host host, ServletContextInitializer[] initializers) { ... configureContext(context, initializersToUse);//配置上下文 ... } protected void configureContext(Context context, ServletContextInitializer[] initializers) { TomcatStarter starter = new TomcatStarter(initializers);//创建tomcat启动类 if (context instanceof TomcatEmbeddedContext) { TomcatEmbeddedContext embeddedContext = (TomcatEmbeddedContext) context; embeddedContext.setStarter(starter); embeddedContext.setFailCtxIfServletStartFails(true); } //此处的context是org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext context.addServletContainerInitializer(starter, NO_CLASSES); ... } } \",\"工厂类中会创建Tomcat对象，并初始化其内部的Server对象。最终将Tomcat对象封装到TomcatWebServer中返回，接着看下TomcatWebServer的构造器\",\"public class TomcatWebServer implements WebServer { //用于封装Tomcat对象 private final Tomcat tomcat; public TomcatWebServer(Tomcat tomcat, boolean autoStart, Shutdown shutdown) { Assert.notNull(tomcat, \\\"Tomcat Server must not be null\\\"); //初始化Tomcat对象 this.tomcat = tomcat; this.autoStart = autoStart; this.gracefulShutdown = (shutdown == Shutdown.GRACEFUL) ? new GracefulShutdown(tomcat) : null; //重点看这里 这里启动了Tomcat initialize(); } //启动了Tomcat private void initialize() throws WebServerException { logger.info(\\\"Tomcat initialized with port(s): \\\" + getPortsDescription(false)); synchronized (this.monitor) { try { ... // Start the server to trigger initialization listeners this.tomcat.start(); ... } catch (Exception ex) { ... } } } } \",\"到这里可以知道工厂类在构造WebServer之后，Tomcat就被启动了，这里就是内嵌Tomcat的启动时机。和原来相比，原来的启动类是Tomcat，再由Tomcat启动触发容器的创建和启动，而现在的启动类是容器，由容器启动触发了Tomcat的启动。\"]},\"230\":{\"title\":\"tomcat embed\",\"header\":\"四、SpringBoot中的Tomcat如何加载Servlet\",\"text\":[]},\"231\":{\"title\":\"tomcat embed\",\"header\":\"4.1 Servlet3.0标准可以不使用web.xml完成Servlet的注册\",\"text\":[\"早期的项目一个web.xml文件最终被解析成一个Context对象【容器对象】，web.xml内部可以配置很多servlet，最终在解析完web.xml会将解析出来的servlet对象注册到容器中。而springboot项目中并没有web.xml文件，所以引发了一个问题。Servlet对象是如何被注册到Tomcat容器中的呢？ servlet3.0标准中提供了一个不用web.xml也能加载Servlet的方法。\",\"需要三步\",\"写一个类实现ServletContainerInitializer接口\",\"实现ServletContainerInitializer接口的onStartup方法\",\"在/META-INF/services目录下创建javax.servlet.ServletContainerInitializer文件，将实现类的全名称写入到配置文件中\",\"实现完以上步骤,Tomcat启动后会回调实现类的onStartup方法，并将Servlet容器的装饰类【ServletContext】当作入参传入onStartup方法。看下ServletContext这个类的方法。\",\"public interface ServletContext { public ServletRegistration.Dynamic addServlet(String servletName, String className); public ServletRegistration.Dynamic addServlet(String servletName, Servlet servlet); public ServletRegistration.Dynamic addServlet(String servletName, Class<? extends Servlet> servletClass); } \",\"这个类有很多方法,其中新增servlet的就有3个重载方法。也就是说我们写的实现类在实现onStartup的方法中就可以调用ServletContext的addServlet方法完成Servlet的注册了。\"]},\"232\":{\"title\":\"tomcat embed\",\"header\":\"4.2 SpringBoot中的ServletContainerInitializer的实现类\",\"text\":[\"那么SpringBoot中的Tomcat就是用这个方式加载的Servlet吗？是也不全是。springboot确实搞了一个实现类TomcatStarter来实现ServletContainerInitializer接口并实现了onStartup方法。但是和web.xml文件一样javax.servlet.ServletContainerInitializer文件在springboot项目中也没有。其实与写javax.servlet.ServletContainerInitializer文件的方式相比还有一种更加简单粗暴的方式，在Context对象创建好后直接调用其addServletContainerInitializer方法将ServletContainerInitializer的实现类传进去。再次看下创建Context对象的地方。\",\"public class TomcatServletWebServerFactory extends AbstractServletWebServerFactory implements ConfigurableTomcatWebServerFactory, ResourceLoaderAware { //创建Servlet容器 protected void prepareContext(Host host, ServletContextInitializer[] initializers) { File documentRoot = getValidDocumentRoot(); //直接new了一个容器 该类是StandardContext的子类 TomcatEmbeddedContext context = new TomcatEmbeddedContext(); if (documentRoot != null) { context.setResources(new LoaderHidingResourceRoot(context)); } ... ServletContextInitializer[] initializersToUse = mergeInitializers(initializers); //将容器放入host对象中 host.addChild(context); //这个方法之前没根 这次下这个方法 configureContext(context, initializersToUse); postProcessContext(context); } protected void configureContext(Context context, ServletContextInitializer[] initializers) { //创建了ServletContainerInitializer的实现类 TomcatStarter starter = new TomcatStarter(initializers); ... //这里直接将其放入到了容器中 context.addServletContainerInitializer(starter, NO_CLASSES); ... } } \"]},\"233\":{\"title\":\"tomcat embed\",\"header\":\"4.3 ServletContainerInitializer的实现类执行onStartup方法的时机\",\"text\":[\"之前分析过server.start方法执行后各个元素的init、start、initInternal、startInternal都会被调用，Context对象也不例外。接着看下Context的startInternal方法。虽然我们的Context对象类型是TomcatEmbeddedContext，但是startInternal方法是由其父类StandardContext实现的。所以看下StandardContext类\",\"public class StandardContext extends ContainerBase implements Context, NotificationEmitter { //内部有一个集合 用于保存所有ServletContainerInitializer的实现类 private Map<ServletContainerInitializer,Set<Class<?>>> initializers = new LinkedHashMap<>(); //还记得这个方法吗TomcatEmbeddedContext就是通过该方法将TomcatStarter添加进来的 public void addServletContainerInitializer( ServletContainerInitializer sci, Set<Class<?>> classes) { initializers.put(sci, classes); } //Tomcat启动时会执行该方法 这个方法巨长无比 我只把关键的保留了 protected synchronized void startInternal() throws LifecycleException { //便利集合 for (Map.Entry<ServletContainerInitializer, Set<Class<?>>> entry : initializers.entrySet()) { try { //集合中的key就是ServletContainerInitializer的实现类 这里调用了onStartup方法 entry.getKey().onStartup(entry.getValue(), //最后看下getServletContext方法，看看容器的装饰类到底是什么 getServletContext()); } catch (ServletException e) { log.error(sm.getString(\\\"standardContext.sciFail\\\"), e); ok = false; break; } } } //这里可以知道容器最终把自己封装到了ApplicationContext对象中， //最终将ApplicationContext对象暴露给ServletContainerInitializer实现类 public ServletContext getServletContext() { if (context == null) { context = new ApplicationContext(this); if (altDDName != null) context.setAttribute(Globals.ALT_DD_ATTR,altDDName); } return context.getFacade(); } } \",\"也就是容器对象启动后，在执行其startInternal方法是会调用ServletContainerInitializer的实现类的onStartup方法并将容器对象的装饰类ApplicationContext当作入参传入onStartup方法。\"]},\"234\":{\"title\":\"tomcat embed\",\"header\":\"4.4 分析TomcatStarter的onStartup方法\",\"text\":[\"铺垫了那么多，我们看下TomcatStarter的onStartup方法\",\"class TomcatStarter implements ServletContainerInitializer { //一堆ServletContextInitializer接口的实现类 private final ServletContextInitializer[] initializers; //构造器 初始化内部的initializers属性 TomcatStarter(ServletContextInitializer[] initializers) { this.initializers = initializers; } //这个方法里没有任何servlet的添加操作，而是便利了initializers，并执行initializers每一个实例的onStartup方法，将servletContext当入参传入其中 @Override public void onStartup(Set<Class<?>> classes, ServletContext servletContext) throws ServletException { try { for (ServletContextInitializer initializer : this.initializers) { initializer.onStartup(servletContext); } } catch (Exception ex) { .... } } } \",\"和想象中的不一样，onStartup方法中并没有添加servlet，而是将ServletContext对象再次传给了ServletContextInitializer的实现类去完成后续工作。为什么要这样做呢？其实原因很简单，到目前为止要想拿到ServletContext对象就必须实现ServletContainerInitializer接口。而ServletContainerInitializer接口并不是spring的类。所以spring搞了一个自己的接口ServletContextInitializer并且内部也有一个待实现的方法onStartup。spring想实现的目标是所有实现了ServletContextInitializer接口的bean都能拿到ServletContext对象。最终借助TomcatStarter类中的onStartup完成了实现。 大致看下实现过程，起点在ServletWebServerApplicationContext类中\",\"public class ServletWebServerApplicationContext extends GenericWebApplicationContext implements ConfigurableWebServerApplicationContext { //最终这个私有方法会被调用，可以看出如果TomcatStarter中的onStartup方法能调用到该方法，上述说的spirng目的就达成了 private void selfInitialize(ServletContext servletContext) throws ServletException { prepareWebApplicationContext(servletContext); registerApplicationScope(servletContext); WebApplicationContextUtils.registerEnvironmentBeans(getBeanFactory(), servletContext); //这里拿到容器中所有实现了ServletContextInitializer接口的bean并依次执行其onStartup方法 入参是servletContext for (ServletContextInitializer beans : getServletContextInitializerBeans()) { beans.onStartup(servletContext); } } //ServletContextInitializer本身是一个@FunctionalInterface //这里将上述的私有方法封装成了一个ServletContextInitializer实例 很感慨既然还能这样干 private org.springframework.boot.web.servlet.ServletContextInitializer getSelfInitializer() { return this::selfInitialize; } //还记得这个方法吗，这里通过factory完成了WebServer的创建，也就是tomcat启动的位置 private void createWebServer() { WebServer webServer = this.webServer; ServletContext servletContext = getServletContext(); if (webServer == null && servletContext == null) { ServletWebServerFactory factory = getWebServerFactory(); //这里将ServletContextInitializer实例传入到了TomcatServletWebServerFactory中 this.webServer = factory.getWebServer(getSelfInitializer()); ... } .... } } \",\"上述可以看到spring用一种很诡异的方式将一个私有方法封装成了ServletContextInitializer实例并传给了TomcatServletWebServerFactory的getWebServer方法中，再次根下TomcatServletWebServerFactory类。这次主要看ServletContextInitializer实例的传递过程\",\"public class TomcatServletWebServerFactory extends AbstractServletWebServerFactory implements ConfigurableTomcatWebServerFactory, ResourceLoaderAware { //这里ServletContextInitializer实例被传入 public WebServer getWebServer(ServletContextInitializer... initializers) { ... //被传入到该方法 prepareContext(tomcat.getHost(), initializers); return getTomcatWebServer(tomcat); } protected void prepareContext(Host host, ServletContextInitializer[] initializers) { //这里做了依次封装 之前的ServletContextInitializer实例就在其中 ServletContextInitializer[] initializersToUse = mergeInitializers(initializers); //根这里 configureContext(context, initializersToUse); postProcessContext(context); } //做了一层扩展 protected final ServletContextInitializer[] mergeInitializers(ServletContextInitializer... initializers) { List<ServletContextInitializer> mergedInitializers = new ArrayList<>(); mergedInitializers.add((servletContext) -> this.initParameters.forEach(servletContext::setInitParameter)); mergedInitializers.add(new SessionConfiguringInitializer(this.session)); //被传入到mergedInitializers集合中 mergedInitializers.addAll(Arrays.asList(initializers)); mergedInitializers.addAll(this.initializers); //集合转数组 return mergedInitializers.toArray(new ServletContextInitializer[0]); } //最终会将ServletContextInitializer传入TomcatStarter的构造函数，和之前说的完全对应上了 protected void configureContext(Context context, ServletContextInitializer[] initializers) { TomcatStarter starter = new TomcatStarter(initializers); ... } } \",\"通过对TomcatStarter的onStartup方法的分析可以知道，所有实现了ServletContextInitializer接口的bean都能拿到ServletContext对象，完成servlet对象的添加\"]},\"235\":{\"title\":\"tomcat embed\",\"header\":\"4.5 DispatcherServlet如何加载到Tomcat容器\",\"text\":[\"springboot会自动装配springmvc，而springmvc的核心类就是DispatcherServlet。上边铺垫了那么多最终看看DispatcherServlet是如何加载到tomcat中的 首先看下自动装配类DispatcherServletAutoConfiguration\",\"...省略注解 public class DispatcherServletAutoConfiguration { ...省略注解 protected static class DispatcherServletConfiguration { //这里创建了DispatcherServlet类 @Bean(name = DEFAULT_DISPATCHER_SERVLET_BEAN_NAME) public DispatcherServlet dispatcherServlet(WebMvcProperties webMvcProperties) { ...省略DispatcherServlet构造内容 return dispatcherServlet; } ... ...省略注解 protected static class DispatcherServletRegistrationConfiguration { ...省略注解 //重点是这个类，上边的DispatcherServlet会被传入到该类中，最终由该类完成DispatcherServlet向Tomcat容器的注册 public DispatcherServletRegistrationBean dispatcherServletRegistration(DispatcherServlet dispatcherServlet, WebMvcProperties webMvcProperties, ObjectProvider<MultipartConfigElement> multipartConfig) { DispatcherServletRegistrationBean registration = new DispatcherServletRegistrationBean(dispatcherServlet, webMvcProperties.getServlet().getPath()); registration.setName(DEFAULT_DISPATCHER_SERVLET_BEAN_NAME); registration.setLoadOnStartup(webMvcProperties.getServlet().getLoadOnStartup()); multipartConfig.ifAvailable(registration::setMultipartConfig); return registration; } } } } \",\"可以看到自动装配时向spring容器中注册了DispatcherServletRegistrationBean类，该类构造器中包含DispatcherServlet对象。看下DispatcherServletRegistrationBean类的家谱\",\"可以看到该类实现了ServletContextInitializer接口也就是其能拿到Tomcat容器对象。看下其祖先类RegistrationBean的onStartup方法\",\"public abstract class RegistrationBean implements ServletContextInitializer, Ordered { public final void onStartup(ServletContext servletContext) throws ServletException { String description = getDescription(); if (!isEnabled()) { logger.info(StringUtils.capitalize(description) + \\\" was not registered (disabled)\\\"); return; } //根这个方法 该方法由子类DynamicRegistrationBean实现 register(description, servletContext); } } \",\"看下DynamicRegistrationBean类的register方法\",\"public abstract class DynamicRegistrationBean<D extends Registration.Dynamic> extends RegistrationBean { protected final void register(String description, ServletContext servletContext) { //servlet注册在这里完成 该方法由子类ServletRegistrationBean实现 //servlet注册完后会返回一个registration对象，用于完成servlet-mapping的配置 D registration = addRegistration(description, servletContext); if (registration == null) { logger.info(StringUtils.capitalize(description) + \\\" was not registered (possibly already registered?)\\\"); return; } //servlet的mapping配置在这里完成 该方法由子类ServletRegistrationBean实现 configure(registration); } } \",\"看下ServletRegistrationBean类的addRegistration方法\",\"public class ServletRegistrationBean<T extends Servlet> extends DynamicRegistrationBean<ServletRegistration.Dynamic> { //这里可以看到servletContext.addServlet方法终于被调用了 @Override protected ServletRegistration.Dynamic addRegistration(String description, ServletContext servletContext) { String name = getServletName(); //this.servlet就是DispatcherServlet return servletContext.addServlet(name, this.servlet); } //这里来配置servlet-mapping @Override protected void configure(ServletRegistration.Dynamic registration) { super.configure(registration); String[] urlMapping = StringUtils.toStringArray(this.urlMappings); if (urlMapping.length == 0 && this.alwaysMapUrl) { urlMapping = DEFAULT_MAPPINGS; } if (!ObjectUtils.isEmpty(urlMapping)) { registration.addMapping(urlMapping); } registration.setLoadOnStartup(this.loadOnStartup); if (this.multipartConfig != null) { registration.setMultipartConfig(this.multipartConfig); } } } \"]},\"236\":{\"title\":\"tomcat embed\",\"header\":\"总结\",\"text\":[\"springboot使用内嵌Tomcat完成了tomcat的启动。内嵌Tomcat本质上和正常Tomcat的Catalina对象一样都是通过初始化内部的server对象，最终调用server对象的start方法来完成启动的。区别就是server对象的创建构成，前者直接new后者解析server.xml文件\",\"springboot中tomcat的启动时机是在容器启动时，执行onRefresh方法中。创建webServer对象时启动的。\",\"springboot基于servlet3.0标准。创建了ServletContainerInitializer的实现类TomcatStarter最终拿到Tomcat容器对象\",\"springboot基于TomcatStarter拿到的tomcat容器对象做了进一步优化。最终实现了所有实现ServletContextInitializer接口的bean都能拿到tomcat容器\",\"ServletContextInitializer的实现类之一DispatcherServletRegistrationBean完成了DispatcherServlet向tomcat容器的注册\"]},\"237\":{\"title\":\"tomcat embed\",\"header\":\"个性化实现\",\"text\":[\"通过ServletWebServerFactoryAutoConfiguration导入BeanPostProcessorsRegistrar，该类会注册一个WebServerFactoryCustomizerBeanPostProcessor，该类会调用WebServerFactoryCustomizer的customize方法，通过实现WebServerFactoryCustomizer接口来可以个性化tomcat配置。\"]},\"238\":{\"title\":\"tomcat embed\",\"header\":\"FAQ\",\"text\":[\"Question: The valid characters are defined in RFC 7230 and RFC 3986\",\"java.lang.IllegalArgumentException: Invalid character found in the request target [/officeweb_cs?fname=[%E6%A0%87%E6%AE%B5%E7%BC%96%E5%8F%B7202306260101-001]9A062601-001.XZZF ]. The valid characters are defined in RFC 7230 and RFC 3986 at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:509) ~[tomcat-coyote.jar:8.5.76] at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:513) ~[tomcat-coyote.jar:8.5.76] at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-coyote.jar:8.5.76] at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:881) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor.doRun(Nio2Endpoint.java:1708) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.AbstractEndpoint.processSocket(AbstractEndpoint.java:1184) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.Nio2Endpoint.setSocketOptions(Nio2Endpoint.java:340) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor.completed(Nio2Endpoint.java:474) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor.completed(Nio2Endpoint.java:410) [tomcat-coyote.jar:8.5.76] at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126) [na:1.8.0_312] at sun.nio.ch.Invoker$2.run(Invoker.java:218) [na:1.8.0_312] at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112) [na:1.8.0_312] at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-util.jar:8.5.76] at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-util.jar:8.5.76] at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-util.jar:8.5.76] at java.lang.Thread.run(Thread.java:748) [na:1.8.0_312] \",\"tomcat8自带的非法字符拦截机制，异常抛出详见ErrorReportValve\",\"方案一：外置tomcat可以通过配置指定error处理页面(对tomcat版本有要求),公司的tomcat8不支持配置errorCode，详见catalina.jar中ErrorReportValve\",\"<Engine name=\\\"Catalina\\\" defaultHost=\\\"localhost\\\"> <Valve className=\\\"org.apache.catalina.valves.ErrorReportValve\\\" errorCode.400=\\\"400.html\\\" errorCode.404=\\\"404.html\\\" errorCode.500=\\\"500.html\\\" showReport=\\\"false\\\" showServerInfo=\\\"false\\\" /> </Engine> \",\"方案二：springboot可以通过配置关闭异常显示\",\"server.error.include-stacktrace=never server.error.include-message=never server.error.include-binding-errors=never server.error.include-exception=false \",\"方案三：springboot可以通过实现WebServerFactoryCustomizer接口对ErrorReportValve进行配置\",\"@Component public class MyTomcatWebServerFactoryCustomizer implements WebServerFactoryCustomizer<ConfigurableTomcatWebServerFactory>, Ordered { protected final ResourceLoader resourceLoader; public MyTomcatWebServerFactoryCustomizer(ResourceLoader resourceLoader) { this.resourceLoader = resourceLoader; } @Override public void customize(ConfigurableTomcatWebServerFactory factory) { factory.addContextCustomizers((context) -> { ErrorReportValve valve = new ErrorReportValve(); valve.setShowServerInfo(true); valve.setShowReport(true); valve.setProperty(\\\"errorCode.0\\\", \\\"error.html\\\"); try { File error = new File(context.getCatalinaHome(), \\\"error.html\\\"); log.info(error.getCanonicalPath()); //File file2 = ResourceUtils.getFile(\\\"classpath:templates/error.ftl\\\"); Resource path = resourceLoader.getResource(\\\"classpath:templates/error.ftl\\\"); //File file = path.getFile(); // will fail if not resolvable in the file system if (!error.exists()) { log.debug(String.valueOf(error.createNewFile())); } try (OutputStream os = Files.newOutputStream(error.toPath()); InputStream is = path.getInputStream()) { IOTools.flow(is, os); } catch (IOException e) { log.error(e.getMessage(), e); } } catch (IOException e) { log.error(e.getMessage(), e); } context.getParent().getPipeline().addValve(valve); }); } @Override public int getOrder() { return 1; } } \",\"方案四：springboot也可以通过实现TomcatConnectorCustomizer接口进行配置。\",\"@Component public class MyTomcatConnectorCustomizer implements TomcatConnectorCustomizer { @Override public void customize(Connector connector) { connector.setProperty(\\\"relaxedPathChars\\\", \\\"\\\\\\\"<>[\\\\\\\\]^`{|}\\\"); connector.setProperty(\\\"relaxedQueryChars\\\", \\\"\\\\\\\"<>[\\\\\\\\]^`{|}\\\"); } } \",\"方案五：外置tomcat可以通过配置server.xml进行配置\",\"<Conection port=\\\"8080\\\" protocol=\\\"HTTP/1.1\\\" connectionTimeout=\\\"20000\\\" redirectPort=\\\"8443\\\" relaxedPathChars=\\\"\\\\,[]^`{|}%\\\" relaxedQueryChars=\\\"\\\\,[]^`{|,}%\\\"/> \"]}},\"dirtCount\":0,\"index\":[[\"外置tomcat可以通过配置server\",{\"3\":{\"238\":1}}],[\"外置tomcat可以通过配置指定error处理页面\",{\"3\":{\"238\":1}}],[\"详见catalina\",{\"3\":{\"238\":1}}],[\"详细等级\",{\"3\":{\"33\":1}}],[\"公司的tomcat8不支持配置errorcode\",{\"3\":{\"238\":1}}],[\"公共头文件\",{\"3\":{\"75\":1}}],[\"公共头文件安装在include\",{\"3\":{\"75\":1}}],[\"异常抛出详见errorreportvalve\",{\"3\":{\"238\":1}}],[\"异步的sctp服务器端连接\",{\"3\":{\"191\":1}}],[\"异步的客户端sctp连接\",{\"3\":{\"191\":1}}],[\"异步的客户端tcp\",{\"3\":{\"191\":1}}],[\"异步的udp连接\",{\"3\":{\"191\":1}}],[\"异步的服务器端tcp\",{\"3\":{\"191\":1}}],[\"异步调用意味着任何i\",{\"3\":{\"191\":1}}],[\"区别就是server对象的创建构成\",{\"3\":{\"236\":1}}],[\"区别就是初始化server的过程不在需要解析server\",{\"3\":{\"226\":1}}],[\"省略dispatcherservlet构造内容\",{\"3\":{\"235\":1}}],[\"省略注解\",{\"3\":{\"235\":4}}],[\"省钱妙招\",{\"3\":{\"78\":1}}],[\"完成servlet对象的添加\",{\"3\":{\"234\":1}}],[\"做了一层扩展\",{\"3\":{\"234\":1}}],[\"根这个方法\",{\"3\":{\"235\":1}}],[\"根这里\",{\"3\":{\"234\":1}}],[\"根据日志级别进行过滤\",{\"3\":{\"222\":1}}],[\"根据时间再根据文件大小来滚动生成文件\",{\"3\":{\"219\":1}}],[\"根据时间的滚动策略\",{\"3\":{\"218\":1}}],[\"根据固定窗口算法重命名文件的滚动策略\",{\"3\":{\"216\":1}}],[\"根据指令设置磁盘大小\",{\"3\":{\"46\":1}}],[\"之前的servletcontextinitializer实例就在其中\",{\"3\":{\"234\":1}}],[\"之前分析过server\",{\"3\":{\"233\":1}}],[\"很感慨既然还能这样干\",{\"3\":{\"234\":1}}],[\"入参是servletcontext\",{\"3\":{\"234\":1}}],[\"入站事件会从链表head往后传递到最后一个入站的handler\",{\"3\":{\"197\":1}}],[\"入站事件和出站事件在一个双向链表中\",{\"3\":{\"197\":1}}],[\"入站事件由自下而上方向的入站处理程序处理\",{\"3\":{\"197\":1}}],[\"入站handler处理程序通常处理由图底部的i\",{\"3\":{\"197\":1}}],[\"起点在servletwebserverapplicationcontext类中\",{\"3\":{\"234\":1}}],[\"到目前为止要想拿到servletcontext对象就必须实现servletcontainerinitializer接口\",{\"3\":{\"234\":1}}],[\"到这里可以知道工厂类在构造webserver之后\",{\"3\":{\"229\":1}}],[\"构造器\",{\"3\":{\"234\":1}}],[\"构建catalina对象并赋值给全局变量catalinadaemon\",{\"3\":{\"225\":2}}],[\"构建catalina对象\",{\"3\":{\"225\":1}}],[\"铺垫了那么多\",{\"3\":{\"234\":1}}],[\"分析tomcatstarter的onstartup方法\",{\"0\":{\"234\":1},\"2\":{\"234\":1}}],[\"看下servletregistrationbean类的addregistration方法\",{\"3\":{\"235\":1}}],[\"看下servletcontext这个类的方法\",{\"3\":{\"231\":1}}],[\"看下dynamicregistrationbean类的register方法\",{\"3\":{\"235\":1}}],[\"看下dispatcherservletregistrationbean类的家谱\",{\"3\":{\"235\":1}}],[\"看下其祖先类registrationbean的onstartup方法\",{\"3\":{\"235\":1}}],[\"看看容器的装饰类到底是什么\",{\"3\":{\"233\":1}}],[\"集合转数组\",{\"3\":{\"234\":1}}],[\"集合中的key就是servletcontainerinitializer的实现类\",{\"3\":{\"233\":1}}],[\"集成测试\",{\"3\":{\"173\":1}}],[\"便利集合\",{\"3\":{\"233\":1}}],[\"便利其下的service对象挨个调用start方法\",{\"3\":{\"225\":1}}],[\"便利其下的service对象挨个调用init方法\",{\"3\":{\"225\":1}}],[\"我只把关键的保留了\",{\"3\":{\"233\":1}}],[\"我们看下tomcatstarter的onstartup方法\",{\"3\":{\"234\":1}}],[\"我们看看当server的start方法被调用时会发生什么\",{\"3\":{\"225\":1}}],[\"我们来一探究竟\",{\"3\":{\"224\":1}}],[\"我们有两种办法\",{\"3\":{\"76\":1}}],[\"我们希望别的项目可以通过find\",{\"3\":{\"76\":1}}],[\"我们介绍几种常用的\",{\"3\":{\"73\":1}}],[\"我们也需要设定变量来储存我们的选项\",{\"3\":{\"69\":1}}],[\"我们应该将cmake理解为一门编程语言\",{\"3\":{\"69\":1}}],[\"我们给test\",{\"3\":{\"66\":1}}],[\"我们通过add\",{\"3\":{\"66\":1}}],[\"我们可以避免路径混乱的问题\",{\"3\":{\"73\":1}}],[\"我们可以这样写\",{\"3\":{\"73\":1}}],[\"我们可以通过target的名称为其添加属性\",{\"3\":{\"66\":1}}],[\"我们可以在cmake中继续使用target的名字为target的编译设置新的属性和行为\",{\"3\":{\"65\":1}}],[\"我们可以运行\",{\"3\":{\"57\":1}}],[\"我们则需要运行\",{\"3\":{\"57\":1}}],[\"虽然我们的context对象类型是tomcatembeddedcontext\",{\"3\":{\"233\":1}}],[\"直接new了一个容器\",{\"3\":{\"232\":1}}],[\"直到jdk1\",{\"3\":{\"182\":1}}],[\"直到安装完成\",{\"3\":{\"136\":1}}],[\"写一个类实现servletcontainerinitializer接口\",{\"3\":{\"231\":1}}],[\"早期的项目一个web\",{\"3\":{\"231\":1}}],[\"重点是这个类\",{\"3\":{\"235\":1}}],[\"重点看这里\",{\"3\":{\"229\":1}}],[\"重点在后边的这几个方法\",{\"3\":{\"226\":1}}],[\"准备上下文\",{\"3\":{\"229\":1}}],[\"准备知识\",{\"0\":{\"53\":1},\"2\":{\"53\":1}}],[\"跟getwebserver方法\",{\"3\":{\"229\":1}}],[\"个性化实现\",{\"0\":{\"237\":1},\"2\":{\"237\":1}}],[\"个性化接口有\",{\"3\":{\"229\":1}}],[\"个人项目\",{\"0\":{\"21\":1},\"2\":{\"21\":1}}],[\"个人简介\",{\"1\":{\"0\":1,\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1}}],[\"个人优势\",{\"0\":{\"0\":1},\"2\":{\"0\":1}}],[\"容器对象\",{\"3\":{\"231\":1}}],[\"容器启动会执行祖先类abstractapplicationcontext的refresh方法\",{\"3\":{\"227\":1}}],[\"容器集成支持osgi\",{\"3\":{\"187\":1}}],[\"都是通过初始化一个server对象然后调用server对象的start方法完成tomcat启动的\",{\"3\":{\"226\":1}}],[\"都会使用project来指定本项目的名称\",{\"3\":{\"64\":1}}],[\"同上没有就new\",{\"3\":{\"226\":1}}],[\"同时会注入一些个性化接口\",{\"3\":{\"229\":1}}],[\"同时它完整实现了slf4j\",{\"3\":{\"203\":1}}],[\"同时关联一个channelhandler对象\",{\"3\":{\"196\":1}}],[\"同时\",{\"3\":{\"185\":1}}],[\"同时opencv提供了cmake\",{\"3\":{\"77\":1}}],[\"顺便为其创建了一个service对象\",{\"3\":{\"226\":1}}],[\"接着看下context的startinternal方法\",{\"3\":{\"233\":1}}],[\"接着看下tomcatwebserver的构造器\",{\"3\":{\"229\":1}}],[\"接着会调用lifecyclebase的initinternal方法\",{\"3\":{\"225\":1}}],[\"接着会调用lifecyclebase的init方法\",{\"3\":{\"225\":1}}],[\"接下来看看这个类\",{\"3\":{\"226\":1}}],[\"名字就叫tomcat\",{\"3\":{\"226\":1}}],[\"阿帕奇提供了一个类\",{\"3\":{\"226\":1}}],[\"阿里分布式服务框架dubbo的rpc框架使用dubbo协议进行节点间通信\",{\"3\":{\"184\":1}}],[\"继续执行startinternal方法\",{\"3\":{\"225\":1}}],[\"继续向下走执行startinternal方法\",{\"3\":{\"225\":1}}],[\"子类实现\",{\"3\":{\"225\":2}}],[\"挨个调用其start方法\",{\"3\":{\"225\":2}}],[\"挨个调用其init方法\",{\"3\":{\"225\":2}}],[\"防止重复init用的\",{\"3\":{\"225\":1}}],[\"抽象模板类提供的公共方法\",{\"3\":{\"225\":2}}],[\"上边的dispatcherservlet会被传入到该类中\",{\"3\":{\"235\":1}}],[\"上边铺垫了那么多最终看看dispatcherservlet是如何加载到tomcat中的\",{\"3\":{\"235\":1}}],[\"上述可以看到spring用一种很诡异的方式将一个私有方法封装成了servletcontextinitializer实例并传给了tomcatservletwebserverfactory的getwebserver方法中\",{\"3\":{\"234\":1}}],[\"上述说的spirng目的就达成了\",{\"3\":{\"234\":1}}],[\"上述提到的所有对象都继承该类\",{\"3\":{\"225\":1}}],[\"上面已介绍\",{\"3\":{\"213\":1}}],[\"上面的关键词public\",{\"3\":{\"66\":1}}],[\"首先看下自动装配类dispatcherservletautoconfiguration\",{\"3\":{\"235\":1}}],[\"首先看看抽象模板类lifecyclebase\",{\"3\":{\"225\":1}}],[\"首先会从resource文件中查询logback\",{\"3\":{\"206\":1}}],[\"该类会调用webserverfactorycustomizer的customize方法\",{\"3\":{\"237\":1}}],[\"该类会注册一个webserverfactorycustomizerbeanpostprocessor\",{\"3\":{\"237\":1}}],[\"该类构造器中包含dispatcherservlet对象\",{\"3\":{\"235\":1}}],[\"该类是standardcontext的子类\",{\"3\":{\"232\":1}}],[\"该类和catalina类十分相似\",{\"3\":{\"226\":1}}],[\"该类有4个主要方法\",{\"3\":{\"225\":1}}],[\"该方法由子类servletregistrationbean实现\",{\"3\":{\"235\":2}}],[\"该方法由子类server实现\",{\"3\":{\"225\":2}}],[\"该方法由子类dynamicregistrationbean实现\",{\"3\":{\"235\":1}}],[\"该方法中的onrefresh方法被annotationconfigservletwebserverapplicationcontext的父类servletwebserverapplicationcontext重写了\",{\"3\":{\"227\":1}}],[\"该方法会创建并启动一个容器annotationconfigservletwebserverapplicationcontext\",{\"3\":{\"227\":1}}],[\"该方法是一个抽象方法由子类完成实现\",{\"3\":{\"225\":2}}],[\"该属性的默认值是webapps\",{\"3\":{\"225\":1}}],[\"该对象内部包含一组service对象\",{\"3\":{\"225\":1}}],[\"该对象通过解析server\",{\"3\":{\"225\":1}}],[\"只是在server\",{\"3\":{\"225\":1}}],[\"只有一个节点\",{\"3\":{\"217\":1}}],[\"只有一个level属性\",{\"3\":{\"211\":1}}],[\"解析server\",{\"3\":{\"225\":1}}],[\"解决上述问题\",{\"3\":{\"185\":1}}],[\"解决了上述问题\",{\"3\":{\"180\":1}}],[\"全局变量server对象\",{\"3\":{\"225\":1}}],[\"全局变量\",{\"3\":{\"225\":2,\"226\":1}}],[\"原来的启动类是tomcat\",{\"3\":{\"229\":1}}],[\"原来的tomcat启动流程\",{\"0\":{\"225\":1},\"2\":{\"225\":1}}],[\"原理\",{\"0\":{\"159\":1},\"2\":{\"159\":1}}],[\"又是如何调整tomcat启动参数的\",{\"3\":{\"224\":1}}],[\"众所周知springboot通过fatjar运行时内嵌了tomcat\",{\"3\":{\"224\":1}}],[\"被传入到mergedinitializers集合中\",{\"3\":{\"234\":1}}],[\"被传入到该方法\",{\"3\":{\"234\":1}}],[\"被过滤掉\",{\"3\":{\"222\":1}}],[\"被写入的文件名\",{\"3\":{\"214\":1,\"215\":1}}],[\"级别过滤器\",{\"3\":{\"222\":1}}],[\"级别的日志\",{\"3\":{\"221\":1}}],[\"级别从左显示5个字符宽度\",{\"3\":{\"213\":1}}],[\"过滤掉\",{\"3\":{\"221\":1}}],[\"过滤掉所有低于info级别的日志\",{\"3\":{\"221\":1}}],[\"过滤掉低于指定临界值的日志\",{\"3\":{\"221\":1}}],[\"过滤器会根据onmath\",{\"3\":{\"222\":1}}],[\"过滤器返回neutral\",{\"3\":{\"221\":1}}],[\"过滤器被添加到<appender>中\",{\"3\":{\"220\":1}}],[\"过滤器\",{\"3\":{\"220\":1}}],[\"临界值过滤器\",{\"3\":{\"221\":1}}],[\"按照配置顺序执行\",{\"3\":{\"220\":1}}],[\"返回全局变量server\",{\"3\":{\"225\":1}}],[\"返回accept\",{\"3\":{\"220\":1}}],[\"返回neutral\",{\"3\":{\"220\":1}}],[\"返回deny\",{\"3\":{\"220\":1}}],[\"返回true\",{\"3\":{\"73\":1}}],[\"执行onrefresh方法中\",{\"3\":{\"236\":1}}],[\"执行bootstrap的mian方法\",{\"3\":{\"225\":1}}],[\"执行一个过滤器会有返回个枚举值\",{\"3\":{\"220\":1}}],[\"执行i\",{\"3\":{\"193\":1}}],[\"七\",{\"0\":{\"220\":1},\"2\":{\"220\":1}}],[\"保存60天的历史记录\",{\"3\":{\"219\":1}}],[\"保存channelhandler的list\",{\"3\":{\"197\":1}}],[\"保存channel相关的所有上下文信息\",{\"3\":{\"196\":1}}],[\"那么springboot中的tomcat就是用这个方式加载的servlet吗\",{\"3\":{\"232\":1}}],[\"那么tomcat是如何启动的\",{\"3\":{\"224\":1}}],[\"那么当前logger将会继承上级的级别\",{\"3\":{\"210\":1}}],[\"那些为了归档而创建的目录也会被删除\",{\"3\":{\"218\":1}}],[\"超出数量就删除旧文件\",{\"3\":{\"218\":1}}],[\"控制保留的归档文件的最大数量\",{\"3\":{\"218\":1}}],[\"控制台输出\",{\"3\":{\"213\":1}}],[\"每隔一段时间改变一次\",{\"3\":{\"218\":1}}],[\"每个host内部有一组context\",{\"3\":{\"225\":1}}],[\"每个engine内部有一组host\",{\"3\":{\"225\":1}}],[\"每个engine对象包含一组host对象\",{\"3\":{\"225\":1}}],[\"每个service内部有一个engine\",{\"3\":{\"225\":1}}],[\"每个service对象包含一个engine对象\",{\"3\":{\"225\":1}}],[\"每个文件最多5mb\",{\"3\":{\"219\":1}}],[\"每个worker\",{\"3\":{\"199\":1}}],[\"每个boss\",{\"3\":{\"199\":1}}],[\"每个nioeventloop包含1个selector和1个事件循环线程\",{\"3\":{\"199\":1}}],[\"每个线程\",{\"3\":{\"194\":1}}],[\"活动文件的名字会根据filenamepattern\",{\"3\":{\"218\":1}}],[\"活动文件的名字不会改变\",{\"3\":{\"218\":1}}],[\"活动文件\",{\"3\":{\"218\":1}}],[\"必要节点\",{\"3\":{\"218\":1}}],[\"必须包含\",{\"3\":{\"216\":1}}],[\"必须留空\",{\"3\":{\"215\":1}}],[\"既负责滚动也负责触发滚动\",{\"3\":{\"218\":1}}],[\"命名模式为\",{\"3\":{\"216\":1}}],[\"命令行会有如下输出\",{\"3\":{\"77\":1}}],[\"命令行编译这种方式就会变得十分臃肿\",{\"3\":{\"57\":1}}],[\"命令行编译\",{\"0\":{\"57\":1},\"2\":{\"57\":1}}],[\"命令中第一个参数后面的参数都是编译目标所使用到的源文件\",{\"3\":{\"65\":1}}],[\"命令cmake\",{\"3\":{\"63\":1}}],[\"假设设置每个月滚动\",{\"3\":{\"218\":1}}],[\"假设最小值和最大值分别为1和2\",{\"3\":{\"216\":1}}],[\"假设我们编写了一个新的函数库\",{\"3\":{\"76\":1}}],[\"窗口索引最大值\",{\"3\":{\"216\":1}}],[\"窗口索引最小值\",{\"3\":{\"216\":1}}],[\"告知rollingfileappender何时激活滚动\",{\"3\":{\"215\":1}}],[\"涉及文件移动和重命名\",{\"3\":{\"215\":1}}],[\"决定\",{\"3\":{\"215\":1}}],[\"先将日志记录到指定文件\",{\"3\":{\"215\":1}}],[\"先用g++\",{\"3\":{\"81\":1}}],[\"滚动记录文件\",{\"3\":{\"215\":1}}],[\"效率低\",{\"3\":{\"214\":1}}],[\"效果器\",{\"3\":{\"131\":1}}],[\"清空现存文件\",{\"3\":{\"214\":1,\"215\":1}}],[\"没有就new\",{\"3\":{\"226\":2}}],[\"没有log\",{\"3\":{\"216\":1}}],[\"没有默认值\",{\"3\":{\"214\":1,\"215\":1}}],[\"没有参数\",{\"3\":{\"74\":1}}],[\"格式化输出\",{\"3\":{\"213\":1}}],[\"格式化分区\",{\"0\":{\"47\":1},\"2\":{\"47\":1}}],[\"字符串system\",{\"3\":{\"213\":1}}],[\"字节数组转int\",{\"0\":{\"100\":1},\"2\":{\"100\":1}}],[\"字节数组转16进制字符串\",{\"0\":{\"99\":1},\"2\":{\"99\":1}}],[\"把日志添加到文件\",{\"3\":{\"214\":1}}],[\"把日志输出到控制台\",{\"3\":{\"213\":1}}],[\"把passwordauthentication改成no\",{\"3\":{\"42\":1}}],[\"进行转义\",{\"3\":{\"212\":1}}],[\"进入以后\",{\"3\":{\"45\":1}}],[\"方案五\",{\"3\":{\"238\":1}}],[\"方案四\",{\"3\":{\"238\":1}}],[\"方案三\",{\"3\":{\"238\":1}}],[\"方案二\",{\"3\":{\"238\":1}}],[\"方案一\",{\"3\":{\"238\":1}}],[\"方式\",{\"3\":{\"212\":1}}],[\"方便使用期间\",{\"3\":{\"195\":1}}],[\"转换符\",{\"3\":{\"212\":1}}],[\"转发到其最近的处理程序\",{\"3\":{\"197\":1}}],[\"加\",{\"3\":{\"212\":1}}],[\"是也不全是\",{\"3\":{\"232\":1}}],[\"是唯一有用的且默认的encoder\",{\"3\":{\"212\":1}}],[\"是否向上级logger传递打印信息\",{\"3\":{\"210\":1}}],[\"是否已连接\",{\"3\":{\"191\":1}}],[\"负责两件事\",{\"3\":{\"212\":1}}],[\"负责处理多个channel上的事件\",{\"3\":{\"194\":1}}],[\"另一个属性encoder\",{\"3\":{\"212\":1}}],[\"标识这个appender将会添加到这个logger\",{\"3\":{\"210\":1,\"211\":1}}],[\"代表强制执行上级的级别\",{\"3\":{\"210\":1}}],[\"代码测试\",{\"3\":{\"79\":1}}],[\"代码补全\",{\"3\":{\"78\":1}}],[\"实时查看logback运行状态\",{\"3\":{\"209\":1}}],[\"实现完以上步骤\",{\"3\":{\"231\":1}}],[\"实现servletcontainerinitializer接口的onstartup方法\",{\"3\":{\"231\":1}}],[\"实现了更高效率的传输\",{\"3\":{\"185\":1}}],[\"实现junit\",{\"0\":{\"138\":1,\"146\":1},\"2\":{\"138\":1,\"146\":1}}],[\"实现安装的功能在你需要发布你项目给其他人使用时\",{\"3\":{\"75\":1}}],[\"实现通过vpn访问github\",{\"3\":{\"26\":1}}],[\"具体代码实现可以查看org\",{\"3\":{\"206\":1}}],[\"具体的实现就是通过future和channelfutures\",{\"3\":{\"190\":1}}],[\"找到一个就生成一个context对象\",{\"3\":{\"225\":1}}],[\"找到就会刷新文件反正文件变化\",{\"3\":{\"206\":1}}],[\"找不到就会加上\",{\"3\":{\"206\":1}}],[\"找不到库文件\",{\"3\":{\"66\":2}}],[\"找不到头文件\",{\"3\":{\"66\":1}}],[\"强调应用程序的运行全程\",{\"3\":{\"203\":1}}],[\"强制将本地仓库覆盖到远程仓库\",{\"3\":{\"25\":1}}],[\"表明会出现潜在的错误情形\",{\"3\":{\"203\":1}}],[\"表示过滤器\",{\"3\":{\"215\":1}}],[\"表示workspace的文件夹名\",{\"3\":{\"83\":1}}],[\"表示当前workspace文件夹路径\",{\"3\":{\"83\":1}}],[\"表示库文件目录\",{\"3\":{\"76\":1}}],[\"表示头文件目录\",{\"3\":{\"76\":1}}],[\"表示是否找到\",{\"3\":{\"76\":1}}],[\"指出虽然发生错误事件\",{\"3\":{\"203\":1}}],[\"指出每个严重的错误事件将会导致应用程序的退出\",{\"3\":{\"203\":1}}],[\"指定文件\",{\"3\":{\"79\":1,\"81\":1}}],[\"指定目标链接的库\",{\"3\":{\"66\":1}}],[\"指定目标包含的头文件目录\",{\"3\":{\"66\":1}}],[\"指定版本\",{\"0\":{\"63\":1},\"2\":{\"63\":1}}],[\"指定构建目录\",{\"3\":{\"61\":2}}],[\"指定源码目录\",{\"3\":{\"61\":1}}],[\"指定传递给模块的参数\",{\"3\":{\"33\":1}}],[\"指定测试格式为user\",{\"3\":{\"33\":1}}],[\"指定测试的密码字典\",{\"3\":{\"33\":1}}],[\"指定测试的密码\",{\"3\":{\"33\":1}}],[\"指定测试的用户名字典\",{\"3\":{\"33\":1}}],[\"指定测试的用户名\",{\"3\":{\"33\":1}}],[\"日志会被拒绝\",{\"3\":{\"221\":1}}],[\"日志会被立即处理\",{\"3\":{\"220\":1}}],[\"日志会被安全的写入文件\",{\"3\":{\"214\":1}}],[\"日志将立即被抛弃不再经过其他过滤器\",{\"3\":{\"220\":1}}],[\"日志被追加到文件结尾\",{\"3\":{\"214\":1,\"215\":1}}],[\"日志输出级别\",{\"3\":{\"213\":1}}],[\"日志消息\",{\"3\":{\"213\":1}}],[\"日志等级\",{\"3\":{\"203\":1}}],[\"日志级别\",{\"3\":{\"203\":1}}],[\"访问模块与servlet容器集成提供通过http来访问日志的功能\",{\"3\":{\"203\":1}}],[\"官方网站\",{\"3\":{\"203\":1}}],[\"示例项目\",{\"0\":{\"200\":1},\"2\":{\"200\":1}}],[\"即deny\",{\"3\":{\"220\":1}}],[\"即使其他的fileappender也在向此文件做写入操作\",{\"3\":{\"214\":1}}],[\"即简单日志门面\",{\"3\":{\"202\":1}}],[\"即read\",{\"3\":{\"199\":1}}],[\"即selectionkey中ready的事件\",{\"3\":{\"193\":1}}],[\"即ssh使用\",{\"3\":{\"42\":1}}],[\"处i\",{\"3\":{\"199\":1}}],[\"处理任务队列中的任务\",{\"3\":{\"199\":2}}],[\"处理accept\",{\"3\":{\"199\":1}}],[\"处理i\",{\"3\":{\"195\":1}}],[\"处理\",{\"3\":{\"54\":1}}],[\"轮询read\",{\"3\":{\"199\":1}}],[\"轮询accept事件\",{\"3\":{\"199\":1}}],[\"任务队列中的任务包括用户调用eventloop\",{\"3\":{\"199\":1}}],[\"与client建立连接\",{\"3\":{\"199\":1}}],[\"与使用的语言\",{\"3\":{\"64\":1}}],[\"结合上面的介绍的netty\",{\"3\":{\"199\":1}}],[\"服务端netty的工作架构图\",{\"0\":{\"199\":1},\"2\":{\"199\":1}}],[\"服务端启动引导类\",{\"3\":{\"198\":1}}],[\"基于对lifecyclebase的4个方法的分析\",{\"3\":{\"225\":1}}],[\"基于serverbootstrap\",{\"3\":{\"198\":1}}],[\"基于汇编语言文件生成二进制格式的目标文件\",{\"3\":{\"54\":1}}],[\"基本过程如下\",{\"3\":{\"198\":1}}],[\"绑定失败\",{\"3\":{\"198\":1}}],[\"绑定成功\",{\"3\":{\"198\":1}}],[\"绑定端口\",{\"3\":{\"191\":1,\"198\":2}}],[\"端口\",{\"3\":{\"198\":2}}],[\"组装nioeventloopgroup\",{\"3\":{\"198\":1}}],[\"两种类型的handler互不干扰\",{\"3\":{\"197\":1}}],[\"两种任务的执行时间比由变量ioratio控制\",{\"3\":{\"193\":1}}],[\"出站事件channel\",{\"3\":{\"198\":1}}],[\"出站事件handler\",{\"3\":{\"198\":2}}],[\"出站事件会从链表tail往前传递到最前一个出站的handler\",{\"3\":{\"197\":1}}],[\"出站事件由上下方向处理\",{\"3\":{\"197\":1}}],[\"出站handler处理程序通常会生成或转换出站传输\",{\"3\":{\"197\":1}}],[\"和之前说的完全对应上了\",{\"3\":{\"234\":1}}],[\"和想象中的不一样\",{\"3\":{\"234\":1}}],[\"和原来相比\",{\"3\":{\"229\":1}}],[\"和\",{\"3\":{\"210\":1,\"211\":1,\"221\":1,\"222\":1}}],[\"和channeloutboundinvoker\",{\"3\":{\"197\":1}}],[\"和add\",{\"3\":{\"66\":1}}],[\"描述了channelpipeline中channelhandler通常如何处理i\",{\"3\":{\"197\":1}}],[\"业务处理链\",{\"3\":{\"195\":1}}],[\"由容器启动触发了tomcat的启动\",{\"3\":{\"229\":1}}],[\"由runalltasks方法触发\",{\"3\":{\"193\":1}}],[\"由processselectedkeys方法触发\",{\"3\":{\"193\":1}}],[\"线程启动时会调用nioeventloop的run方法\",{\"3\":{\"193\":1}}],[\"网络连接完成等\",{\"3\":{\"192\":1}}],[\"网络连接的配置参数\",{\"3\":{\"191\":1}}],[\"内置tomcat就在onrefresh方法中被启动了\",{\"3\":{\"227\":1}}],[\"内置tomcat长什么样\",{\"3\":{\"224\":1}}],[\"内嵌tomcat本质上和正常tomcat的catalina对象一样都是通过初始化内部的server对象\",{\"3\":{\"236\":1}}],[\"内嵌tomcat\",{\"0\":{\"226\":1},\"2\":{\"226\":1}}],[\"内部有一个集合\",{\"3\":{\"233\":1}}],[\"内部调用了getserver\",{\"3\":{\"226\":1}}],[\"内部也有一个server对象并且提供了start方法\",{\"3\":{\"226\":1}}],[\"内部维护了一组线程\",{\"3\":{\"194\":1}}],[\"内部的机制就可以自动不断地查询\",{\"3\":{\"192\":1}}],[\"内存中只有一份\",{\"3\":{\"55\":1}}],[\"内存中会有多份static\",{\"3\":{\"55\":1}}],[\"连接参数\",{\"3\":{\"198\":1}}],[\"连接\",{\"3\":{\"191\":1}}],[\"失败或取消时回调通知调用方\",{\"3\":{\"191\":1}}],[\"调用立即返回一个channelfuture实例\",{\"3\":{\"191\":1}}],[\"调试信息\",{\"3\":{\"81\":1}}],[\"读写\",{\"3\":{\"191\":1}}],[\"能够用于执行网络i\",{\"3\":{\"191\":1}}],[\"他们可以注册一个监听\",{\"3\":{\"190\":1}}],[\"他的并发性能得到了很大提高\",{\"3\":{\"185\":1}}],[\"正如前面介绍\",{\"3\":{\"190\":1}}],[\"正如前面所讲\",{\"3\":{\"71\":1}}],[\"串联各个组件\",{\"3\":{\"189\":1}}],[\"核心组件\",{\"0\":{\"188\":1},\"2\":{\"188\":1}}],[\"还记得这个方法吗\",{\"3\":{\"234\":1}}],[\"还记得这个方法吗tomcatembeddedcontext就是通过该方法将tomcatstarter添加进来的\",{\"3\":{\"233\":1}}],[\"还可以指定文件压缩选项\",{\"3\":{\"216\":1}}],[\"还有一个特殊值inherited或者同义词null\",{\"3\":{\"210\":1}}],[\"还支持通过实行编码解码逻辑来实现自定义协议\",{\"3\":{\"187\":1}}],[\"还是静态链接库\",{\"3\":{\"66\":1}}],[\"协议支持http\",{\"3\":{\"187\":1}}],[\"传输服务支持bio和nio\",{\"3\":{\"187\":1}}],[\"传输快\",{\"3\":{\"185\":1}}],[\"功能特性\",{\"0\":{\"187\":1},\"2\":{\"187\":1}}],[\"功能强大\",{\"3\":{\"183\":1}}],[\"就是便利其内部的host对象\",{\"3\":{\"225\":2}}],[\"就是便利其内部的sercie对象\",{\"3\":{\"225\":2}}],[\"就是调用engine的\",{\"3\":{\"225\":2}}],[\"就是自己不抽\",{\"3\":{\"68\":1}}],[\"就是自己抽\",{\"3\":{\"68\":2}}],[\"就足够了\",{\"3\":{\"185\":1}}],[\"或6\",{\"3\":{\"185\":1}}],[\"或者其它线程提交到该eventloop的任务\",{\"3\":{\"199\":1}}],[\"或者使用以下适配器类\",{\"3\":{\"195\":1}}],[\"或者去掉`\",{\"3\":{\"60\":1}}],[\"或者编译安装\",{\"3\":{\"60\":1}}],[\"或者\",{\"3\":{\"57\":1,\"216\":1,\"218\":1}}],[\"发现的bug可以被及时修复\",{\"3\":{\"185\":1}}],[\"提供异步的网络i\",{\"3\":{\"191\":1}}],[\"提供了易于使用调用接口\",{\"3\":{\"185\":1}}],[\"提取视频信息\",{\"0\":{\"105\":1},\"2\":{\"105\":1}}],[\"封装了\",{\"3\":{\"185\":1}}],[\"封装了nio的很多细节\",{\"3\":{\"183\":1}}],[\"封装好\",{\"3\":{\"185\":1}}],[\"尽量减少不必要的内存拷贝\",{\"3\":{\"185\":1}}],[\"阻塞io\",{\"3\":{\"185\":1}}],[\"阻塞和非阻塞socket基于灵活且可扩展的事件模型\",{\"3\":{\"185\":1}}],[\"安全完整的ssl\",{\"3\":{\"185\":1}}],[\"安装教程\",{\"3\":{\"132\":1}}],[\"安装环境\",{\"0\":{\"125\":1},\"2\":{\"125\":1}}],[\"安装python环境\",{\"0\":{\"123\":1},\"2\":{\"123\":1}}],[\"安装pkg\",{\"3\":{\"57\":1}}],[\"安装cmake\",{\"3\":{\"80\":1}}],[\"安装git\",{\"0\":{\"124\":1},\"2\":{\"124\":1}}],[\"安装gdb\",{\"3\":{\"80\":1}}],[\"安装g++\",{\"3\":{\"80\":1}}],[\"安装gcc\",{\"3\":{\"80\":1}}],[\"安装gflags\",{\"3\":{\"57\":1}}],[\"安装opencv\",{\"3\":{\"77\":1}}],[\"安装ms\",{\"3\":{\"61\":1}}],[\"安装twxs\",{\"3\":{\"61\":1}}],[\"安装在默认路径\",{\"3\":{\"60\":1}}],[\"安装\",{\"0\":{\"60\":1},\"2\":{\"60\":1}}],[\"安装包github下载地址https\",{\"3\":{\"28\":1,\"30\":1}}],[\"低消耗\",{\"3\":{\"185\":1}}],[\"低延迟\",{\"3\":{\"185\":1}}],[\"高亮显示\",{\"3\":{\"213\":1}}],[\"高并发\",{\"3\":{\"185\":1}}],[\"高吞吐\",{\"3\":{\"185\":1}}],[\"高性能\",{\"3\":{\"185\":1}}],[\"高性能的rpc框架必不可少\",{\"3\":{\"184\":1}}],[\"单线程\",{\"3\":{\"185\":1}}],[\"适用于各种传输类型的统一api\",{\"3\":{\"185\":1}}],[\"适用于导入自己开发的cmake项目\",{\"3\":{\"76\":1}}],[\"适用于导入非cmake安装的项目\",{\"3\":{\"76\":1}}],[\"设计优雅\",{\"3\":{\"185\":1}}],[\"设置过滤级别\",{\"3\":{\"222\":1}}],[\"设置监测配置文件是否有修改的时间间隔\",{\"3\":{\"209\":1}}],[\"设置连接配置参数\",{\"3\":{\"198\":1}}],[\"设置连接超时时间\",{\"3\":{\"33\":1}}],[\"设置channel类型为nio类型\",{\"3\":{\"198\":1}}],[\"设置安装\",{\"0\":{\"75\":1},\"2\":{\"75\":1},\"3\":{\"75\":1}}],[\"设置项目\",{\"0\":{\"64\":1},\"2\":{\"64\":1}}],[\"设置开机自动挂载\",{\"3\":{\"50\":1}}],[\"设置同时测试的主机总数\",{\"3\":{\"33\":1}}],[\"设置同时测试的登陆总数\",{\"3\":{\"33\":1}}],[\"设置重试的次数\",{\"3\":{\"33\":1}}],[\"设置远程仓库地址\",{\"3\":{\"25\":1}}],[\"主要管理eventloop的生命周期\",{\"3\":{\"194\":1}}],[\"主要作用是配置整个netty程序\",{\"3\":{\"189\":1}}],[\"主要特点有\",{\"3\":{\"185\":1}}],[\"主体\",{\"3\":{\"131\":1}}],[\"经典的\",{\"3\":{\"184\":1}}],[\"大致看下实现过程\",{\"3\":{\"234\":1}}],[\"大小写无关\",{\"3\":{\"210\":1,\"211\":1}}],[\"大数据领域\",{\"3\":{\"184\":1}}],[\"大环境\",{\"3\":{\"131\":1}}],[\"它与原来的tomcat有啥区别\",{\"3\":{\"224\":1}}],[\"它是log4j的一个改良版本\",{\"3\":{\"203\":1}}],[\"它当前分为以下三个模块\",{\"3\":{\"203\":1}}],[\"它只服务于各种各样的日志系统\",{\"3\":{\"202\":1}}],[\"它们的组成关系如下\",{\"3\":{\"197\":1}}],[\"它的netty\",{\"3\":{\"184\":1}}],[\"它本身提供了tcp\",{\"3\":{\"184\":1}}],[\"它会导致selector空轮询\",{\"3\":{\"182\":1}}],[\"游戏行业\",{\"3\":{\"184\":1}}],[\"各种get就能完成初始化\",{\"3\":{\"226\":1}}],[\"各进程节点之间的内部通信\",{\"3\":{\"184\":1}}],[\"各个节点之间需要远程服务调用\",{\"3\":{\"184\":1}}],[\"典型的应用有\",{\"3\":{\"184\":1}}],[\"往往作为基础通信组件被这些rpc框架使用\",{\"3\":{\"184\":1}}],[\"往期系列\",{\"0\":{\"107\":1},\"2\":{\"107\":1}}],[\"互联网行业\",{\"3\":{\"184\":1}}],[\"社区活跃\",{\"3\":{\"183\":1,\"185\":2}}],[\"让开发人员可以专注于业务本身\",{\"3\":{\"183\":1}}],[\"稳定\",{\"3\":{\"183\":1}}],[\"性能高\",{\"3\":{\"183\":1}}],[\"定制能力强\",{\"3\":{\"183\":1}}],[\"定义一个函数\",{\"3\":{\"74\":1}}],[\"定义一个宏\",{\"3\":{\"74\":1}}],[\"支持timebasedrollingpolicy\",{\"3\":{\"215\":1}}],[\"支持异步提交执行任务\",{\"3\":{\"193\":1}}],[\"支持关联i\",{\"3\":{\"191\":1}}],[\"支持零拷贝的bytebuf缓冲对象\",{\"3\":{\"187\":1}}],[\"支持多种主流协议\",{\"3\":{\"183\":1}}],[\"支持复杂的自定义命令\",{\"3\":{\"58\":1}}],[\"预置了多种编解码功能\",{\"3\":{\"183\":1}}],[\"预处理\",{\"3\":{\"54\":2,\"72\":1}}],[\"臭名昭著的\",{\"3\":{\"182\":1}}],[\"才能写出高质量的nio程序\",{\"3\":{\"182\":1}}],[\"你必须对多线程和网络编程非常熟悉\",{\"3\":{\"182\":1}}],[\"你需要熟练掌握selector\",{\"3\":{\"182\":1}}],[\"你使用`\",{\"3\":{\"60\":1}}],[\"学习成本高\",{\"3\":{\"182\":1}}],[\"学术加速\",{\"0\":{\"43\":1},\"2\":{\"43\":1}}],[\"减少资源消耗\",{\"3\":{\"180\":1}}],[\"延迟更低\",{\"3\":{\"180\":1}}],[\"吞吐量更高\",{\"3\":{\"180\":1}}],[\"且<maxhistory>是6\",{\"3\":{\"218\":1}}],[\"且netty拥有高性能\",{\"3\":{\"180\":1}}],[\"且不在头文件中提供给c使用\",{\"3\":{\"68\":1}}],[\"初始化内部的initializers属性\",{\"3\":{\"234\":1}}],[\"初始化tomcat对象\",{\"3\":{\"229\":1}}],[\"初始化server对象\",{\"3\":{\"225\":1}}],[\"初始化创建2个nioeventloopgroup\",{\"3\":{\"198\":1}}],[\"初始化并启动netty服务端过程如下\",{\"3\":{\"198\":1}}],[\"初始化\",{\"3\":{\"173\":1}}],[\"包括项目的清理\",{\"3\":{\"173\":1}}],[\"包含目标ip地址的文件\",{\"3\":{\"33\":1}}],[\"易于扩展的生命周期\",{\"3\":{\"173\":1}}],[\"←\",{\"3\":{\"153\":2,\"154\":5}}],[\"源码解析\",{\"0\":{\"151\":1},\"2\":{\"151\":1}}],[\"此处的context是org\",{\"3\":{\"229\":1}}],[\"此时因为对象状态已经不是new状态了\",{\"3\":{\"225\":1}}],[\"此属性生效\",{\"3\":{\"209\":1}}],[\"此参数主要定义gc\",{\"3\":{\"150\":1}}],[\"此方法只能临时挂载\",{\"3\":{\"50\":1}}],[\"参数说明\",{\"3\":{\"150\":1}}],[\"参数名称\",{\"3\":{\"150\":1}}],[\"参数详解\",{\"0\":{\"150\":1},\"2\":{\"150\":1}}],[\"参考文献\",{\"0\":{\"201\":1,\"223\":1},\"2\":{\"201\":1,\"223\":1}}],[\"参考原文\",{\"3\":{\"157\":1}}],[\"参考资料\",{\"0\":{\"106\":1},\"2\":{\"106\":1}}],[\"参考附件\",{\"3\":{\"76\":3}}],[\"参考附件6\",{\"3\":{\"67\":1}}],[\"参考链接\",{\"3\":{\"44\":1}}],[\"导出插件\",{\"0\":{\"141\":1,\"149\":1},\"2\":{\"141\":1,\"149\":1}}],[\"引入以上依赖\",{\"3\":{\"205\":1}}],[\"引入jar包\",{\"0\":{\"139\":1,\"147\":1},\"2\":{\"139\":1,\"147\":1}}],[\"引入的外部库也多起来时\",{\"3\":{\"57\":1}}],[\"点击侧边栏gradle\",{\"3\":{\"148\":1,\"149\":1}}],[\"点击plugn\",{\"3\":{\"137\":1}}],[\"点击create\",{\"3\":{\"136\":1}}],[\"点击file\",{\"3\":{\"136\":1,\"144\":1}}],[\"点击help\",{\"3\":{\"136\":1}}],[\"然后自定义配置\",{\"3\":{\"208\":1}}],[\"然后找到classpate点击add\",{\"3\":{\"139\":1}}],[\"然后选择ide\",{\"3\":{\"144\":1}}],[\"然后选择项目\",{\"3\":{\"141\":1}}],[\"然后选择plug\",{\"3\":{\"141\":1}}],[\"然后选择需要引入的jar包即可\",{\"3\":{\"139\":1}}],[\"然后选择org\",{\"3\":{\"137\":1}}],[\"然后选择this\",{\"3\":{\"136\":1}}],[\"然后点击运行\",{\"3\":{\"149\":1}}],[\"然后点击调试运行\",{\"3\":{\"148\":1}}],[\"然后点击tasks\",{\"3\":{\"148\":1,\"149\":1}}],[\"然后点击launch\",{\"3\":{\"140\":2}}],[\"然后点击add\",{\"3\":{\"137\":1}}],[\"然后点击extensions\",{\"3\":{\"137\":1}}],[\"然后点击finish\",{\"3\":{\"136\":1,\"137\":1,\"141\":1,\"144\":1}}],[\"然后点击next\",{\"3\":{\"136\":5,\"141\":1,\"144\":1}}],[\"然后输入项目名称\",{\"3\":{\"136\":1,\"144\":1}}],[\"然后一直点击next\",{\"3\":{\"136\":1}}],[\"然后在find中输入eclipse\",{\"3\":{\"136\":1}}],[\"然后在work\",{\"3\":{\"136\":1}}],[\"本质是server的start方法\",{\"3\":{\"226\":1}}],[\"本质是调用了catalina对象的load方法\",{\"3\":{\"225\":2}}],[\"本质也是调用的server\",{\"3\":{\"226\":1}}],[\"本质上就是调用server的start方法\",{\"3\":{\"225\":1}}],[\"本质上是调用了catalina的start方法\",{\"3\":{\"225\":2}}],[\"本文选取logback做具体介绍\",{\"3\":{\"202\":1}}],[\"本文主要介绍几种实现方式\",{\"3\":{\"133\":1}}],[\"本地ubuntu示例\",{\"3\":{\"78\":1}}],[\"比如在测试用例执行失败后做一些操作\",{\"3\":{\"133\":1}}],[\"比如在测试用例执行前后做一些操作\",{\"3\":{\"133\":1}}],[\"比如需要在install和build环节分别用不同的参数\",{\"3\":{\"73\":1}}],[\"操作的很多细节\",{\"3\":{\"185\":1}}],[\"操作说明\",{\"3\":{\"132\":1}}],[\"操作不变\",{\"3\":{\"67\":1}}],[\"小细节\",{\"3\":{\"131\":1}}],[\"场景\",{\"3\":{\"131\":1}}],[\"物体\",{\"3\":{\"131\":1}}],[\"人物\",{\"3\":{\"131\":1}}],[\"人工智能\",{\"1\":{\"52\":1},\"3\":{\"24\":1}}],[\"画风词\",{\"3\":{\"131\":1}}],[\"前者直接new后者解析server\",{\"3\":{\"236\":1}}],[\"前言\",{\"0\":{\"202\":1,\"224\":1},\"2\":{\"202\":1,\"224\":1}}],[\"前缀\",{\"3\":{\"131\":1}}],[\"前沿技术\",{\"1\":{\"24\":1}}],[\"反向词\",{\"0\":{\"130\":1},\"2\":{\"130\":1}}],[\"反之如果ssh使用用户名密码登录遇到上述错误\",{\"3\":{\"42\":1}}],[\"客户端构建路径\",{\"0\":{\"122\":1},\"2\":{\"122\":1}}],[\"注册\",{\"0\":{\"119\":1},\"2\":{\"119\":1}}],[\"注意spring\",{\"3\":{\"205\":1}}],[\"注意\",{\"3\":{\"31\":1,\"47\":1,\"218\":1}}],[\"||\",{\"3\":{\"113\":1,\"151\":1}}],[\"|\",{\"3\":{\"113\":2,\"197\":93,\"238\":4}}],[\"获取webserver\",{\"3\":{\"228\":1}}],[\"获取host\",{\"3\":{\"226\":1}}],[\"获取引擎\",{\"3\":{\"226\":1}}],[\"获取service\",{\"3\":{\"226\":1}}],[\"获取server\",{\"3\":{\"226\":1}}],[\"获取json数据\",{\"0\":{\"104\":1},\"2\":{\"104\":1}}],[\"获取qsv头部信息\",{\"0\":{\"103\":1},\"2\":{\"103\":1}}],[\"获取编译目标的文件名\",{\"3\":{\"73\":1}}],[\"获取编译目标的文件路径\",{\"3\":{\"73\":1}}],[\"老版本解密算法\",{\"0\":{\"101\":1},\"2\":{\"101\":1}}],[\"逐字节读取文件\",{\"0\":{\"98\":1},\"2\":{\"98\":1}}],[\"后\",{\"3\":{\"192\":1}}],[\"后记\",{\"0\":{\"95\":1},\"2\":{\"95\":1}}],[\"后面做项目时会有调整\",{\"3\":{\"81\":1}}],[\"后面的参数是需要用到的源文件\",{\"3\":{\"66\":1}}],[\"总结\",{\"0\":{\"94\":1,\"236\":1},\"2\":{\"94\":1,\"236\":1}}],[\"视频分段信息\",{\"0\":{\"93\":1},\"2\":{\"93\":1}}],[\"索引信息\",{\"0\":{\"91\":1},\"2\":{\"91\":1}}],[\"头部信息\",{\"0\":{\"90\":1},\"2\":{\"90\":1}}],[\"什么是qsv文件\",{\"0\":{\"89\":1},\"2\":{\"89\":1}}],[\"系统中的环境变量\",{\"3\":{\"83\":1}}],[\"系统重启后就失效\",{\"3\":{\"50\":1}}],[\"附录\",{\"0\":{\"83\":1},\"2\":{\"83\":1}}],[\"附件位置\",{\"3\":{\"61\":1,\"66\":1,\"67\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"77\":1}}],[\"六\",{\"0\":{\"83\":1,\"212\":1},\"2\":{\"83\":1,\"212\":1}}],[\"请输入0~10中你最喜欢的数字\",{\"3\":{\"82\":1}}],[\"请访问\",{\"3\":{\"79\":1,\"81\":1}}],[\"程序\",{\"0\":{\"82\":1}}],[\"五\",{\"0\":{\"82\":1,\"211\":1},\"2\":{\"82\":1,\"211\":1}}],[\"启用整齐打印\",{\"3\":{\"81\":1}}],[\"启动了tomcat\",{\"3\":{\"229\":1}}],[\"启动方法\",{\"3\":{\"226\":1}}],[\"启动调试\",{\"0\":{\"140\":1,\"148\":1},\"2\":{\"140\":1,\"148\":1}}],[\"启动\",{\"3\":{\"81\":1}}],[\"启动ssl\",{\"3\":{\"33\":1}}],[\"无论是手游服务端还是大型的网络游戏\",{\"3\":{\"184\":1}}],[\"无法同时编译所有文件\",{\"3\":{\"81\":1}}],[\"无卡启动\",{\"3\":{\"78\":1}}],[\"仅适用于c++基础知识教学\",{\"3\":{\"81\":1}}],[\"仅在头文件中作为借口给c使用\",{\"3\":{\"68\":1}}],[\"文本\",{\"3\":{\"187\":1}}],[\"文本文件\",{\"3\":{\"54\":2}}],[\"文件名必须包含\",{\"3\":{\"218\":1}}],[\"文件在workspace中的路径\",{\"3\":{\"83\":1}}],[\"文件自身的绝对路径\",{\"3\":{\"83\":1}}],[\"文件所在的文件夹路径\",{\"3\":{\"81\":4,\"83\":1}}],[\"文件所在的文件夹路径下所有cpp文件\",{\"3\":{\"81\":1}}],[\"文件本身\",{\"3\":{\"81\":1}}],[\"颜色\",{\"3\":{\"81\":1}}],[\"终端\",{\"3\":{\"81\":1}}],[\"菜单\",{\"3\":{\"81\":1}}],[\"再次根下tomcatservletwebserverfactory类\",{\"3\":{\"234\":1}}],[\"再次看下创建context对象的地方\",{\"3\":{\"232\":1}}],[\"再由tomcat启动触发容器的创建和启动\",{\"3\":{\"229\":1}}],[\"再用vs\",{\"3\":{\"81\":1}}],[\"再通过target\",{\"3\":{\"66\":1}}],[\"开始工作\",{\"3\":{\"198\":1}}],[\"开发的网络通信框架\",{\"3\":{\"185\":1}}],[\"开发环境配置\",{\"0\":{\"81\":1},\"2\":{\"81\":1}}],[\"开源地址\",{\"3\":{\"180\":1}}],[\"开启所有警告\",{\"3\":{\"81\":1}}],[\"开头\",{\"3\":{\"54\":1}}],[\"四层是host元素\",{\"3\":{\"225\":1}}],[\"四\",{\"0\":{\"81\":1,\"210\":1,\"230\":1},\"2\":{\"81\":1,\"210\":1,\"230\":1}}],[\"里进行调试\",{\"3\":{\"79\":1,\"81\":1}}],[\"欲了解更多信息\",{\"3\":{\"79\":1,\"81\":1}}],[\"悬停以查看现有属性的描述\",{\"3\":{\"79\":1,\"81\":1}}],[\"了解相关属性\",{\"3\":{\"79\":1,\"81\":1}}],[\"打包\",{\"3\":{\"173\":1}}],[\"打印结果\",{\"3\":{\"79\":1}}],[\"打个散烟的比方\",{\"3\":{\"68\":1}}],[\"的值\",{\"3\":{\"218\":1}}],[\"的传输依赖于零拷贝特性\",{\"3\":{\"185\":1}}],[\"的高性能通信和序列化组件avro的rpc框架\",{\"3\":{\"184\":1}}],[\"的详细信息\",{\"3\":{\"150\":1}}],[\"的和\",{\"3\":{\"79\":1}}],[\"的编译过程\",{\"0\":{\"54\":1}}],[\"计算\",{\"3\":{\"79\":1,\"81\":1}}],[\"建议conda虚拟环境\",{\"3\":{\"79\":1}}],[\"￥0\",{\"3\":{\"78\":1}}],[\"中变量解释\",{\"0\":{\"83\":1},\"2\":{\"83\":1}}],[\"中文菜单\",{\"3\":{\"78\":1}}],[\"中的下一个处理程序\",{\"3\":{\"195\":1}}],[\"中的\",{\"0\":{\"68\":1},\"2\":{\"68\":1}}],[\"依赖和链接opencv与常规的添加依赖并没有太多不同\",{\"3\":{\"77\":1}}],[\"依赖项b链接到目标a\",{\"3\":{\"68\":1}}],[\"依赖项b并不链接到目标a\",{\"3\":{\"68\":1}}],[\"依赖项b仅链接到目标a\",{\"3\":{\"68\":1}}],[\"库作者设置\",{\"3\":{\"76\":1}}],[\"库和头文件的能力\",{\"3\":{\"58\":1}}],[\"均可以通过find\",{\"3\":{\"76\":1}}],[\"对tomcat版本有要求\",{\"3\":{\"238\":1}}],[\"对记录日志进行格式化\",{\"3\":{\"215\":1}}],[\"对记录事件进行格式化\",{\"3\":{\"214\":1}}],[\"对日志进行格式化\",{\"3\":{\"213\":1}}],[\"对\",{\"3\":{\"212\":1}}],[\"对调试应用程序非常有帮助\",{\"3\":{\"203\":1}}],[\"对比于bio\",{\"3\":{\"185\":1}}],[\"对于大部分支持了cmake的项目来说\",{\"3\":{\"76\":1}}],[\"对新分区\",{\"3\":{\"47\":1}}],[\"寻找依赖\",{\"0\":{\"76\":1},\"2\":{\"76\":1}}],[\"非info级别的日志\",{\"3\":{\"222\":1}}],[\"非io任务\",{\"3\":{\"193\":1}}],[\"非阻塞io\",{\"3\":{\"185\":1}}],[\"非常有用\",{\"3\":{\"75\":1}}],[\"非0数字\",{\"3\":{\"71\":1}}],[\"作为前缀\",{\"3\":{\"75\":1}}],[\"并执行initializers每一个实例的onstartup方法\",{\"3\":{\"234\":1}}],[\"并执行其load和start方法\",{\"3\":{\"225\":1}}],[\"并初始化其内部的server对象\",{\"3\":{\"229\":1}}],[\"并传入start参数\",{\"3\":{\"225\":1}}],[\"并用info级别输出到控制台\",{\"3\":{\"203\":1}}],[\"并将servlet容器的装饰类\",{\"3\":{\"231\":1}}],[\"并将niosocketchannel注册到某个worker\",{\"3\":{\"199\":1}}],[\"并将其转发到其channelpipeline\",{\"3\":{\"195\":1}}],[\"并且每个channelhandlercontext中又关联着一个channelhandler\",{\"3\":{\"197\":1}}],[\"并且不保证在调用结束时所请求的i\",{\"3\":{\"191\":1}}],[\"并通过调用channelhandlercontext中定义的事件传播方法\",{\"3\":{\"197\":1}}],[\"并分别将可执行文件安装在bin中\",{\"3\":{\"75\":1}}],[\"并有很多关键字来引导命令的参数输入\",{\"3\":{\"63\":1}}],[\"下图引用netty的javadoc4\",{\"3\":{\"197\":1}}],[\"下面是几个常用的过滤器\",{\"3\":{\"220\":1}}],[\"下面是一些常用的channel类型\",{\"3\":{\"191\":1}}],[\"下面介绍几种常用的appender\",{\"3\":{\"212\":1}}],[\"下面的代码片段中\",{\"3\":{\"75\":1}}],[\"下载\",{\"3\":{\"58\":1}}],[\"下载地址\",{\"3\":{\"35\":1,\"78\":1}}],[\"函数名为second\",{\"3\":{\"74\":1}}],[\"函数和宏\",{\"0\":{\"74\":1},\"2\":{\"74\":1}}],[\"宏内部变量test\",{\"3\":{\"74\":1}}],[\"宏内部的信息\",{\"3\":{\"74\":1}}],[\"宏名为my\",{\"3\":{\"74\":1}}],[\"判断当前构建类型是否为debug\",{\"3\":{\"73\":1}}],[\"判断目标是否存在\",{\"3\":{\"73\":1}}],[\"否则返回空字符串\",{\"3\":{\"73\":1}}],[\"条件表达式\",{\"3\":{\"73\":2}}],[\"条件控制\",{\"0\":{\"71\":1},\"2\":{\"71\":1}}],[\"尖括号中间可以是如下几种类型\",{\"3\":{\"73\":1}}],[\">print\",{\"3\":{\"151\":1}}],[\">project\",{\"3\":{\"144\":1}}],[\">=\",{\"3\":{\"150\":2,\"151\":1}}],[\">buildplugin\",{\"3\":{\"149\":1}}],[\">runide\",{\"3\":{\"148\":1}}],[\">intellij\",{\"3\":{\"148\":1,\"149\":1}}],[\">install\",{\"3\":{\"136\":1}}],[\">中添加如下代码\",{\"3\":{\"145\":1}}],[\">deployable\",{\"3\":{\"141\":1}}],[\">other\",{\"3\":{\"136\":1}}],[\">new\",{\"3\":{\"136\":1,\"144\":1}}],[\">>>\",{\"3\":{\"233\":2}}],[\">>\",{\"3\":{\"82\":1,\"233\":1,\"234\":1}}],[\">仅在install环节生效\",{\"3\":{\"73\":1}}],[\">仅在build环节生效\",{\"3\":{\"73\":1}}],[\">\",{\"3\":{\"73\":3,\"137\":4,\"145\":2,\"151\":3,\"198\":1,\"205\":1,\"208\":15,\"212\":1,\"213\":7,\"214\":3,\"215\":1,\"216\":6,\"217\":1,\"218\":4,\"219\":6,\"221\":5,\"222\":4,\"225\":1,\"226\":1,\"234\":1,\"238\":4}}],[\">log\",{\"3\":{\"28\":1}}],[\"输入项目名称\",{\"3\":{\"136\":1}}],[\"输入g++\",{\"3\":{\"54\":1}}],[\"输出gc的时间戳\",{\"3\":{\"150\":1}}],[\"输出gc的详细日志\",{\"3\":{\"150\":1}}],[\"输出结果\",{\"3\":{\"81\":1}}],[\"输出相关表达式\",{\"3\":{\"73\":1}}],[\"输出相关的表达式\",{\"3\":{\"73\":1}}],[\"输出二进制文件\",{\"3\":{\"72\":1}}],[\"输出汇编代码\",{\"3\":{\"72\":1}}],[\"输出\",{\"3\":{\"72\":1,\"81\":1}}],[\"空字符串\",{\"3\":{\"71\":1}}],[\"空密码\",{\"3\":{\"33\":1}}],[\"除了可以设置变量以外\",{\"3\":{\"71\":1}}],[\"应该把cmake当成编程语言\",{\"3\":{\"71\":1}}],[\"有序列表里的下个过滤器过接着处理日志\",{\"3\":{\"220\":1}}],[\"有以下子节点\",{\"3\":{\"213\":1,\"214\":1,\"215\":1,\"216\":1,\"218\":1,\"222\":1}}],[\"有一个节点\",{\"3\":{\"212\":1}}],[\"有两个参数\",{\"3\":{\"74\":1}}],[\"有时用它可以让代码更加精简\",{\"3\":{\"73\":1}}],[\"有时候我们通过变量来判断我们在什么平台上\",{\"3\":{\"69\":1}}],[\"有些时候有一些常用库我们也不用手动添加头文件或链接库路径\",{\"3\":{\"57\":1}}],[\"信息\",{\"3\":{\"69\":1}}],[\"像其他编程语言一样\",{\"3\":{\"69\":1}}],[\"变量查询\",{\"3\":{\"73\":2}}],[\"变量\",{\"0\":{\"69\":1},\"2\":{\"69\":1}}],[\"所有实现了servletcontextinitializer接口的bean都能拿到servletcontext对象\",{\"3\":{\"234\":1}}],[\"所有info级别的日志交给appender处理\",{\"3\":{\"222\":1}}],[\"所以spring搞了一个自己的接口servletcontextinitializer并且内部也有一个待实现的方法onstartup\",{\"3\":{\"234\":1}}],[\"所以看下standardcontext类\",{\"3\":{\"233\":1}}],[\"所以引发了一个问题\",{\"3\":{\"231\":1}}],[\"所以会执行lifecyclebase的start方法\",{\"3\":{\"225\":1}}],[\"所以会执行lifecyclebase的init方法\",{\"3\":{\"225\":1}}],[\"所以不需要name属性\",{\"3\":{\"211\":1}}],[\"所以不能通过解析配置cmakelists\",{\"3\":{\"73\":1}}],[\"所以d不会传播到a\",{\"3\":{\"68\":1}}],[\"所以c会传播到a\",{\"3\":{\"68\":1}}],[\"所谓静态和动态\",{\"3\":{\"55\":1}}],[\"因此我们可以通过find\",{\"3\":{\"77\":1}}],[\"因此生成的文件比较大\",{\"3\":{\"55\":1}}],[\"因为已经被命名为root\",{\"3\":{\"211\":1}}],[\"因为这个接口有许多的方法需要实现\",{\"3\":{\"195\":1}}],[\"因为d是b的private依赖性\",{\"3\":{\"68\":1}}],[\"因为c是b的public依赖项\",{\"3\":{\"68\":1}}],[\"创建webserver对象时启动的\",{\"3\":{\"236\":1}}],[\"创建web服务\",{\"3\":{\"228\":1}}],[\"创建了servletcontainerinitializer的实现类tomcatstarter最终拿到tomcat容器对象\",{\"3\":{\"236\":1}}],[\"创建了servletcontainerinitializer的实现类\",{\"3\":{\"232\":1}}],[\"创建servlet容器\",{\"3\":{\"232\":1}}],[\"创建tomcat启动类\",{\"3\":{\"229\":1}}],[\"创建工作线程组\",{\"3\":{\"198\":1}}],[\"创建mainreactor\",{\"3\":{\"198\":1}}],[\"创建junit\",{\"0\":{\"137\":1,\"145\":1},\"2\":{\"137\":1,\"145\":1}}],[\"创建插件工程\",{\"0\":{\"136\":1,\"144\":1},\"2\":{\"136\":1,\"144\":1}}],[\"创建类\",{\"0\":{\"96\":1},\"2\":{\"96\":1}}],[\"创建库\",{\"3\":{\"68\":1}}],[\"创建一个名为main的新分支\",{\"3\":{\"25\":1}}],[\"举例\",{\"3\":{\"68\":1}}],[\"使用户可以完全控制事件的处理方式\",{\"3\":{\"197\":1}}],[\"使用方便详细记录的javadoc\",{\"3\":{\"185\":1}}],[\"使用更简单\",{\"3\":{\"183\":1}}],[\"使用简单\",{\"3\":{\"183\":1}}],[\"使用\",{\"3\":{\"79\":1,\"81\":1,\"212\":1}}],[\"使用find\",{\"3\":{\"76\":1}}],[\"使用install安装\",{\"3\":{\"76\":1}}],[\"使用install安装demo\",{\"3\":{\"75\":1}}],[\"使用interface\",{\"3\":{\"68\":1}}],[\"使用public\",{\"3\":{\"68\":1}}],[\"使用private\",{\"3\":{\"68\":1}}],[\"使用g++等编译工具\",{\"3\":{\"54\":1}}],[\"给别人抽\",{\"3\":{\"68\":1}}],[\"为<appender>添加一个或多个过滤器后\",{\"3\":{\"220\":1}}],[\"为什么要这样做呢\",{\"3\":{\"234\":1}}],[\"为什么使用netty\",{\"0\":{\"181\":1},\"2\":{\"181\":1}}],[\"为什么需要cmake\",{\"0\":{\"56\":1},\"2\":{\"56\":1}}],[\"为\",{\"3\":{\"81\":1}}],[\"为false的常量\",{\"3\":{\"71\":1}}],[\"为true的常量\",{\"3\":{\"71\":1}}],[\"为例\",{\"3\":{\"68\":1,\"83\":1}}],[\"类似的命令\",{\"3\":{\"68\":1}}],[\"类似函数传参\",{\"3\":{\"63\":1}}],[\"也就是tomcat启动的位置\",{\"3\":{\"234\":1}}],[\"也就是容器对象启动后\",{\"3\":{\"233\":1}}],[\"也就是说我们写的实现类在实现onstartup的方法中就可以调用servletcontext的addservlet方法完成servlet的注册了\",{\"3\":{\"231\":1}}],[\"也可以是绝对目录\",{\"3\":{\"214\":1,\"215\":1}}],[\"也可以指定vm参数启动时指定\",{\"3\":{\"207\":1}}],[\"也可以直接在plugin\",{\"3\":{\"137\":1}}],[\"也可以用一个cmakelists\",{\"3\":{\"67\":1}}],[\"也即tasks\",{\"3\":{\"83\":1}}],[\"也即test\",{\"3\":{\"83\":1}}],[\"也即\",{\"3\":{\"83\":5}}],[\"也是我喜欢的数字\",{\"3\":{\"82\":1}}],[\"也通过变量来决定添加哪些依赖\",{\"3\":{\"69\":1}}],[\"也在头文件中提供给c使用\",{\"3\":{\"68\":1}}],[\"也给别人抽\",{\"3\":{\"68\":1}}],[\"也不方便调试和编辑\",{\"3\":{\"57\":1}}],[\"当作入参传入onstartup方法\",{\"3\":{\"231\":1}}],[\"当service的start方法被调用后需要执行其下engine的init方法和start方法以此类推一直到调用完context的init方法和start方法\",{\"3\":{\"225\":1}}],[\"当scan为true时\",{\"3\":{\"209\":1}}],[\"当日志级别低于临界值时\",{\"3\":{\"221\":1}}],[\"当日志级别等于或高于临界值时\",{\"3\":{\"221\":1}}],[\"当用户指定的窗口过大时\",{\"3\":{\"216\":1}}],[\"当为true时\",{\"3\":{\"215\":1}}],[\"当发生滚动时\",{\"3\":{\"215\":1}}],[\"当符合某个条件时\",{\"3\":{\"215\":1}}],[\"当此属性设置为true时\",{\"3\":{\"209\":2}}],[\"当向一个selector中注册channel\",{\"3\":{\"192\":1}}],[\"当操作执行成功或失败时监听会自动触发注册的监听事件\",{\"3\":{\"190\":1}}],[\"当前项目的目录下\",{\"3\":{\"219\":1}}],[\"当前日志总是记录到file指定的文件\",{\"3\":{\"218\":1}}],[\"当前活动日志文件的大小\",{\"3\":{\"217\":1}}],[\"当前网络连接的通道的状态\",{\"3\":{\"191\":1}}],[\"当前配置的环境主要为了演示c++基础知识教学\",{\"3\":{\"81\":1}}],[\"当前文件光标所在的行号\",{\"3\":{\"83\":1}}],[\"当前文件的后缀\",{\"3\":{\"83\":1}}],[\"当前文件的文件名\",{\"3\":{\"81\":2,\"83\":2}}],[\"当前文件\",{\"3\":{\"79\":1,\"81\":1}}],[\"当需要发布项目时你需要指定项目文件的安装路径\",{\"3\":{\"75\":1}}],[\"当condition为真时\",{\"3\":{\"73\":1}}],[\"当然\",{\"3\":{\"67\":1}}],[\"当我们的项目文件变得多起来\",{\"3\":{\"57\":1}}],[\"当我们需要引入外部库时\",{\"3\":{\"57\":1}}],[\"当我们编译附件中1\",{\"3\":{\"57\":1}}],[\"更多的新功能会被加入\",{\"3\":{\"185\":1}}],[\"更多介绍参考下节\",{\"3\":{\"66\":1}}],[\"更多底层的知识需要单独进行深入讲解\",{\"3\":{\"55\":1}}],[\"通用通信api\",{\"3\":{\"187\":1}}],[\"通用方法\",{\"0\":{\"97\":1},\"2\":{\"97\":1}}],[\"通过实现webserverfactorycustomizer接口来可以个性化tomcat配置\",{\"3\":{\"237\":1}}],[\"通过servletwebserverfactoryautoconfiguration导入beanpostprocessorsregistrar\",{\"3\":{\"237\":1}}],[\"通过servletwebserverfactoryconfiguration完成tomcatservletwebserverfactory注入\",{\"3\":{\"229\":1}}],[\"通过对tomcatstarter的onstartup方法的分析可以知道\",{\"3\":{\"234\":1}}],[\"通过load方法可以知道server内部有一组service\",{\"3\":{\"225\":1}}],[\"通过反射构建catalina对象\",{\"3\":{\"225\":1}}],[\"通过设置file\",{\"3\":{\"218\":1}}],[\"通过设定不同阶段不同的参数\",{\"3\":{\"73\":1}}],[\"通过\",{\"3\":{\"192\":1}}],[\"通过注册监听器到channelfuture上\",{\"3\":{\"191\":1}}],[\"通过与其他业界主流的nio框架对比\",{\"3\":{\"183\":1}}],[\"通过变量来判断我们需要编译哪些target\",{\"3\":{\"69\":1}}],[\"通过target\",{\"3\":{\"66\":2}}],[\"通常通过实际输入操作\",{\"3\":{\"197\":1}}],[\"通常用小写\",{\"3\":{\"63\":1}}],[\"通常在测试单个文件时会使用命令行进行编译\",{\"3\":{\"57\":1}}],[\"通常g++能在默认查询路径中找到他们\",{\"3\":{\"57\":1}}],[\"通常禁止了用户名密码登录之后\",{\"3\":{\"42\":1}}],[\"例如write请求\",{\"3\":{\"197\":1}}],[\"例如socketchannel\",{\"3\":{\"197\":2}}],[\"例如channelhandlercontext\",{\"3\":{\"197\":1}}],[\"例如可读\",{\"3\":{\"192\":1}}],[\"例如接收缓冲区大小\",{\"3\":{\"191\":1}}],[\"例如是否打开\",{\"3\":{\"191\":1}}],[\"例如\",{\"3\":{\"66\":1,\"216\":2,\"219\":1,\"221\":1,\"222\":1}}],[\"例子中用的是first\",{\"3\":{\"64\":1}}],[\"└──\",{\"3\":{\"66\":7,\"67\":2}}],[\"│\",{\"3\":{\"66\":8,\"67\":1}}],[\"├──\",{\"3\":{\"66\":9,\"67\":3}}],[\"静态库\",{\"3\":{\"75\":1}}],[\"静态库文件\",{\"3\":{\"66\":1}}],[\"静态链接库名称一般是lib库名称\",{\"3\":{\"55\":1}}],[\"静态链接库和动态链接库\",{\"0\":{\"55\":1},\"2\":{\"55\":1}}],[\"会被当做目录分隔符\",{\"3\":{\"218\":1}}],[\"会产生归档文件mylog1\",{\"3\":{\"216\":1}}],[\"会自动将窗口设置为12\",{\"3\":{\"216\":1}}],[\"会自动引入以下jar\",{\"3\":{\"205\":1}}],[\"会在build下生成\",{\"3\":{\"66\":1,\"67\":1}}],[\"会对\",{\"3\":{\"54\":1}}],[\"介绍服务端netty的工作架构图\",{\"3\":{\"199\":1}}],[\"介绍\",{\"0\":{\"133\":1,\"135\":1,\"143\":1},\"1\":{\"119\":1,\"120\":1,\"121\":1,\"122\":1},\"2\":{\"133\":1,\"135\":1,\"143\":1},\"3\":{\"64\":1}}],[\"版本迭代周期短\",{\"3\":{\"183\":1,\"185\":1}}],[\"版本\",{\"3\":{\"64\":1}}],[\"版本的值在关键字之后\",{\"3\":{\"63\":1}}],[\"添加到taskqueue中的任务\",{\"3\":{\"193\":1}}],[\"添加链接库\",{\"3\":{\"67\":1}}],[\"添加头文件\",{\"3\":{\"67\":1}}],[\"添加头文件目录\",{\"3\":{\"66\":1}}],[\"添加可执行文件\",{\"3\":{\"67\":1,\"68\":1}}],[\"添加可执行文件目标\",{\"0\":{\"65\":1},\"2\":{\"65\":1}}],[\"添加动态库\",{\"3\":{\"67\":2}}],[\"添加库文件的目录即可\",{\"3\":{\"66\":1}}],[\"添加库文件目录\",{\"3\":{\"66\":2}}],[\"添加目标链接库\",{\"3\":{\"66\":1}}],[\"添加执行文件\",{\"3\":{\"66\":1}}],[\"添加静态库\",{\"3\":{\"66\":1}}],[\"添加一个可执行程序\",{\"3\":{\"63\":1}}],[\"添加如下内容\",{\"3\":{\"50\":1}}],[\"项目名称\",{\"3\":{\"66\":1}}],[\"项目信息\",{\"3\":{\"66\":1,\"67\":1}}],[\"项目描述\",{\"3\":{\"63\":1,\"64\":1}}],[\"项目经历\",{\"0\":{\"11\":1},\"2\":{\"11\":1}}],[\"最后看下getservletcontext方法\",{\"3\":{\"233\":1}}],[\"最常用的滚动策略\",{\"3\":{\"219\":1}}],[\"最低等级\",{\"3\":{\"203\":1}}],[\"最低版本要求\",{\"3\":{\"66\":2,\"67\":1}}],[\"最低版本号要求\",{\"3\":{\"63\":1}}],[\"最高等级\",{\"3\":{\"203\":1}}],[\"最小化不必要的内存复制\",{\"3\":{\"185\":1}}],[\"最小化不必要的内存复制等优点\",{\"3\":{\"180\":1}}],[\"最终实现了所有实现servletcontextinitializer接口的bean都能拿到tomcat容器\",{\"3\":{\"236\":1}}],[\"最终调用server对象的start方法来完成启动的\",{\"3\":{\"236\":1}}],[\"最终由该类完成dispatcherservlet向tomcat容器的注册\",{\"3\":{\"235\":1}}],[\"最终会将servletcontextinitializer传入tomcatstarter的构造函数\",{\"3\":{\"234\":1}}],[\"最终会通过tomcatservletwebserverfactory工厂类构建webserver对象\",{\"3\":{\"229\":1}}],[\"最终这个私有方法会被调用\",{\"3\":{\"234\":1}}],[\"最终借助tomcatstarter类中的onstartup完成了实现\",{\"3\":{\"234\":1}}],[\"最终将applicationcontext对象暴露给servletcontainerinitializer实现类\",{\"3\":{\"233\":1}}],[\"最终将tomcat对象封装到tomcatwebserver中返回\",{\"3\":{\"229\":1}}],[\"最终在解析完web\",{\"3\":{\"231\":1}}],[\"最终可以发现内嵌tomcat本质上和catalina对象一样\",{\"3\":{\"226\":1}}],[\"最终各个元素的init和start方法都被执行了一遍\",{\"3\":{\"225\":1}}],[\"最终又回到了server的start方法此时init方法已经执行完了\",{\"3\":{\"225\":1}}],[\"最终解析时会去tomcat根目录下的webapps文件中找web\",{\"3\":{\"225\":1}}],[\"最终其被解析server对象\",{\"3\":{\"225\":1}}],[\"最终导致cpu\",{\"3\":{\"182\":1}}],[\"最终生成可执行程序\",{\"3\":{\"54\":1}}],[\"语法基础\",{\"0\":{\"62\":1},\"2\":{\"62\":1}}],[\"运行catalina\",{\"3\":{\"225\":1}}],[\"运行生成任务生成可执行文件\",{\"3\":{\"81\":1}}],[\"运行\",{\"3\":{\"61\":1,\"72\":1}}],[\"配置上下文\",{\"3\":{\"229\":1}}],[\"配置文件如果发生改变\",{\"3\":{\"209\":1}}],[\"配置信息需要放在前面\",{\"3\":{\"208\":1}}],[\"配置eventloopgroup\",{\"3\":{\"198\":1}}],[\"配置入站\",{\"3\":{\"198\":3}}],[\"配置cmake后\",{\"3\":{\"77\":1}}],[\"配置\",{\"0\":{\"158\":1},\"2\":{\"158\":1},\"3\":{\"61\":1}}],[\"验证\",{\"3\":{\"60\":1,\"173\":1}}],[\"几乎支持所有的ide\",{\"3\":{\"58\":1}}],[\"从spring容器中获取tomcatservletwebserverfactory如果没注入则直接进行注入\",{\"3\":{\"228\":1}}],[\"从高到低分为共分为七个等级\",{\"3\":{\"203\":1}}],[\"从远程读取入站数据\",{\"3\":{\"197\":1}}],[\"从使用的角度来说\",{\"3\":{\"68\":1}}],[\"从理解的角度来看\",{\"3\":{\"68\":1}}],[\"从简单的文本文件\",{\"3\":{\"58\":1}}],[\"从源码生成最终的可执行文件一般有这几步\",{\"3\":{\"54\":1}}],[\"自3\",{\"3\":{\"185\":1}}],[\"自动生成工作区和项目的能力\",{\"3\":{\"58\":1}}],[\"自动搜索可能需要的程序\",{\"3\":{\"58\":1}}],[\"自定义配置可选组件\",{\"3\":{\"58\":1}}],[\"生成niosocketchannel\",{\"3\":{\"199\":1}}],[\"生成活动文件\",{\"3\":{\"81\":2}}],[\"生成<libraryname>config\",{\"3\":{\"76\":1}}],[\"生成文件的方式间接测试\",{\"3\":{\"73\":1}}],[\"生成表达式被展开是在生成构建系统的时候\",{\"3\":{\"73\":1}}],[\"生成器表达式是$<\",{\"3\":{\"73\":1}}],[\"生成器表达式简单来说就是在cmake生成构建系统的时候根据不同配置动态生成特定的内容\",{\"3\":{\"73\":1}}],[\"生成器表达式\",{\"0\":{\"73\":1},\"2\":{\"73\":1}}],[\"生成动态库\",{\"3\":{\"67\":1}}],[\"生成动态库并连接\",{\"0\":{\"67\":1},\"2\":{\"67\":1}}],[\"生成静态库\",{\"3\":{\"66\":1}}],[\"生成静态库并链接\",{\"0\":{\"66\":1},\"2\":{\"66\":1}}],[\"生成\",{\"3\":{\"61\":1}}],[\"生成各种文件\",{\"3\":{\"58\":1}}],[\"生产目录位于c\",{\"3\":{\"39\":1}}],[\"可选节点\",{\"3\":{\"218\":1}}],[\"可直接使用\",{\"3\":{\"205\":1}}],[\"可写事件发生时进行处理\",{\"3\":{\"199\":1}}],[\"可写\",{\"3\":{\"192\":1}}],[\"可执行文件\",{\"3\":{\"75\":1}}],[\"可执行文件或库\",{\"3\":{\"55\":1}}],[\"可以看到该类实现了servletcontextinitializer接口也就是其能拿到tomcat容器对象\",{\"3\":{\"235\":1}}],[\"可以看到自动装配时向spring容器中注册了dispatcherservletregistrationbean类\",{\"3\":{\"235\":1}}],[\"可以看出如果tomcatstarter中的onstartup方法能调用到该方法\",{\"3\":{\"234\":1}}],[\"可以为活动文件和归档文件指定不同位置\",{\"3\":{\"218\":1}}],[\"可以是相对目录\",{\"3\":{\"214\":1,\"215\":1}}],[\"可以设置addtivity=false解决\",{\"3\":{\"210\":1}}],[\"可以继承base\",{\"3\":{\"208\":1}}],[\"可以继承它的子类\",{\"3\":{\"195\":1}}],[\"可以理解为一个线程池\",{\"3\":{\"194\":1}}],[\"可以i\",{\"3\":{\"191\":1}}],[\"可以清晰地分离关注点高度可定制的线程模型\",{\"3\":{\"185\":1}}],[\"可以通过channelhandler对通信框架进行灵活地扩展\",{\"3\":{\"183\":1}}],[\"可以通过插件的方式来实现junit\",{\"3\":{\"135\":1,\"143\":1}}],[\"可以用任意条件对日志进行过滤\",{\"3\":{\"220\":1}}],[\"可以用来监听junit的执行过程\",{\"3\":{\"133\":1}}],[\"可以用类似file\",{\"3\":{\"73\":1}}],[\"可以打开滑到底部\",{\"3\":{\"72\":1}}],[\"可以和条件一起使用的关键词有\",{\"3\":{\"71\":1}}],[\"可以安全清理\",{\"3\":{\"58\":1}}],[\"如\",{\"3\":{\"207\":2,\"208\":1,\"218\":1}}],[\"如图右侧所示\",{\"3\":{\"197\":1}}],[\"如图左侧所示\",{\"3\":{\"197\":1}}],[\"如register0\",{\"3\":{\"193\":1}}],[\"如accept\",{\"3\":{\"193\":1}}],[\"如建立连接\",{\"3\":{\"191\":1}}],[\"如下图所示\",{\"3\":{\"136\":2,\"137\":1,\"139\":1,\"140\":1,\"141\":1,\"144\":1,\"149\":1}}],[\"如pytorch\",{\"3\":{\"79\":1,\"81\":1}}],[\"如果日志级别等于配置级别\",{\"3\":{\"222\":1}}],[\"如果没设置file\",{\"3\":{\"218\":1}}],[\"如果没有给出时间单位\",{\"3\":{\"209\":1}}],[\"如果直接使用\",{\"3\":{\"218\":1}}],[\"如果当前活动文件的大小超过指定大小会触发当前活动文件滚动\",{\"3\":{\"217\":1}}],[\"如果是\",{\"3\":{\"215\":1}}],[\"如果是false\",{\"3\":{\"214\":1,\"215\":1}}],[\"如果是true\",{\"3\":{\"214\":2}}],[\"如果上级目录不存在会自动创建\",{\"3\":{\"214\":1,\"215\":1}}],[\"如果要输出\",{\"3\":{\"212\":1}}],[\"如果存在重复打印问题\",{\"3\":{\"210\":1}}],[\"如果未设置此属性\",{\"3\":{\"210\":1}}],[\"如果cmake找到了opencv\",{\"3\":{\"77\":1}}],[\"如果找到\",{\"3\":{\"76\":1}}],[\"如果不设置cmake\",{\"3\":{\"75\":1}}],[\"如果不添加\",{\"3\":{\"66\":3}}],[\"如果b既用于a的实现\",{\"3\":{\"68\":1}}],[\"如果b不用于a的实现\",{\"3\":{\"68\":1}}],[\"如果b仅用于a的实现\",{\"3\":{\"68\":1}}],[\"如果有c链接了目标a\",{\"3\":{\"68\":1}}],[\"如果有c\",{\"3\":{\"68\":3}}],[\"如build\",{\"3\":{\"58\":1}}],[\"如附件中的2\",{\"3\":{\"57\":1}}],[\"独立的构建目录\",{\"3\":{\"58\":1}}],[\"特性\",{\"3\":{\"58\":1}}],[\"测试\",{\"3\":{\"173\":1}}],[\"测试代码main\",{\"3\":{\"81\":1}}],[\"测试代码demo\",{\"3\":{\"79\":1}}],[\"测试和软件打包的开源跨平台工具\",{\"3\":{\"58\":1}}],[\"测试输出\",{\"3\":{\"57\":1}}],[\"但最多20gb\",{\"3\":{\"219\":1}}],[\"但是startinternal方法是由其父类standardcontext实现的\",{\"3\":{\"233\":1}}],[\"但是和web\",{\"3\":{\"232\":1}}],[\"但是有两个限制\",{\"3\":{\"215\":1}}],[\"但是它是根logger\",{\"3\":{\"211\":1}}],[\"但是可以过一会等它执行完成或者直接注册一个监听\",{\"3\":{\"190\":1}}],[\"但仍然不影响系统的继续运行\",{\"3\":{\"203\":1}}],[\"但此时还没指定库文件的目录\",{\"3\":{\"66\":1}}],[\"但不推荐在一个实际项目中使用命令行编译\",{\"3\":{\"57\":1}}],[\"但在运行时也就不再需要库文件了\",{\"3\":{\"55\":1}}],[\"用法稍后讲解\",{\"3\":{\"215\":1}}],[\"用来设置日志的输入格式\",{\"3\":{\"212\":1}}],[\"用来设置打印级别\",{\"3\":{\"210\":1,\"211\":1}}],[\"用来设置某一个包或者具体的某一个类的日志打印级别\",{\"3\":{\"210\":1}}],[\"用来指定受此logger约束的某一个包或者具体的某一个类\",{\"3\":{\"210\":1}}],[\"用来控制日志信息的输出\",{\"3\":{\"203\":1}}],[\"用户指南和示例没有其他依赖项\",{\"3\":{\"185\":1}}],[\"用户名=密码\",{\"3\":{\"33\":1}}],[\"用于完成servlet\",{\"3\":{\"235\":1}}],[\"用于封装tomcat对象\",{\"3\":{\"229\":1}}],[\"用于保存所有servletcontainerinitializer的实现类\",{\"3\":{\"233\":1}}],[\"用于保存catalina对象\",{\"3\":{\"225\":1}}],[\"用于保存bootstrap实例\",{\"3\":{\"225\":1}}],[\"用于配置不符合过滤条件的操作\",{\"3\":{\"222\":1}}],[\"用于配置符合过滤条件的操作\",{\"3\":{\"222\":1}}],[\"用于打开所有日志记录\",{\"3\":{\"203\":1}}],[\"用于关闭所有日志记录\",{\"3\":{\"203\":1}}],[\"用于处理或拦截channel的入站事件和出站操作\",{\"3\":{\"197\":1}}],[\"用于实现\",{\"3\":{\"184\":1}}],[\"用于快速开发可维护的高性能协议服务器和客户端\",{\"3\":{\"180\":1}}],[\"用于在不同的环节使用不同参数\",{\"3\":{\"73\":1}}],[\"用于查找和管理安装在系统上的库文件\",{\"3\":{\"57\":1}}],[\"以此类推最终所有元素的start方法会被执行\",{\"3\":{\"225\":1}}],[\"以此类推最终所有元素的init方法会被调用并且状态变成了lifecyclestate\",{\"3\":{\"225\":1}}],[\"以此类推\",{\"3\":{\"225\":2}}],[\"以及指定appender\",{\"3\":{\"210\":1}}],[\"以及channel中各个的channelhandler如何相互交互\",{\"3\":{\"197\":1}}],[\"以基准时间的形式\",{\"3\":{\"150\":1}}],[\"以\",{\"3\":{\"83\":1}}],[\"以target\",{\"3\":{\"68\":1}}],[\"以附件\",{\"3\":{\"63\":1,\"64\":1,\"65\":1}}],[\"以v3\",{\"3\":{\"60\":1}}],[\"以上只是非常简单的一个解释以区分动态链接库和静态链接库\",{\"3\":{\"55\":1}}],[\"以下图为例\",{\"3\":{\"55\":1}}],[\"以下面程序为例\",{\"3\":{\"54\":1}}],[\"共享\",{\"3\":{\"55\":1}}],[\"工厂类中会创建tomcat对象\",{\"3\":{\"229\":1}}],[\"工程a和b依赖动态链接库\",{\"3\":{\"55\":1}}],[\"工程a和b依赖静态链接库\",{\"3\":{\"55\":1}}],[\"工作业绩\",{\"0\":{\"4\":1,\"7\":1,\"10\":1,\"14\":1,\"17\":1,\"20\":1,\"23\":1},\"2\":{\"4\":1,\"7\":1,\"10\":1,\"14\":1,\"17\":1,\"20\":1,\"23\":1}}],[\"工作内容\",{\"0\":{\"3\":1,\"6\":1,\"9\":1,\"13\":1,\"16\":1,\"19\":1,\"22\":1},\"2\":{\"3\":1,\"6\":1,\"9\":1,\"13\":1,\"16\":1,\"19\":1,\"22\":1}}],[\"工作经历\",{\"0\":{\"1\":1},\"2\":{\"1\":1}}],[\"多个程序依赖它时\",{\"3\":{\"55\":1}}],[\"动态链接库和静态链接库都安装在lib\",{\"3\":{\"75\":1}}],[\"动态链接库加载后\",{\"3\":{\"55\":1}}],[\"动态库\",{\"3\":{\"75\":1}}],[\"动态库文件\",{\"3\":{\"67\":1}}],[\"动态库一般后缀名为\",{\"3\":{\"55\":1}}],[\"这次主要看servletcontextinitializer实例的传递过程\",{\"3\":{\"234\":1}}],[\"这次下这个方法\",{\"3\":{\"232\":1}}],[\"这个方法里没有任何servlet的添加操作\",{\"3\":{\"234\":1}}],[\"这个方法巨长无比\",{\"3\":{\"233\":1}}],[\"这个方法之前没根\",{\"3\":{\"232\":1}}],[\"这个类有很多方法\",{\"3\":{\"231\":1}}],[\"这个是最常用的\",{\"3\":{\"215\":1}}],[\"这个组里包含多个事件循环nioeventloop\",{\"3\":{\"199\":1}}],[\"这些接口会在tomcatservletwebserverfactory的构造器中被调用\",{\"3\":{\"229\":1}}],[\"这些注册的channel是否有已就绪的i\",{\"3\":{\"192\":1}}],[\"这些通道涵盖了udp和tcp网络io以及文件io\",{\"3\":{\"191\":1}}],[\"这是因为nio编程涉及到reactor模式\",{\"3\":{\"182\":1}}],[\"这种方式的好处是可以在idea中直接使用\",{\"3\":{\"143\":1}}],[\"这种方式的好处是可以在eclipse中直接使用\",{\"3\":{\"135\":1}}],[\"这里来配置servlet\",{\"3\":{\"235\":1}}],[\"这里可以看到servletcontext\",{\"3\":{\"235\":1}}],[\"这里可以知道容器最终把自己封装到了applicationcontext对象中\",{\"3\":{\"233\":1}}],[\"这里创建了dispatcherservlet类\",{\"3\":{\"235\":1}}],[\"这里做了依次封装\",{\"3\":{\"234\":1}}],[\"这里servletcontextinitializer实例被传入\",{\"3\":{\"234\":1}}],[\"这里将servletcontextinitializer实例传入到了tomcatservletwebserverfactory中\",{\"3\":{\"234\":1}}],[\"这里将上述的私有方法封装成了一个servletcontextinitializer实例\",{\"3\":{\"234\":1}}],[\"这里通过factory完成了webserver的创建\",{\"3\":{\"234\":1}}],[\"这里拿到容器中所有实现了servletcontextinitializer接口的bean并依次执行其onstartup方法\",{\"3\":{\"234\":1}}],[\"这里调用了onstartup方法\",{\"3\":{\"233\":1}}],[\"这里直接将其放入到了容器中\",{\"3\":{\"232\":1}}],[\"这里直接new对象了\",{\"3\":{\"226\":1}}],[\"这里就是内嵌tomcat的启动时机\",{\"3\":{\"229\":1}}],[\"这里就是调用了catalina对象的load方法\",{\"3\":{\"225\":1}}],[\"这里启动了tomcat\",{\"3\":{\"229\":1}}],[\"这里有一个状态变更即元素的state状态由lifecyclestate\",{\"3\":{\"225\":1}}],[\"这里会发生状态变更\",{\"3\":{\"225\":1}}],[\"这里会运行bootstrap的main方法\",{\"3\":{\"225\":1}}],[\"这里提到的每一个对象都有init方法和start方法\",{\"3\":{\"225\":1}}],[\"这里蕴含这一个设计模式值得一提\",{\"3\":{\"225\":1}}],[\"这里把catalina对象赋予了全局变量catalinadaemon\",{\"3\":{\"225\":1}}],[\"这里初始化了全局变量\",{\"3\":{\"225\":1}}],[\"这里\",{\"3\":{\"225\":1}}],[\"这里的路径都将添加$\",{\"3\":{\"75\":1}}],[\"这里我们用到add\",{\"3\":{\"65\":1,\"66\":1}}],[\"这样程序就可以很简单地使用一个线程高效地管理多个channel\",{\"3\":{\"192\":1}}],[\"这样也节省了内存的空间\",{\"3\":{\"55\":1}}],[\"这样可以节省系统的开销\",{\"3\":{\"55\":1}}],[\"这一步需要我们添加所有头文件的引用路径\",{\"3\":{\"54\":1}}],[\"而springmvc的核心类就是dispatcherservlet\",{\"3\":{\"235\":1}}],[\"而springboot项目中并没有web\",{\"3\":{\"231\":1}}],[\"而servletcontainerinitializer接口并不是spring的类\",{\"3\":{\"234\":1}}],[\"而是将servletcontext对象再次传给了servletcontextinitializer的实现类去完成后续工作\",{\"3\":{\"234\":1}}],[\"而是便利了initializers\",{\"3\":{\"234\":1}}],[\"而现在的启动类是容器\",{\"3\":{\"229\":1}}],[\"而channelpipeline中又维护了一个由channelhandlercontext组成的双向链表\",{\"3\":{\"197\":1}}],[\"而一个channel只对应于一个线程\",{\"3\":{\"194\":1}}],[\"而$<install\",{\"3\":{\"73\":1}}],[\"而不进行真正的链接\",{\"3\":{\"55\":1}}],[\"而动态链接库的链接发生在程序的执行过程中\",{\"3\":{\"55\":1}}],[\"其实原因很简单\",{\"3\":{\"234\":1}}],[\"其实与写javax\",{\"3\":{\"232\":1}}],[\"其实每个host对象还对应一组context对象也就是我们常说的servlet容器\",{\"3\":{\"225\":1}}],[\"其实就是对象属性的传递\",{\"3\":{\"68\":1}}],[\"其它两个模块的基础模块\",{\"3\":{\"203\":1}}],[\"其中新增servlet的就有3个重载方法\",{\"3\":{\"231\":1}}],[\"其中start是模板类的核心方法\",{\"3\":{\"225\":1}}],[\"其中boosgroup用于accetpt连接建立事件并分发请求\",{\"3\":{\"198\":1}}],[\"其中$<build\",{\"3\":{\"73\":1}}],[\"其中第一个参数是最终生成的可执行文件名以及在cmake中定义的target名\",{\"3\":{\"65\":1}}],[\"其中id\",{\"3\":{\"39\":1}}],[\"其他关键字都有参数\",{\"3\":{\"64\":1}}],[\"其在编译环节仅执行链接检查\",{\"3\":{\"55\":1}}],[\"其输出的库或可执行文件会将静态链接库\",{\"3\":{\"55\":1}}],[\"其链接发生在编译环节\",{\"3\":{\"55\":1}}],[\"其区别是链接的阶段不一样\",{\"3\":{\"55\":1}}],[\"合成一个可执行文件\",{\"3\":{\"54\":1}}],[\"检查完毕后把代码翻译成汇编语言文件\",{\"3\":{\"54\":1}}],[\"检查代码的规范性和语法错误等\",{\"3\":{\"54\":1}}],[\"检测分区\",{\"0\":{\"48\":1},\"2\":{\"48\":1}}],[\"第二个参数\",{\"3\":{\"74\":1}}],[\"第二个参数是用于指定链接库为动态链接库\",{\"3\":{\"66\":1}}],[\"第二步\",{\"3\":{\"54\":1,\"61\":1}}],[\"第一个c++程序\",{\"2\":{\"82\":1}}],[\"第一个c\",{\"0\":{\"82\":1}}],[\"第一个cmake例子\",{\"0\":{\"61\":1},\"2\":{\"61\":1}}],[\"第一个参数\",{\"3\":{\"74\":1}}],[\"第一个projectname\",{\"3\":{\"64\":1}}],[\"第一步\",{\"3\":{\"54\":1,\"61\":1}}],[\"第四步\",{\"3\":{\"54\":1}}],[\"第三步\",{\"3\":{\"54\":1}}],[\"递归处理\",{\"3\":{\"54\":1}}],[\"<>\",{\"3\":{\"238\":2}}],[\"<valve\",{\"3\":{\"238\":1}}],[\"<version>1\",{\"3\":{\"205\":1}}],[\"<version>3\",{\"3\":{\"178\":1,\"179\":2}}],[\"<version>2\",{\"3\":{\"176\":1,\"177\":1,\"179\":1}}],[\"<onmismatch>deny<\",{\"3\":{\"222\":1}}],[\"<onmismatch>\",{\"3\":{\"222\":1}}],[\"<onmatch>accept<\",{\"3\":{\"222\":1}}],[\"<onmatch>\",{\"3\":{\"222\":1}}],[\"<maxhistory>60<\",{\"3\":{\"219\":1}}],[\"<maxhistory>30<\",{\"3\":{\"218\":1}}],[\"<maxfilesize>25mb<\",{\"3\":{\"217\":1}}],[\"<maxfilesize>\",{\"3\":{\"217\":1}}],[\"<maxfilesize>5mb<\",{\"3\":{\"216\":1,\"219\":1}}],[\"<maxindex>3<\",{\"3\":{\"216\":1}}],[\"<minindex>1<\",{\"3\":{\"216\":1}}],[\"<totalsizecap>20gb<\",{\"3\":{\"219\":1}}],[\"<triggeringpolicy\",{\"3\":{\"215\":1,\"216\":1,\"217\":1}}],[\"<target>\",{\"3\":{\"213\":1}}],[\"<testfailureignore>true<\",{\"3\":{\"179\":1}}],[\"<teststatuslistener\",{\"3\":{\"145\":1}}],[\"<testrunlistener\",{\"3\":{\"137\":1}}],[\"<engine\",{\"3\":{\"238\":1}}],[\"<encoder>\",{\"3\":{\"213\":2,\"214\":2,\"215\":1,\"216\":1,\"218\":1,\"219\":1,\"221\":1,\"222\":1}}],[\"<encoder\",{\"3\":{\"212\":1}}],[\"<execution>\",{\"3\":{\"177\":1}}],[\"<executions>\",{\"3\":{\"177\":1}}],[\"<extensions\",{\"3\":{\"145\":1}}],[\"<extension\",{\"3\":{\"137\":1}}],[\"<level>\",{\"3\":{\"222\":1}}],[\"<level>info<\",{\"3\":{\"221\":1,\"222\":1}}],[\"<logger\",{\"3\":{\"208\":1,\"218\":1}}],[\"<lifecycle>\",{\"3\":{\"179\":1}}],[\"<lifecycles>\",{\"3\":{\"179\":1}}],[\"<libaryname>\",{\"3\":{\"76\":3}}],[\"<append>true<\",{\"3\":{\"214\":1}}],[\"<append>\",{\"3\":{\"214\":1,\"215\":1}}],[\"<appender>有多个过滤器时\",{\"3\":{\"220\":1}}],[\"<appender\",{\"3\":{\"208\":3,\"213\":2,\"214\":2,\"216\":2,\"218\":2,\"219\":1,\"221\":2,\"222\":2}}],[\"<artifactid>logback\",{\"3\":{\"205\":1}}],[\"<artifactid>maven\",{\"3\":{\"176\":1,\"177\":1,\"178\":1,\"179\":3}}],[\"<rollingpolicy\",{\"3\":{\"216\":1,\"218\":1,\"219\":1}}],[\"<rollingpolicy>\",{\"3\":{\"215\":1}}],[\"<root\",{\"3\":{\"208\":1,\"213\":1,\"214\":1,\"216\":1,\"221\":1,\"222\":1}}],[\"<redirecttestoutputtofile>true<\",{\"3\":{\"179\":2}}],[\"<reportformat>xml<\",{\"3\":{\"179\":1}}],[\"<reporting>\",{\"3\":{\"178\":2}}],[\"<reuseforks>false<\",{\"3\":{\"179\":1}}],[\"<dependency>\",{\"3\":{\"205\":1}}],[\"<conection\",{\"3\":{\"238\":1}}],[\"<configuration\",{\"3\":{\"213\":1}}],[\"<configuration>\",{\"3\":{\"179\":3,\"208\":1,\"214\":1,\"216\":1,\"221\":1,\"222\":1}}],[\"<charset>utf\",{\"3\":{\"212\":1,\"213\":1,\"218\":1,\"219\":1}}],[\"<custombundle>src\",{\"3\":{\"179\":1}}],[\"<filter\",{\"3\":{\"221\":1,\"222\":1}}],[\"<filter>\",{\"3\":{\"215\":1}}],[\"<filenamepattern>$\",{\"3\":{\"219\":1}}],[\"<filenamepattern>d\",{\"3\":{\"218\":1}}],[\"<filenamepattern>tests\",{\"3\":{\"216\":1}}],[\"<filename>\",{\"3\":{\"150\":3,\"151\":1}}],[\"<file>test\",{\"3\":{\"216\":1}}],[\"<file>testfile\",{\"3\":{\"214\":1}}],[\"<file>\",{\"3\":{\"54\":2,\"214\":1,\"215\":1}}],[\"<forkcount>1<\",{\"3\":{\"179\":1}}],[\"<groupid>ch\",{\"3\":{\"205\":1}}],[\"<groupid>org\",{\"3\":{\"176\":1,\"177\":1,\"178\":1,\"179\":3}}],[\"<goal>verify<\",{\"3\":{\"177\":1}}],[\"<goal>integration\",{\"3\":{\"177\":1}}],[\"<goals>\",{\"3\":{\"177\":1}}],[\"<build>\",{\"3\":{\"176\":1,\"177\":1}}],[\"<include\",{\"3\":{\"208\":4}}],[\"<included>\",{\"3\":{\"208\":1}}],[\"<id>test<\",{\"3\":{\"179\":1}}],[\"<id>surefire<\",{\"3\":{\"179\":1}}],[\"<i>\",{\"3\":{\"151\":1}}],[\"<iostream>\",{\"3\":{\"54\":1,\"81\":1,\"82\":1}}],[\"<numberofgclogfiles\",{\"3\":{\"151\":1}}],[\"<prudent>\",{\"3\":{\"214\":1,\"215\":1}}],[\"<property\",{\"3\":{\"208\":2,\"219\":1}}],[\"<project>\",{\"3\":{\"176\":1,\"177\":1,\"178\":1}}],[\"<pattern>\",{\"3\":{\"212\":1,\"213\":1,\"214\":1,\"216\":1,\"218\":1,\"219\":1,\"221\":1,\"222\":1}}],[\"<phase>\",{\"3\":{\"179\":1}}],[\"<phases>\",{\"3\":{\"179\":1}}],[\"<plugins>\",{\"3\":{\"176\":1,\"177\":1,\"178\":1}}],[\"<pluginmanagement>\",{\"3\":{\"176\":1}}],[\"<plugin>\",{\"3\":{\"137\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":3}}],[\"<p>\",{\"3\":{\"138\":1}}],[\"<\",{\"3\":{\"81\":1,\"137\":5,\"138\":1,\"145\":1,\"151\":1,\"176\":5,\"177\":7,\"178\":4,\"179\":10,\"205\":2,\"208\":8,\"212\":1,\"213\":7,\"214\":4,\"216\":7,\"217\":1,\"218\":4,\"219\":6,\"221\":7,\"222\":6,\"238\":1}}],[\"<<\",{\"3\":{\"54\":2,\"81\":2,\"82\":4}}],[\"链接了a\",{\"3\":{\"68\":3}}],[\"链接\",{\"3\":{\"54\":2,\"66\":1,\"67\":1,\"72\":1}}],[\"汇编\",{\"3\":{\"54\":2,\"72\":1}}],[\"取消挂载\",{\"3\":{\"50\":1}}],[\"编写一个find<libraryname>\",{\"3\":{\"76\":1}}],[\"编辑build\",{\"3\":{\"147\":1}}],[\"编辑plugin\",{\"3\":{\"145\":1}}],[\"编辑\",{\"3\":{\"50\":1}}],[\"编译器\",{\"3\":{\"81\":1}}],[\"编译动态库后\",{\"3\":{\"67\":1}}],[\"编译后目录如下\",{\"3\":{\"66\":1}}],[\"编译静态库后\",{\"3\":{\"66\":1}}],[\"编译\",{\"0\":{\"35\":1},\"2\":{\"35\":1},\"3\":{\"54\":2,\"72\":1,\"173\":1}}],[\"磁盘挂载\",{\"0\":{\"50\":1},\"2\":{\"50\":1}}],[\"磁盘分区与挂载\",{\"0\":{\"44\":1},\"2\":{\"44\":1}}],[\"^`\",{\"3\":{\"238\":4}}],[\"^\",{\"3\":{\"49\":1}}],[\"移动文件包含隐藏文件\",{\"3\":{\"49\":1}}],[\"移动文件\",{\"0\":{\"49\":1},\"2\":{\"49\":1}}],[\"kts添加如下代码\",{\"3\":{\"147\":1}}],[\"keepalive\",{\"3\":{\"198\":1}}],[\"keep\",{\"3\":{\"138\":1}}],[\"key文件登录\",{\"3\":{\"42\":1}}],[\"key\",{\"3\":{\"42\":2}}],[\"keys\",{\"3\":{\"40\":2}}],[\"keys文件中\",{\"3\":{\"40\":1}}],[\"keygen\",{\"3\":{\"39\":1}}],[\"ksh\",{\"3\":{\"111\":1,\"114\":1}}],[\"kind\",{\"3\":{\"81\":1}}],[\"kitware\",{\"3\":{\"60\":1}}],[\"k\",{\"3\":{\"46\":1,\"151\":2}}],[\"+usegclogfilerotation\",{\"2\":{\"152\":1},\"3\":{\"151\":2,\"152\":2,\"157\":1}}],[\"+printgcdatestamps\",{\"3\":{\"152\":1,\"157\":1}}],[\"+printgcdetails\",{\"3\":{\"150\":1,\"152\":1,\"157\":1}}],[\"+printgctimestamps\",{\"3\":{\"150\":1}}],[\"+=\",{\"3\":{\"79\":1,\"81\":1}}],[\"+\",{\"3\":{\"46\":2,\"197\":60,\"198\":5,\"229\":1,\"235\":2}}],[\"选择项目右键点击export\",{\"3\":{\"141\":1}}],[\"选择plug\",{\"3\":{\"136\":1}}],[\"选择p指令查看分区是否添加成功\",{\"3\":{\"46\":1}}],[\"选择q指令退出不保存配置\",{\"3\":{\"46\":1}}],[\"选择w指令保存配置\",{\"3\":{\"46\":1}}],[\"选择默认分区号\",{\"3\":{\"46\":1}}],[\"选择n指令进去新建分区模式\",{\"3\":{\"46\":1}}],[\"新版本解密算法\",{\"0\":{\"102\":1},\"2\":{\"102\":1}}],[\"新建分区\",{\"0\":{\"46\":1},\"2\":{\"46\":1}}],[\"新增远程仓库\",{\"3\":{\"25\":1}}],[\"5level表示级别从左显示5个字符宽度\",{\"3\":{\"212\":1}}],[\"5level\",{\"3\":{\"212\":1,\"213\":2,\"214\":1,\"216\":1,\"221\":1,\"222\":1}}],[\"5f8d07eb\",{\"0\":{\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1}}],[\"5d439e64\",{\"0\":{\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1}}],[\"500\",{\"3\":{\"238\":1}}],[\"500=\",{\"3\":{\"238\":1}}],[\"509\",{\"3\":{\"238\":1}}],[\"50\",{\"3\":{\"72\":1,\"212\":1}}],[\"513\",{\"3\":{\"238\":1}}],[\"51g\",{\"3\":{\"51\":1}}],[\"512\",{\"3\":{\"45\":4,\"46\":6}}],[\"59g\",{\"3\":{\"51\":1}}],[\"5g\",{\"3\":{\"51\":1}}],[\"5\",{\"0\":{\"67\":1,\"139\":1,\"147\":1,\"235\":1},\"2\":{\"67\":1,\"139\":1,\"147\":1,\"235\":1},\"3\":{\"47\":1,\"48\":2,\"51\":4,\"67\":3,\"79\":1,\"81\":1,\"110\":1,\"180\":1,\"185\":1,\"238\":13}}],[\"56155b0b\",{\"0\":{\"27\":1,\"28\":1,\"29\":1,\"30\":1}}],[\"则只保存最近6个月的文件\",{\"3\":{\"218\":1}}],[\"则必须用\",{\"3\":{\"212\":1}}],[\"则表示允许非io任务执行的时间与io任务的执行时间相等\",{\"3\":{\"193\":1}}],[\"则会安装到\",{\"3\":{\"75\":1}}],[\"则需要把\",{\"3\":{\"42\":1}}],[\"则ssh再发起登录的时候就会提示如下错误\",{\"3\":{\"42\":1}}],[\"需要三步\",{\"3\":{\"231\":1}}],[\"需要熟悉java多线程编程\",{\"3\":{\"182\":1}}],[\"需要debuger\",{\"3\":{\"81\":1}}],[\"需要在\",{\"3\":{\"81\":1}}],[\"需要注意的是\",{\"3\":{\"73\":1}}],[\"需要引入gflags\",{\"3\":{\"57\":1}}],[\"需要配置public\",{\"3\":{\"42\":1}}],[\"需要加上参数否则会报下面的错\",{\"3\":{\"31\":1}}],[\"$classpath\",{\"3\":{\"225\":1}}],[\"$catalina\",{\"3\":{\"225\":6}}],[\"$java\",{\"3\":{\"225\":2}}],[\"$logging\",{\"3\":{\"225\":1}}],[\"$registration\",{\"3\":{\"119\":1}}],[\"$nvm\",{\"3\":{\"113\":2,\"116\":3}}],[\"$gcc\",{\"3\":{\"81\":1}}],[\"$<install\",{\"3\":{\"73\":1}}],[\"$<build\",{\"3\":{\"73\":1}}],[\"$<config\",{\"3\":{\"73\":1}}],[\"$<condition\",{\"3\":{\"73\":1}}],[\"$<target\",{\"3\":{\"73\":3}}],[\"$<1\",{\"3\":{\"73\":1}}],[\"$<0\",{\"3\":{\"73\":1}}],[\"$<$<bool\",{\"3\":{\"73\":2}}],[\"$\",{\"3\":{\"42\":1,\"72\":7,\"73\":4,\"74\":2,\"77\":2,\"79\":1,\"81\":9,\"83\":10,\"110\":6,\"113\":4,\"178\":1,\"208\":4,\"225\":2}}],[\"修改\",{\"3\":{\"42\":1}}],[\"禁止ssh用户名密码登录\",{\"0\":{\"42\":1},\"2\":{\"42\":1}}],[\"~30000\",{\"3\":{\"179\":1}}],[\"~$\",{\"3\":{\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"51\":1}}],[\"~\",{\"3\":{\"40\":1,\"113\":5,\"114\":3,\"238\":2}}],[\"将servletcontext当入参传入其中\",{\"3\":{\"234\":1}}],[\"将容器放入host对象中\",{\"3\":{\"232\":1}}],[\"将实现类的全名称写入到配置文件中\",{\"3\":{\"231\":1}}],[\"将过滤器的日志级别配置为info\",{\"3\":{\"222\":1}}],[\"将日志记录到其他文件\",{\"3\":{\"215\":1}}],[\"将打印出logback内部日志信息\",{\"3\":{\"209\":1}}],[\"将会被重新加载\",{\"3\":{\"209\":1}}],[\"将反汇编风格设置为\",{\"3\":{\"81\":1}}],[\"将b链接到a\",{\"3\":{\"68\":1}}],[\"将前面生成的静态库libaccount\",{\"3\":{\"66\":1}}],[\"将目标代码与所依赖的库文件进行关联或者组装\",{\"3\":{\"54\":1}}],[\"将xx\",{\"3\":{\"54\":4}}],[\"将需要挂载的目录中的文件先移动出去\",{\"3\":{\"49\":1}}],[\"将公钥中的内容添加到linux用户目录下的\",{\"3\":{\"40\":1}}],[\"将公钥放入linux服务器\",{\"0\":{\"40\":1},\"2\":{\"40\":1}}],[\"将输出结果保存在指定的文件\",{\"3\":{\"33\":1}}],[\"xzzf\",{\"3\":{\"238\":1}}],[\"x需要jdk\",{\"3\":{\"180\":1}}],[\"x版本已经废弃\",{\"3\":{\"180\":1}}],[\"xloggc\",{\"3\":{\"150\":2,\"151\":1,\"152\":1,\"157\":1}}],[\"xxx\",{\"3\":{\"207\":1,\"208\":1}}],[\"xx\",{\"0\":{\"152\":1},\"2\":{\"152\":1},\"3\":{\"150\":5,\"151\":2,\"152\":6,\"153\":2,\"157\":3}}],[\"xdg\",{\"3\":{\"113\":2}}],[\"xml进行配置\",{\"3\":{\"238\":1}}],[\"xml也能加载servlet的方法\",{\"3\":{\"231\":1}}],[\"xml会将解析出来的servlet对象注册到容器中\",{\"3\":{\"231\":1}}],[\"xml内部可以配置很多servlet\",{\"3\":{\"231\":1}}],[\"xml完成servlet的注册\",{\"0\":{\"231\":1},\"2\":{\"231\":1}}],[\"xml的结构是一个4层嵌套的树状结构\",{\"3\":{\"225\":1}}],[\"xml生成\",{\"3\":{\"225\":1}}],[\"xml默认配置\",{\"0\":{\"208\":1},\"2\":{\"208\":1}}],[\"xml路径\",{\"3\":{\"207\":1}}],[\"xml指定路径\",{\"0\":{\"207\":1},\"2\":{\"207\":1}}],[\"xml文件一样javax\",{\"3\":{\"232\":1}}],[\"xml文件最终被解析成一个context对象\",{\"3\":{\"231\":1}}],[\"xml文件了\",{\"3\":{\"226\":1}}],[\"xml文件中体现的比较隐晦\",{\"3\":{\"225\":1}}],[\"xml文件内容如下\",{\"3\":{\"208\":1}}],[\"xml文件\",{\"3\":{\"206\":1,\"225\":1,\"226\":1,\"231\":1,\"236\":1}}],[\"xml配置\",{\"0\":{\"206\":1},\"2\":{\"206\":1}}],[\"xml中点击overview\",{\"3\":{\"140\":1}}],[\"xml中点击runtime\",{\"3\":{\"139\":1}}],[\"xml中添加如下代码\",{\"3\":{\"137\":1}}],[\"xml\",{\"3\":{\"87\":1,\"137\":2,\"145\":1,\"176\":2,\"177\":1,\"179\":2,\"206\":3,\"207\":2,\"208\":7,\"216\":1,\"225\":2}}],[\"x\",{\"3\":{\"86\":2,\"180\":1,\"185\":2,\"205\":9}}],[\"xphoto\",{\"3\":{\"77\":1}}],[\"xobjdetect\",{\"3\":{\"77\":1}}],[\"ximgproc\",{\"3\":{\"77\":1}}],[\"xvf\",{\"3\":{\"35\":1}}],[\"x86\",{\"3\":{\"31\":1}}],[\"yellow\",{\"3\":{\"212\":1}}],[\"years\",{\"3\":{\"162\":1}}],[\"yes\",{\"3\":{\"42\":2,\"71\":1}}],[\"yyyy\",{\"3\":{\"157\":1,\"212\":1,\"213\":1,\"218\":2,\"219\":2}}],[\"yarnpkg\",{\"3\":{\"117\":1}}],[\"yarn\",{\"1\":{\"117\":1,\"118\":1},\"3\":{\"109\":1,\"117\":4,\"118\":1}}],[\"your\",{\"3\":{\"108\":1,\"114\":2,\"154\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":1}}],[\"you\",{\"3\":{\"45\":2,\"46\":1,\"108\":1,\"110\":1,\"113\":2,\"114\":3,\"115\":5,\"118\":2,\"153\":3,\"154\":3,\"155\":1,\"156\":1,\"176\":1,\"177\":1,\"179\":1}}],[\"y\",{\"3\":{\"35\":2,\"37\":1,\"45\":1,\"60\":1,\"71\":1,\"85\":1,\"86\":1}}],[\"yum\",{\"3\":{\"35\":2}}],[\"yml\",{\"3\":{\"27\":2,\"29\":2}}],[\"恢复之前终端的扫描\",{\"3\":{\"33\":1}}],[\"z7\",{\"3\":{\"218\":1}}],[\"zshrc\",{\"3\":{\"113\":1,\"114\":1}}],[\"zsh\",{\"3\":{\"111\":1,\"114\":1}}],[\"zip<\",{\"3\":{\"216\":1}}],[\"zip\",{\"3\":{\"86\":3,\"216\":1}}],[\"zhihu\",{\"3\":{\"201\":1,\"223\":1}}],[\"zhuanlan\",{\"3\":{\"201\":1,\"223\":1}}],[\"zh\",{\"3\":{\"78\":1}}],[\"z\",{\"3\":{\"33\":1,\"113\":1}}],[\"错误调试等级\",{\"3\":{\"33\":1}}],[\"would\",{\"3\":{\"155\":1,\"179\":2}}],[\"workergroup用于处理i\",{\"3\":{\"198\":1}}],[\"workergroup\",{\"3\":{\"198\":2}}],[\"work\",{\"3\":{\"118\":1}}],[\"works\",{\"3\":{\"111\":1}}],[\"workspace\",{\"3\":{\"179\":7}}],[\"workspacerootfoldername\",{\"3\":{\"83\":1}}],[\"workspacefolder\",{\"3\":{\"81\":2,\"83\":1}}],[\"world时\",{\"3\":{\"57\":1}}],[\"world\",{\"3\":{\"54\":1,\"108\":1,\"136\":1}}],[\"what\",{\"3\":{\"179\":1}}],[\"why\",{\"3\":{\"179\":2}}],[\"whenever\",{\"3\":{\"152\":1}}],[\"when\",{\"3\":{\"138\":1,\"150\":1,\"151\":1,\"153\":1,\"179\":2}}],[\"whether\",{\"3\":{\"118\":1}}],[\"where\",{\"3\":{\"115\":1,\"151\":2}}],[\"which\",{\"3\":{\"115\":2,\"116\":1,\"150\":1,\"155\":1,\"157\":1,\"162\":1,\"179\":1}}],[\"wsl\",{\"3\":{\"111\":1}}],[\"webmvcproperties\",{\"3\":{\"235\":6}}],[\"webapplicationcontextutils\",{\"3\":{\"234\":1}}],[\"web\",{\"3\":{\"228\":1,\"229\":1,\"231\":1,\"234\":1}}],[\"webserverfactorycustomizer<configurabletomcatwebserverfactory>\",{\"3\":{\"238\":1}}],[\"webserverexception\",{\"3\":{\"229\":1}}],[\"webserverstartstoplifecycle\",{\"3\":{\"228\":1}}],[\"webserverstartstop\",{\"3\":{\"228\":1}}],[\"webservergracefulshutdownlifecycle\",{\"3\":{\"228\":1}}],[\"webservergracefulshutdown\",{\"3\":{\"228\":1}}],[\"webserver\",{\"3\":{\"228\":8,\"229\":2,\"234\":6}}],[\"websocket等一系列常见协议都支持\",{\"3\":{\"187\":1}}],[\"website\",{\"3\":{\"88\":1,\"108\":2}}],[\"were\",{\"3\":{\"179\":3}}],[\"well\",{\"3\":{\"108\":1}}],[\"welcome\",{\"3\":{\"45\":1,\"46\":1}}],[\"we\",{\"3\":{\"87\":1,\"118\":1,\"157\":1,\"179\":7}}],[\"wget\",{\"3\":{\"86\":2,\"113\":2}}],[\"waylau\",{\"3\":{\"200\":2}}],[\"warn\",{\"3\":{\"210\":1,\"211\":1}}],[\"warning\",{\"3\":{\"87\":1,\"151\":3}}],[\"warm\",{\"3\":{\"203\":1}}],[\"war\",{\"0\":{\"168\":1},\"2\":{\"168\":1}}],[\"was\",{\"3\":{\"115\":1,\"157\":1,\"179\":2,\"235\":2}}],[\"wall\",{\"3\":{\"81\":1}}],[\"want\",{\"3\":{\"45\":1,\"155\":1,\"176\":1}}],[\"www\",{\"3\":{\"78\":1}}],[\"written\",{\"3\":{\"151\":2,\"153\":2,\"154\":1,\"155\":2}}],[\"writing\",{\"3\":{\"47\":2}}],[\"write事件\",{\"3\":{\"199\":2}}],[\"write等\",{\"3\":{\"193\":1}}],[\"write\",{\"3\":{\"45\":3,\"46\":3,\"151\":1,\"197\":3}}],[\"windows\",{\"0\":{\"127\":1},\"2\":{\"127\":1},\"3\":{\"111\":1}}],[\"wide\",{\"3\":{\"87\":1}}],[\"will\",{\"3\":{\"45\":3,\"46\":2,\"87\":2,\"115\":1,\"116\":1,\"136\":1,\"150\":2,\"151\":2,\"152\":2,\"153\":7,\"154\":2,\"156\":1,\"157\":3,\"238\":1}}],[\"without\",{\"3\":{\"179\":3}}],[\"with中选择\",{\"3\":{\"136\":1}}],[\"with\",{\"0\":{\"85\":1},\"2\":{\"85\":1},\"3\":{\"42\":1,\"47\":1,\"86\":1,\"87\":4,\"108\":1,\"115\":3,\"116\":1,\"151\":1,\"152\":1,\"154\":1,\"155\":1,\"157\":1,\"179\":9,\"208\":1,\"229\":1}}],[\"w表示保存配置等\",{\"3\":{\"45\":1}}],[\"w\",{\"3\":{\"33\":1,\"46\":1,\"151\":2}}],[\"显示版本信息\",{\"3\":{\"33\":1}}],[\"显示模块的使用信息\",{\"3\":{\"33\":1}}],[\"显示所有本地仓库\",{\"3\":{\"25\":1}}],[\"显示所有远程仓库\",{\"3\":{\"25\":1}}],[\"qos\",{\"3\":{\"203\":1,\"205\":1,\"212\":1,\"213\":1,\"214\":1,\"216\":3,\"217\":1,\"218\":2,\"219\":2,\"221\":2,\"222\":2,\"223\":1}}],[\"qo\",{\"3\":{\"113\":1}}],[\"qsv文件提取\",{\"1\":{\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1}}],[\"qsv文件\",{\"1\":{\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1}}],[\"question\",{\"3\":{\"179\":4,\"238\":1}}],[\"query\",{\"3\":{\"73\":4}}],[\"quickly\",{\"3\":{\"110\":1}}],[\"quick\",{\"0\":{\"84\":1},\"2\":{\"84\":1}}],[\"quite\",{\"3\":{\"179\":1}}],[\"quit\",{\"3\":{\"45\":1}}],[\"quality\",{\"3\":{\"77\":1}}],[\"q表示退出\",{\"3\":{\"45\":1}}],[\"q\",{\"3\":{\"33\":1}}],[\"不像catalina那样需要解析server\",{\"3\":{\"226\":1}}],[\"不再经过剩余过滤器\",{\"3\":{\"220\":1}}],[\"不支持也不允许文件压缩\",{\"3\":{\"215\":1}}],[\"不支持fixedwindowrollingpolicy\",{\"3\":{\"215\":1}}],[\"不能设置file属性\",{\"3\":{\"215\":1}}],[\"不能设置为inherited或者同义词null\",{\"3\":{\"211\":1}}],[\"不能立刻得知消息是否被正确处理\",{\"3\":{\"190\":1}}],[\"不是具体的日志解决方案\",{\"3\":{\"202\":1}}],[\"不同的阻塞类型的连接都有不同的channel类型与之对应\",{\"3\":{\"191\":1}}],[\"不同协议\",{\"3\":{\"191\":1}}],[\"不断更新\",{\"3\":{\"185\":1}}],[\"不需要额外的配置\",{\"3\":{\"135\":1,\"143\":1}}],[\"不需要参数\",{\"3\":{\"64\":1}}],[\"不挂载gpu\",{\"3\":{\"78\":1}}],[\"不给别人抽\",{\"3\":{\"68\":1}}],[\"不区分大小写\",{\"3\":{\"63\":1}}],[\"不区分大小写的\",{\"3\":{\"63\":1}}],[\"不会重复加载和拷贝\",{\"3\":{\"55\":1}}],[\"不格式化不能对分区进行挂载\",{\"3\":{\"47\":1}}],[\"不显示软件启动时候的版本信息\",{\"3\":{\"33\":1}}],[\"不带后缀\",{\"3\":{\"81\":2,\"83\":1}}],[\"不带\",{\"3\":{\"33\":1}}],[\"在执行其startinternal方法是会调用servletcontainerinitializer的实现类的onstartup方法并将容器对象的装饰类applicationcontext当作入参传入onstartup方法\",{\"3\":{\"233\":1}}],[\"在context对象创建好后直接调用其addservletcontainerinitializer方法将servletcontainerinitializer的实现类传进去\",{\"3\":{\"232\":1}}],[\"在cmakelists\",{\"3\":{\"64\":1}}],[\"在\",{\"3\":{\"231\":1}}],[\"在server的start方法被调用后需要执行其下每个service对象的init方法和start方法\",{\"3\":{\"225\":1}}],[\"在application\",{\"3\":{\"207\":1}}],[\"在niosocketchannel可读\",{\"3\":{\"199\":1}}],[\"在netty中每个channel都有且仅有一个channelpipeline与之对应\",{\"3\":{\"197\":1}}],[\"在netty中所有的io操作都是异步的\",{\"3\":{\"190\":1}}],[\"在分布式系统中\",{\"3\":{\"184\":1}}],[\"在我们日常的maven使用中\",{\"3\":{\"173\":1}}],[\"在大量项目的构建过程中\",{\"3\":{\"173\":1}}],[\"在<extensions\",{\"3\":{\"145\":1}}],[\"在idea中\",{\"3\":{\"143\":1}}],[\"在plugin\",{\"3\":{\"139\":1,\"140\":1}}],[\"在project中\",{\"3\":{\"64\":1}}],[\"在eclipse中\",{\"3\":{\"135\":1,\"136\":1}}],[\"在其最一般的形式中\",{\"3\":{\"73\":1}}],[\"在主流平台上自动生成文件依赖项并支持并行构建\",{\"3\":{\"58\":1}}],[\"在实际工作中推荐使用cmake构建c++项目\",{\"3\":{\"58\":1}}],[\"在内存中仅保存一份拷贝\",{\"3\":{\"55\":1}}],[\"在预处理阶段\",{\"3\":{\"54\":1}}],[\"在本地windows上生成公钥私钥对\",{\"0\":{\"39\":1},\"2\":{\"39\":1}}],[\"在任何竹主机上面破解得到第一个用户名或面后停止扫描\",{\"3\":{\"33\":1}}],[\"在破解得到第一个用户名或者密码后停止扫描主机\",{\"3\":{\"33\":1}}],[\"默认格式是yyyy\",{\"3\":{\"218\":1}}],[\"默认system\",{\"3\":{\"213\":1}}],[\"默认是false\",{\"3\":{\"214\":1}}],[\"默认是debug\",{\"3\":{\"211\":1}}],[\"默认是true\",{\"3\":{\"210\":1,\"214\":1,\"215\":1}}],[\"默认的时间间隔为1分钟\",{\"3\":{\"209\":1}}],[\"默认单位是毫秒\",{\"3\":{\"209\":1}}],[\"默认值是10mb\",{\"3\":{\"217\":1}}],[\"默认值为false\",{\"3\":{\"209\":1}}],[\"默认值为true\",{\"3\":{\"209\":1}}],[\"默认值3\",{\"3\":{\"33\":2}}],[\"默认情况下\",{\"3\":{\"203\":1}}],[\"默认为50\",{\"3\":{\"193\":1}}],[\"默认采用netty进行跨界点通信\",{\"3\":{\"184\":1}}],[\"默认密码admin\",{\"3\":{\"27\":1}}],[\"查看runner配置文件\",{\"0\":{\"121\":1},\"2\":{\"121\":1}}],[\"查看runner命令\",{\"0\":{\"120\":1},\"2\":{\"120\":1}}],[\"查看所有目标\",{\"3\":{\"72\":1}}],[\"查看所有分支\",{\"3\":{\"25\":1}}],[\"查看挂载\",{\"0\":{\"51\":1},\"2\":{\"51\":1}}],[\"查看隐藏文件\",{\"3\":{\"49\":1}}],[\"查看空闲磁盘空间\",{\"0\":{\"45\":1},\"2\":{\"45\":1}}],[\"查看支持破解的模块\",{\"3\":{\"33\":1}}],[\"制定执行的模块\",{\"3\":{\"33\":1}}],[\"额外的密码检测\",{\"3\":{\"33\":1}}],[\"目前patternlayoutencoder\",{\"3\":{\"212\":1}}],[\"目标查询\",{\"3\":{\"73\":2}}],[\"目标ip地址\",{\"3\":{\"33\":1}}],[\"目录下\",{\"3\":{\"75\":1}}],[\"目录\",{\"0\":{\"24\":1,\"52\":1,\"132\":1},\"2\":{\"24\":1,\"52\":1,\"132\":1}}],[\"`pkg\",{\"3\":{\"57\":1}}],[\"`config\",{\"3\":{\"31\":1}}],[\"`job=<job\",{\"3\":{\"29\":1}}],[\"jbossmc\",{\"3\":{\"187\":1}}],[\"jre\",{\"3\":{\"179\":2}}],[\"jdk\",{\"3\":{\"185\":1}}],[\"jdk8u312\",{\"3\":{\"179\":2}}],[\"jdt\",{\"3\":{\"137\":1}}],[\"jenkins\",{\"3\":{\"179\":8}}],[\"jar中errorreportvalve\",{\"3\":{\"238\":1}}],[\"jar\",{\"0\":{\"165\":1},\"2\":{\"165\":1},\"3\":{\"179\":4,\"205\":3,\"207\":2,\"208\":1,\"238\":13}}],[\"java语言得到了越来越广泛的应用\",{\"3\":{\"184\":1}}],[\"java\",{\"3\":{\"162\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":8,\"202\":1,\"207\":1,\"208\":1,\"218\":1,\"225\":1,\"238\":19}}],[\"javascript\",{\"3\":{\"108\":1}}],[\"jacoco\",{\"1\":{\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1},\"3\":{\"162\":1}}],[\"jvmrun1\",{\"3\":{\"179\":2}}],[\"jvmrun\",{\"3\":{\"179\":1}}],[\"jvm\",{\"3\":{\"151\":3,\"152\":2,\"157\":1,\"179\":1}}],[\"jio\",{\"3\":{\"151\":5}}],[\"junitteststatuslistener\",{\"3\":{\"145\":1,\"146\":1}}],[\"junittestrunlistener\",{\"3\":{\"137\":1,\"138\":1}}],[\"junit\",{\"1\":{\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1},\"3\":{\"133\":1,\"137\":3,\"145\":1}}],[\"just\",{\"3\":{\"115\":2,\"156\":1,\"179\":2}}],[\"justmycode\",{\"3\":{\"79\":1,\"81\":1}}],[\"js\",{\"3\":{\"111\":1,\"115\":1,\"116\":1}}],[\"json字符串\",{\"0\":{\"92\":1},\"2\":{\"92\":1}}],[\"json的label\",{\"3\":{\"81\":1}}],[\"json修改为\",{\"3\":{\"81\":1}}],[\"json\",{\"3\":{\"81\":1,\"83\":5}}],[\"json添加\",{\"3\":{\"79\":1}}],[\"j4\",{\"3\":{\"86\":1}}],[\"j8\",{\"3\":{\"86\":1}}],[\"jpg\",{\"3\":{\"54\":1,\"55\":1}}],[\"journal\",{\"3\":{\"47\":1}}],[\"jobs\",{\"3\":{\"86\":2,\"179\":1}}],[\"job\",{\"3\":{\"29\":4,\"179\":1}}],[\"j\",{\"3\":{\"31\":1,\"35\":1}}],[\"748\",{\"3\":{\"238\":1}}],[\"7420a911\",{\"0\":{\"174\":1,\"175\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":1}}],[\"7230\",{\"3\":{\"238\":2}}],[\"727d1ccd\",{\"0\":{\"224\":1,\"225\":1,\"226\":1,\"227\":1,\"228\":1,\"229\":1,\"230\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1}}],[\"7版本依然没得到根本性的解决\",{\"3\":{\"182\":1}}],[\"76\",{\"3\":{\"238\":13}}],[\"76945eec\",{\"0\":{\"163\":1,\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1}}],[\"76fa89e8\",{\"0\":{\"31\":1,\"32\":1,\"33\":1,\"34\":1}}],[\"7bb63861\",{\"0\":{\"108\":1,\"109\":1}}],[\"7962624\",{\"3\":{\"47\":1}}],[\"71fe7d8e\",{\"3\":{\"47\":1}}],[\"7\",{\"0\":{\"69\":1,\"141\":1,\"149\":1,\"221\":1,\"222\":1},\"2\":{\"69\":1,\"141\":1,\"149\":1,\"221\":1,\"222\":1},\"3\":{\"35\":1,\"51\":2,\"69\":1,\"115\":2,\"179\":1}}],[\"7890\",{\"3\":{\"26\":2,\"43\":2}}],[\"监控mysql\",{\"0\":{\"30\":1},\"2\":{\"30\":1}}],[\"监控linux\",{\"0\":{\"28\":1},\"2\":{\"28\":1}}],[\"illegalargumentexception\",{\"3\":{\"238\":1}}],[\"ignore\",{\"3\":{\"179\":1}}],[\"ignorefailures\",{\"3\":{\"81\":2}}],[\"impl\",{\"3\":{\"151\":1}}],[\"implements\",{\"3\":{\"225\":1,\"228\":1,\"229\":2,\"232\":1,\"233\":1,\"234\":3,\"235\":1,\"238\":2}}],[\"implementation\",{\"3\":{\"147\":1,\"197\":1}}],[\"implementation=\",{\"3\":{\"145\":1}}],[\"implementor\",{\"3\":{\"138\":1}}],[\"important\",{\"3\":{\"138\":1}}],[\"img\",{\"3\":{\"77\":1}}],[\"imgproc\",{\"3\":{\"77\":1}}],[\"imgcodecs\",{\"3\":{\"77\":1}}],[\"imgcompile\",{\"3\":{\"54\":1}}],[\"img20230122221807\",{\"3\":{\"55\":1}}],[\"ioexception\",{\"3\":{\"238\":2}}],[\"iotools\",{\"3\":{\"238\":1}}],[\"io\",{\"3\":{\"115\":1,\"116\":1,\"185\":1,\"208\":1,\"225\":1}}],[\"iojs\",{\"3\":{\"115\":1,\"116\":7}}],[\"i++\",{\"3\":{\"81\":1}}],[\"i文件编译为xx\",{\"3\":{\"54\":1}}],[\"i文件\",{\"3\":{\"54\":1}}],[\"ifavailable\",{\"3\":{\"235\":1}}],[\"if\",{\"3\":{\"54\":1,\"71\":2,\"72\":1,\"114\":1,\"151\":12,\"155\":2,\"179\":4,\"198\":1,\"206\":3,\"225\":6,\"226\":3,\"228\":2,\"229\":1,\"232\":1,\"233\":2,\"234\":1,\"235\":5,\"238\":2}}],[\"i\",{\"3\":{\"46\":1,\"54\":2,\"72\":3,\"79\":2,\"81\":3,\"151\":1,\"179\":4,\"185\":1,\"193\":1,\"197\":4,\"199\":1,\"216\":5,\"219\":1}}],[\"i参数指定private\",{\"3\":{\"42\":1}}],[\"id>\",{\"3\":{\"179\":2}}],[\"ides\",{\"3\":{\"116\":1}}],[\"ideabuildplugin\",{\"3\":{\"149\":1}}],[\"ideaproject\",{\"3\":{\"144\":1}}],[\"idea插件\",{\"0\":{\"142\":1},\"2\":{\"142\":1}}],[\"idea\",{\"3\":{\"45\":1,\"46\":1,\"145\":1}}],[\"identifier\",{\"3\":{\"46\":1}}],[\"identified\",{\"3\":{\"30\":1}}],[\"identityfile\",{\"3\":{\"41\":1}}],[\"id\",{\"3\":{\"39\":1,\"41\":1}}],[\"inputstream\",{\"3\":{\"238\":1}}],[\"initparameters\",{\"3\":{\"234\":1}}],[\"initpropertysources\",{\"3\":{\"228\":1}}],[\"initbasedir\",{\"3\":{\"226\":1}}],[\"initfail\",{\"3\":{\"225\":1}}],[\"initinternal\",{\"3\":{\"225\":2,\"233\":1}}],[\"initializer\",{\"3\":{\"234\":2}}],[\"initializerstouse\",{\"3\":{\"229\":1,\"232\":2,\"234\":2}}],[\"initializers\",{\"3\":{\"229\":5,\"232\":4,\"233\":3,\"234\":14}}],[\"initialize\",{\"3\":{\"228\":1,\"229\":2}}],[\"initialized\",{\"3\":{\"225\":2,\"229\":1}}],[\"initializewithconventions\",{\"3\":{\"206\":1}}],[\"initializing防止在start方法中再次执行init方法\",{\"3\":{\"225\":1}}],[\"initializing\",{\"3\":{\"225\":2}}],[\"initialization\",{\"3\":{\"206\":1,\"229\":1}}],[\"initializationcontext\",{\"3\":{\"206\":4}}],[\"init方法不会执行\",{\"3\":{\"225\":1}}],[\"init方法\",{\"3\":{\"225\":1}}],[\"init\",{\"3\":{\"225\":7}}],[\"initchannel\",{\"3\":{\"198\":1}}],[\"inbound\",{\"3\":{\"197\":4}}],[\"individual\",{\"3\":{\"179\":1}}],[\"invalid\",{\"3\":{\"238\":1}}],[\"invalidtransition\",{\"3\":{\"225\":1}}],[\"invokeunchecked\",{\"3\":{\"238\":1}}],[\"invoker$2\",{\"3\":{\"238\":1}}],[\"invoker\",{\"3\":{\"238\":3}}],[\"invoke\",{\"3\":{\"225\":2}}],[\"invoked\",{\"3\":{\"111\":1,\"176\":1,\"177\":1}}],[\"investigation\",{\"3\":{\"179\":1}}],[\"including\",{\"3\":{\"154\":1}}],[\"included>\",{\"3\":{\"208\":1}}],[\"includedir\",{\"3\":{\"73\":2}}],[\"includes\",{\"3\":{\"88\":1}}],[\"include引入其他代码\",{\"0\":{\"70\":1},\"2\":{\"70\":1}}],[\"include\",{\"3\":{\"54\":2,\"66\":3,\"67\":1,\"70\":1,\"73\":1,\"75\":1,\"76\":1,\"77\":4,\"81\":1,\"82\":1,\"87\":1,\"238\":4}}],[\"instanceof\",{\"3\":{\"229\":1}}],[\"installs\",{\"3\":{\"115\":2}}],[\"installed\",{\"3\":{\"87\":1,\"111\":1,\"115\":3}}],[\"installing\",{\"0\":{\"112\":1},\"2\":{\"112\":1},\"3\":{\"87\":1}}],[\"installation\",{\"0\":{\"126\":1,\"127\":1,\"128\":1,\"129\":1},\"2\":{\"126\":1,\"127\":1,\"128\":1,\"129\":1},\"3\":{\"87\":5}}],[\"install\",{\"0\":{\"87\":1,\"113\":1},\"2\":{\"87\":1,\"113\":1},\"3\":{\"31\":1,\"35\":3,\"37\":1,\"57\":2,\"60\":2,\"73\":2,\"75\":4,\"76\":1,\"77\":1,\"80\":4,\"85\":1,\"86\":2,\"87\":6,\"109\":2,\"110\":2,\"113\":4,\"114\":1,\"115\":5,\"116\":4,\"117\":2}}],[\"instead\",{\"3\":{\"156\":1}}],[\"ins\",{\"3\":{\"141\":1}}],[\"inf\",{\"3\":{\"231\":1}}],[\"info\",{\"3\":{\"203\":1,\"208\":1,\"210\":1,\"211\":1,\"218\":1,\"229\":1,\"235\":2,\"238\":1}}],[\"information\",{\"3\":{\"31\":1,\"47\":1,\"48\":1,\"108\":1}}],[\"infinite\",{\"3\":{\"86\":1}}],[\"intro\",{\"0\":{\"110\":1},\"2\":{\"110\":1}}],[\"integration\",{\"3\":{\"162\":1}}],[\"integrate\",{\"3\":{\"87\":1}}],[\"integratedterminal\",{\"3\":{\"79\":1,\"81\":1}}],[\"intellij\",{\"3\":{\"145\":2}}],[\"intellisense\",{\"3\":{\"79\":1,\"81\":1}}],[\"intel\",{\"3\":{\"81\":2}}],[\"internal\",{\"3\":{\"197\":1}}],[\"internationalization\",{\"3\":{\"179\":1}}],[\"interruption\",{\"3\":{\"179\":1}}],[\"interact\",{\"3\":{\"108\":1}}],[\"interface关键字来控制传播\",{\"3\":{\"68\":1}}],[\"interface\",{\"0\":{\"68\":1},\"2\":{\"68\":1},\"3\":{\"68\":2,\"73\":4,\"108\":1,\"231\":1}}],[\"interval\",{\"3\":{\"29\":4}}],[\"int\",{\"3\":{\"54\":1,\"81\":3,\"82\":2,\"151\":1,\"198\":1,\"238\":1}}],[\"into\",{\"3\":{\"54\":1,\"87\":1,\"179\":2}}],[\"inode\",{\"3\":{\"47\":1}}],[\"inodes\",{\"3\":{\"47\":1,\"48\":1}}],[\"in\",{\"3\":{\"45\":2,\"46\":2,\"79\":1,\"87\":1,\"111\":1,\"115\":4,\"116\":1,\"136\":4,\"140\":1,\"141\":1,\"151\":2,\"153\":3,\"154\":1,\"155\":2,\"157\":1,\"174\":1,\"176\":2,\"177\":1,\"178\":3,\"179\":5,\"206\":1,\"238\":4}}],[\"itstack\",{\"3\":{\"200\":2}}],[\"its\",{\"3\":{\"151\":1,\"152\":1,\"178\":1,\"179\":1}}],[\"itself\",{\"3\":{\"29\":1}}],[\"itestrunsession\",{\"3\":{\"138\":1}}],[\"it\",{\"3\":{\"29\":1,\"45\":1,\"46\":1,\"108\":1,\"113\":1,\"115\":2,\"151\":1,\"152\":1,\"153\":1,\"155\":1,\"157\":1,\"179\":3}}],[\"isempty\",{\"3\":{\"235\":1}}],[\"isenabled\",{\"3\":{\"235\":1}}],[\"issuccess\",{\"3\":{\"198\":1}}],[\"issue\",{\"3\":{\"179\":4}}],[\"isdefault\",{\"3\":{\"81\":1}}],[\"is\",{\"3\":{\"29\":4,\"45\":2,\"46\":2,\"72\":1,\"87\":1,\"88\":1,\"108\":3,\"111\":1,\"115\":3,\"116\":1,\"118\":1,\"138\":1,\"151\":6,\"155\":1,\"162\":1,\"174\":2,\"176\":1,\"179\":11,\"238\":2}}],[\"m5\",{\"3\":{\"179\":1}}],[\"mm\",{\"3\":{\"157\":2,\"212\":2,\"213\":2,\"218\":4,\"219\":3}}],[\"multipartconfig\",{\"3\":{\"235\":4}}],[\"multiple\",{\"3\":{\"116\":1,\"156\":1}}],[\"much\",{\"3\":{\"179\":1}}],[\"mutex\",{\"3\":{\"151\":2}}],[\"must\",{\"3\":{\"138\":1,\"150\":2,\"151\":1,\"229\":1}}],[\"msg是日志消息\",{\"3\":{\"212\":1}}],[\"msg\",{\"3\":{\"151\":5,\"212\":1,\"213\":2,\"214\":1,\"216\":1,\"218\":1,\"219\":1,\"221\":1,\"222\":1}}],[\"ms\",{\"3\":{\"78\":6}}],[\"ml\",{\"3\":{\"77\":1}}],[\"mvn\",{\"3\":{\"173\":2,\"176\":1,\"177\":1,\"178\":2,\"179\":1}}],[\"mv\",{\"3\":{\"49\":1}}],[\"mkdir\",{\"3\":{\"86\":1}}],[\"mke2fs\",{\"3\":{\"47\":1}}],[\"mkfs\",{\"3\":{\"47\":1}}],[\"m表示帮助\",{\"3\":{\"45\":1}}],[\"missing\",{\"3\":{\"179\":1}}],[\"mismatch\",{\"3\":{\"45\":1,\"46\":1}}],[\"might\",{\"3\":{\"154\":1}}],[\"mitigate\",{\"3\":{\"154\":1}}],[\"mixed\",{\"0\":{\"154\":1},\"2\":{\"154\":1},\"3\":{\"154\":1}}],[\"mirrors\",{\"3\":{\"116\":2}}],[\"mirror=https\",{\"3\":{\"116\":4}}],[\"mirror\",{\"0\":{\"116\":1},\"2\":{\"116\":1},\"3\":{\"116\":4}}],[\"mimode\",{\"3\":{\"81\":1}}],[\"minindex>\",{\"3\":{\"216\":1}}],[\"minindex\",{\"3\":{\"216\":1}}],[\"minimal\",{\"3\":{\"86\":1}}],[\"minimum\",{\"3\":{\"46\":1,\"63\":3,\"66\":2,\"67\":1,\"151\":1}}],[\"minor\",{\"3\":{\"87\":1}}],[\"minute\",{\"3\":{\"29\":2}}],[\"microsoft\",{\"3\":{\"79\":1,\"81\":1}}],[\"mic\",{\"3\":{\"42\":1}}],[\"monitor\",{\"3\":{\"229\":1}}],[\"monorepos\",{\"3\":{\"118\":1}}],[\"move\",{\"3\":{\"154\":1}}],[\"most\",{\"3\":{\"108\":1,\"153\":1,\"155\":1}}],[\"mounted\",{\"3\":{\"51\":1}}],[\"mount\",{\"3\":{\"50\":1}}],[\"module\",{\"3\":{\"179\":2}}],[\"modules\",{\"0\":{\"86\":1},\"2\":{\"86\":1}}],[\"mode\",{\"3\":{\"140\":1}}],[\"model\",{\"3\":{\"46\":1}}],[\"mod扩展名\",{\"3\":{\"33\":1}}],[\"more\",{\"3\":{\"31\":1,\"153\":1,\"176\":1,\"177\":1,\"178\":1}}],[\"m\",{\"3\":{\"32\":4,\"33\":2,\"45\":2,\"46\":4,\"197\":2}}],[\"mergedinitializers\",{\"3\":{\"234\":6}}],[\"mergeinitializers\",{\"3\":{\"232\":1,\"234\":2}}],[\"means\",{\"3\":{\"153\":1}}],[\"meta\",{\"3\":{\"108\":1,\"231\":1}}],[\"methodname\",{\"3\":{\"225\":2}}],[\"method\",{\"3\":{\"87\":1,\"138\":2,\"197\":2,\"225\":7}}],[\"metrics\",{\"3\":{\"28\":1,\"29\":2,\"30\":1}}],[\"message=never\",{\"3\":{\"238\":1}}],[\"message\",{\"3\":{\"69\":1,\"74\":2,\"77\":2}}],[\"memory\",{\"3\":{\"45\":1,\"46\":1}}],[\"medusa命令详解\",{\"0\":{\"33\":1},\"2\":{\"33\":1}}],[\"medusa暴力破解ssh\",{\"0\":{\"32\":1},\"2\":{\"32\":1}}],[\"medusa\",{\"1\":{\"31\":1,\"32\":1,\"33\":1,\"34\":1},\"3\":{\"32\":4,\"33\":25}}],[\"medusa编译\",{\"0\":{\"31\":1},\"2\":{\"31\":1}}],[\"mytomcatconnectorcustomizer\",{\"3\":{\"238\":1}}],[\"mytomcatwebserverfactorycustomizer\",{\"3\":{\"238\":2}}],[\"mylog\",{\"3\":{\"216\":2,\"219\":1}}],[\"mysqld\",{\"3\":{\"30\":3}}],[\"mysql\",{\"3\":{\"29\":1}}],[\"my\",{\"3\":{\"29\":1,\"30\":1,\"74\":2}}],[\"mappings\",{\"3\":{\"235\":1}}],[\"mapping\",{\"3\":{\"235\":1}}],[\"mapping的配置\",{\"3\":{\"235\":1}}],[\"mapper\",{\"3\":{\"51\":1}}],[\"map\",{\"3\":{\"233\":1}}],[\"map<servletcontainerinitializer\",{\"3\":{\"233\":1}}],[\"magenta\",{\"3\":{\"212\":1}}],[\"maven总结出了一套高度完善的\",{\"3\":{\"173\":1}}],[\"maven的生命周期就是为了对所有的构建过程进行抽象和统一\",{\"3\":{\"173\":1}}],[\"maven\",{\"0\":{\"167\":1,\"174\":1,\"176\":1,\"177\":1,\"178\":1},\"2\":{\"167\":1,\"174\":1,\"176\":1,\"177\":1,\"178\":1},\"3\":{\"174\":1,\"175\":3,\"176\":1,\"177\":1,\"178\":1,\"179\":13}}],[\"marked\",{\"3\":{\"155\":1}}],[\"maxhistory>\",{\"3\":{\"218\":1,\"219\":1}}],[\"maxhistory\",{\"3\":{\"218\":1}}],[\"maxfilesize>\",{\"3\":{\"216\":1,\"217\":1,\"219\":1}}],[\"maxindex>\",{\"3\":{\"216\":1}}],[\"maxindex\",{\"3\":{\"216\":1}}],[\"maxpathlen\",{\"3\":{\"151\":3}}],[\"max\",{\"3\":{\"151\":1}}],[\"may\",{\"3\":{\"113\":1,\"179\":1}}],[\"manually\",{\"3\":{\"113\":1}}],[\"manager\",{\"3\":{\"111\":1,\"118\":2,\"225\":1}}],[\"manage\",{\"3\":{\"108\":3}}],[\"many\",{\"3\":{\"31\":1,\"108\":1,\"162\":1}}],[\"matching\",{\"3\":{\"77\":1}}],[\"matches\",{\"3\":{\"71\":1}}],[\"macro\",{\"3\":{\"74\":6}}],[\"macos\",{\"3\":{\"55\":1,\"111\":1}}],[\"makefile\",{\"3\":{\"72\":1}}],[\"make\",{\"3\":{\"31\":2,\"35\":2,\"60\":2,\"86\":2,\"87\":1,\"136\":1,\"151\":1}}],[\"master\",{\"3\":{\"25\":1}}],[\"main生成可执行文件\",{\"3\":{\"81\":1}}],[\"main表示输出文件名为main\",{\"3\":{\"57\":2}}],[\"main\",{\"3\":{\"25\":6,\"54\":9,\"57\":7,\"63\":2,\"65\":1,\"72\":9,\"81\":2,\"82\":1,\"198\":1,\"225\":2}}],[\"9a062601\",{\"3\":{\"238\":1}}],[\"96\",{\"3\":{\"238\":1}}],[\"9362ca3c\",{\"0\":{\"117\":1,\"118\":1}}],[\"9g\",{\"3\":{\"51\":1}}],[\"9\",{\"0\":{\"71\":1},\"2\":{\"71\":1},\"3\":{\"51\":1,\"71\":1,\"110\":2}}],[\"98304\",{\"3\":{\"47\":1}}],[\"95ad2ff2\",{\"0\":{\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1}}],[\"9164c014bf60\",{\"3\":{\"179\":7}}],[\"91\",{\"3\":{\"35\":1}}],[\"9104\",{\"3\":{\"29\":1,\"30\":1}}],[\"9100\",{\"3\":{\"28\":1,\"29\":2}}],[\"9093\",{\"3\":{\"29\":1}}],[\"9090\",{\"3\":{\"27\":1,\"29\":1}}],[\"e5\",{\"3\":{\"238\":1}}],[\"e7\",{\"3\":{\"238\":1}}],[\"e6\",{\"3\":{\"238\":2}}],[\"equals\",{\"3\":{\"225\":6}}],[\"equal等\",{\"3\":{\"71\":1}}],[\"embedded\",{\"3\":{\"229\":1}}],[\"embeddedcontext\",{\"3\":{\"229\":3}}],[\"embed\",{\"1\":{\"224\":1,\"225\":1,\"226\":1,\"227\":1,\"228\":1,\"229\":1,\"230\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1}}],[\"email\",{\"3\":{\"26\":1}}],[\"epoll\",{\"3\":{\"182\":1}}],[\"epoint\",{\"3\":{\"179\":7}}],[\"epoint123\",{\"3\":{\"32\":1}}],[\"effectively\",{\"3\":{\"179\":1}}],[\"ef8f\",{\"3\":{\"179\":7}}],[\"ejb\",{\"0\":{\"166\":1},\"2\":{\"166\":1}}],[\"eclemma\",{\"3\":{\"162\":1}}],[\"eclipsedebug\",{\"3\":{\"140\":1}}],[\"eclipse\",{\"3\":{\"137\":3,\"140\":1}}],[\"eclipsepluginexport\",{\"3\":{\"141\":1}}],[\"eclipseplugindependence\",{\"3\":{\"139\":1}}],[\"eclipsepluginrunlistener\",{\"3\":{\"137\":1}}],[\"eclipseplugintemplate\",{\"3\":{\"136\":1}}],[\"eclipseplugintools\",{\"3\":{\"136\":1}}],[\"eclipseproject\",{\"3\":{\"136\":1}}],[\"eclipse插件\",{\"0\":{\"134\":1},\"2\":{\"134\":1}}],[\"ear\",{\"0\":{\"169\":1},\"2\":{\"169\":1}}],[\"earlier\",{\"3\":{\"115\":1}}],[\"each\",{\"3\":{\"155\":1}}],[\"err\",{\"3\":{\"198\":1,\"213\":1}}],[\"errno\",{\"3\":{\"151\":1}}],[\"errorcode\",{\"3\":{\"238\":4}}],[\"errorreportvalve\",{\"3\":{\"238\":3}}],[\"errors=never\",{\"3\":{\"238\":1}}],[\"errors=\",{\"3\":{\"179\":1}}],[\"error\",{\"3\":{\"31\":1,\"179\":1,\"203\":1,\"210\":1,\"211\":1,\"213\":1,\"233\":1,\"238\":15}}],[\"either\",{\"3\":{\"113\":2,\"176\":1}}],[\"element\",{\"3\":{\"138\":2}}],[\"elevated\",{\"3\":{\"87\":1}}],[\"else\",{\"3\":{\"71\":1,\"151\":2,\"198\":1,\"225\":3,\"228\":1}}],[\"else等条件编译指令\",{\"3\":{\"54\":1}}],[\"edit\",{\"3\":{\"72\":1,\"78\":1}}],[\"entryset\",{\"3\":{\"233\":1}}],[\"entry\",{\"3\":{\"233\":3}}],[\"entry<servletcontainerinitializer\",{\"3\":{\"233\":1}}],[\"enterprise\",{\"3\":{\"118\":1}}],[\"encoder>\",{\"3\":{\"212\":1,\"213\":1,\"214\":1,\"216\":1,\"218\":1,\"219\":1,\"221\":1,\"222\":1}}],[\"encoder\",{\"3\":{\"212\":1}}],[\"encoding=\",{\"3\":{\"137\":1,\"208\":2,\"216\":1}}],[\"engine>\",{\"3\":{\"238\":1}}],[\"engine\",{\"3\":{\"226\":12}}],[\"engine的实现方法\",{\"3\":{\"225\":2}}],[\"engineers\",{\"3\":{\"155\":1}}],[\"english\",{\"3\":{\"179\":1}}],[\"env\",{\"3\":{\"83\":1}}],[\"environment\",{\"3\":{\"81\":1,\"116\":1,\"136\":1}}],[\"enabled\",{\"3\":{\"116\":1,\"150\":1}}],[\"enable\",{\"3\":{\"81\":1,\"116\":1,\"151\":1}}],[\"enpei\",{\"3\":{\"67\":1}}],[\"endorsed\",{\"3\":{\"225\":1}}],[\"endfunction\",{\"3\":{\"74\":1}}],[\"endmacro\",{\"3\":{\"74\":1}}],[\"endif\",{\"3\":{\"71\":1}}],[\"endl\",{\"3\":{\"54\":1,\"81\":1,\"82\":1}}],[\"end\",{\"3\":{\"45\":1,\"46\":1,\"153\":1,\"228\":1}}],[\"endpoint\",{\"3\":{\"29\":1}}],[\"e2fsck\",{\"3\":{\"48\":2}}],[\"etc\",{\"3\":{\"42\":3,\"50\":2,\"115\":2,\"121\":1,\"154\":1,\"156\":1}}],[\"e\",{\"3\":{\"33\":1,\"54\":2,\"87\":2,\"115\":1,\"225\":2,\"233\":2,\"238\":6}}],[\"ex\",{\"3\":{\"228\":4,\"229\":1,\"234\":1}}],[\"exception=false\",{\"3\":{\"238\":1}}],[\"exception\",{\"3\":{\"225\":3,\"229\":1,\"234\":1}}],[\"exit\",{\"3\":{\"179\":4}}],[\"exist\",{\"3\":{\"179\":1}}],[\"existing\",{\"3\":{\"162\":1}}],[\"exists\",{\"3\":{\"71\":1,\"73\":1,\"238\":1}}],[\"execute或schedule执行的任务\",{\"3\":{\"199\":1}}],[\"execute\",{\"3\":{\"179\":1}}],[\"executeafterpreconditionschecked\",{\"3\":{\"179\":1}}],[\"executeprovider\",{\"3\":{\"179\":1}}],[\"execution\",{\"3\":{\"179\":1}}],[\"executions>\",{\"3\":{\"177\":1}}],[\"execution>\",{\"3\":{\"177\":1}}],[\"executable定义了target\",{\"3\":{\"66\":1}}],[\"executable一样\",{\"3\":{\"66\":1}}],[\"executable\",{\"3\":{\"63\":1,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"72\":1,\"87\":1,\"115\":1}}],[\"exec\",{\"3\":{\"115\":2,\"225\":1}}],[\"example\",{\"3\":{\"87\":1,\"108\":1,\"110\":1,\"152\":1,\"155\":1}}],[\"exactly\",{\"3\":{\"29\":1}}],[\"extended\",{\"3\":{\"151\":4}}],[\"extends\",{\"3\":{\"138\":1,\"146\":1,\"228\":1,\"229\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":2,\"235\":4}}],[\"extension\",{\"3\":{\"155\":1}}],[\"extensions\",{\"3\":{\"152\":1}}],[\"extensions>\",{\"3\":{\"145\":1}}],[\"extension>\",{\"3\":{\"137\":1}}],[\"externalconsole\",{\"3\":{\"81\":1}}],[\"external\",{\"3\":{\"57\":1}}],[\"ext4\",{\"3\":{\"47\":1,\"50\":1}}],[\"explaining\",{\"3\":{\"179\":1}}],[\"explorer\",{\"3\":{\"78\":1}}],[\"experience\",{\"3\":{\"108\":1}}],[\"expression\",{\"3\":{\"71\":1,\"73\":1}}],[\"export\",{\"3\":{\"43\":2,\"113\":1,\"116\":2}}],[\"exporter\",{\"3\":{\"28\":2,\"30\":6}}],[\"expihb666qwe\",{\"3\":{\"30\":1}}],[\"eval\",{\"3\":{\"225\":1}}],[\"evaluate\",{\"3\":{\"29\":2}}],[\"evaluation\",{\"3\":{\"29\":2}}],[\"evt\",{\"3\":{\"197\":2}}],[\"event\",{\"3\":{\"225\":1}}],[\"events\",{\"3\":{\"153\":2,\"155\":1}}],[\"every\",{\"3\":{\"29\":4,\"108\":1,\"179\":2}}],[\"length\",{\"3\":{\"226\":1,\"235\":1}}],[\"levelfilter\",{\"0\":{\"222\":1},\"2\":{\"222\":1},\"3\":{\"222\":1}}],[\"level>\",{\"3\":{\"221\":1,\"222\":1}}],[\"level=\",{\"3\":{\"208\":2,\"213\":1,\"214\":1,\"216\":1,\"218\":1,\"221\":1,\"222\":1}}],[\"level\",{\"3\":{\"203\":1,\"210\":1,\"211\":1}}],[\"learned\",{\"3\":{\"162\":1}}],[\"leaf\",{\"3\":{\"151\":1}}],[\"let\",{\"3\":{\"154\":1}}],[\"lessons\",{\"3\":{\"162\":1}}],[\"less\",{\"3\":{\"71\":2}}],[\"ldd\",{\"3\":{\"67\":1}}],[\"ldd查看依赖的动态库\",{\"3\":{\"67\":1}}],[\"lgflags\",{\"3\":{\"57\":1}}],[\"lgflags表示链接gflags库\",{\"3\":{\"57\":1}}],[\"lifecyclestate\",{\"3\":{\"225\":8}}],[\"lifecycles>\",{\"3\":{\"179\":1}}],[\"lifecyclebase\",{\"3\":{\"225\":2}}],[\"lifecycleexception\",{\"3\":{\"225\":6,\"226\":1,\"233\":1}}],[\"lifecycle>\",{\"3\":{\"179\":1}}],[\"lifecycle\",{\"1\":{\"163\":1,\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1},\"3\":{\"176\":1,\"177\":1,\"179\":1,\"225\":2}}],[\"like\",{\"3\":{\"115\":1,\"157\":1}}],[\"list<servletcontextinitializer>\",{\"3\":{\"234\":1}}],[\"listeners\",{\"3\":{\"229\":1}}],[\"listener是一个junit的监听器\",{\"3\":{\"133\":1}}],[\"listener\",{\"0\":{\"137\":1,\"138\":1,\"145\":1,\"146\":1},\"1\":{\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1},\"2\":{\"137\":1,\"138\":1,\"145\":1,\"146\":1},\"3\":{\"135\":1,\"137\":1,\"143\":1,\"145\":1}}],[\"list\",{\"3\":{\"115\":1,\"120\":1}}],[\"light\",{\"3\":{\"77\":1}}],[\"libopencv\",{\"3\":{\"77\":1}}],[\"libraries\",{\"3\":{\"66\":3,\"67\":1,\"68\":4,\"76\":1,\"77\":2,\"87\":1,\"162\":1}}],[\"library和add\",{\"3\":{\"66\":1}}],[\"library\",{\"3\":{\"55\":5,\"66\":2,\"67\":2,\"68\":3,\"73\":1,\"75\":1,\"88\":2,\"162\":1}}],[\"libaccount\",{\"3\":{\"66\":3,\"67\":4}}],[\"lib\",{\"3\":{\"66\":2,\"67\":2,\"75\":2,\"87\":1,\"179\":7}}],[\"libgflags2\",{\"3\":{\"57\":1}}],[\"libgflags\",{\"3\":{\"57\":1}}],[\"libs\",{\"3\":{\"57\":3,\"77\":1}}],[\"lib库名称\",{\"3\":{\"55\":2,\"66\":1}}],[\"lines\",{\"3\":{\"113\":1}}],[\"linenumber\",{\"3\":{\"83\":1}}],[\"line\",{\"3\":{\"77\":1,\"108\":1,\"110\":1,\"114\":1,\"179\":1,\"213\":1}}],[\"linkedhashmap<>\",{\"3\":{\"233\":1}}],[\"linkid=830387\",{\"3\":{\"79\":1,\"81\":1}}],[\"linking\",{\"3\":{\"72\":1}}],[\"link\",{\"3\":{\"54\":4,\"66\":6,\"67\":1,\"68\":4,\"77\":2}}],[\"linux中可以使用which\",{\"3\":{\"81\":1}}],[\"linux下会生成libaccount\",{\"3\":{\"66\":1,\"67\":1}}],[\"linux\",{\"0\":{\"114\":1,\"128\":1},\"2\":{\"114\":1,\"128\":1},\"3\":{\"31\":2,\"35\":1,\"45\":1,\"46\":5,\"55\":1,\"114\":1}}],[\"lv\",{\"3\":{\"51\":1}}],[\"ls\",{\"3\":{\"49\":1,\"115\":2}}],[\"lang\",{\"3\":{\"238\":2}}],[\"language\",{\"3\":{\"78\":1,\"179\":3}}],[\"languages\",{\"3\":{\"63\":1,\"64\":1}}],[\"languages是项目语言\",{\"3\":{\"63\":1}}],[\"large\",{\"3\":{\"108\":1,\"118\":1,\"179\":1}}],[\"largest\",{\"3\":{\"108\":1}}],[\"layout\",{\"3\":{\"87\":1}}],[\"launch\",{\"3\":{\"79\":1,\"81\":3}}],[\"last\",{\"3\":{\"46\":1,\"115\":1}}],[\"label\",{\"3\":{\"29\":1,\"81\":1,\"179\":12}}],[\"latest\",{\"3\":{\"27\":3,\"88\":1,\"115\":4,\"153\":1}}],[\"lot\",{\"3\":{\"179\":1}}],[\"look\",{\"3\":{\"157\":1}}],[\"lose\",{\"3\":{\"153\":1}}],[\"losing\",{\"0\":{\"153\":1},\"2\":{\"153\":1}}],[\"lost\",{\"3\":{\"45\":1}}],[\"long\",{\"3\":{\"151\":2}}],[\"log和mylog2\",{\"3\":{\"216\":1}}],[\"log<\",{\"3\":{\"214\":1,\"216\":1,\"218\":1,\"219\":1}}],[\"logfile\",{\"3\":{\"206\":5}}],[\"log4j\",{\"3\":{\"202\":1}}],[\"logback<\",{\"3\":{\"205\":1}}],[\"logback配置\",{\"0\":{\"204\":1},\"2\":{\"204\":1}}],[\"logback是由log4j创始人设计的另一个开源日志组件\",{\"3\":{\"203\":1}}],[\"logback介绍\",{\"0\":{\"203\":1},\"2\":{\"203\":1}}],[\"logback\",{\"0\":{\"206\":1,\"207\":1,\"208\":1},\"1\":{\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"215\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1},\"2\":{\"206\":1,\"207\":1,\"208\":1},\"3\":{\"202\":1,\"203\":3,\"205\":2,\"206\":7,\"207\":2,\"208\":6,\"212\":1,\"213\":1,\"214\":1,\"216\":3,\"217\":1,\"218\":2,\"219\":2,\"221\":2,\"222\":2,\"223\":1}}],[\"logger可以包含零个或多个appender\",{\"3\":{\"210\":1}}],[\"logger仅有一个name属性\",{\"3\":{\"210\":1}}],[\"logger是configuration的子节点\",{\"3\":{\"210\":1}}],[\"logger标签\",{\"0\":{\"210\":1},\"2\":{\"210\":1}}],[\"logger\",{\"3\":{\"209\":1,\"212\":1,\"213\":1,\"214\":1,\"216\":1,\"221\":1,\"222\":1,\"229\":1,\"235\":2}}],[\"logger>\",{\"3\":{\"208\":1,\"218\":1}}],[\"logginginitializationcontext\",{\"3\":{\"206\":1}}],[\"logging\",{\"3\":{\"179\":2,\"202\":1,\"203\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":5,\"225\":1}}],[\"loggc\",{\"3\":{\"151\":2}}],[\"log\",{\"3\":{\"150\":6,\"151\":9,\"152\":8,\"153\":15,\"154\":23,\"155\":2,\"156\":3,\"157\":7,\"203\":1,\"208\":6,\"216\":5,\"218\":2,\"219\":2,\"233\":1,\"238\":4}}],[\"logs\",{\"0\":{\"153\":1,\"154\":1,\"155\":1},\"2\":{\"153\":1,\"154\":1,\"155\":1},\"3\":{\"150\":2,\"152\":1,\"153\":2,\"154\":3,\"155\":2,\"157\":3,\"219\":1}}],[\"logical\",{\"3\":{\"45\":1,\"46\":1}}],[\"location\",{\"0\":{\"155\":1},\"2\":{\"155\":1},\"3\":{\"155\":1}}],[\"locations\",{\"3\":{\"87\":2,\"157\":1}}],[\"local\",{\"3\":{\"75\":1,\"87\":9,\"151\":1}}],[\"localhost\",{\"3\":{\"28\":1,\"29\":1,\"30\":1,\"238\":1}}],[\"lock\",{\"3\":{\"51\":1,\"151\":2}}],[\"loadonstartup\",{\"3\":{\"235\":1}}],[\"loaderhidingresourceroot\",{\"3\":{\"232\":1}}],[\"loadclass\",{\"3\":{\"225\":1}}],[\"loadconfiguration\",{\"3\":{\"206\":1}}],[\"loaddefaults\",{\"3\":{\"206\":1}}],[\"loads\",{\"3\":{\"113\":1}}],[\"load\",{\"3\":{\"29\":1,\"225\":5}}],[\"lurj\",{\"3\":{\"26\":1,\"41\":1,\"45\":2,\"46\":2,\"47\":2,\"48\":2,\"49\":1,\"50\":3,\"51\":3}}],[\"lurj7988\",{\"3\":{\"25\":1}}],[\"部署和生成站点等构建步骤\",{\"3\":{\"173\":1}}],[\"部署\",{\"0\":{\"27\":1},\"2\":{\"27\":1}}],[\"sm\",{\"3\":{\"233\":1}}],[\"slf4j+logback三种日志组合\",{\"3\":{\"202\":1}}],[\"slf4j+log4j2\",{\"3\":{\"202\":1}}],[\"slf4j最常用的日志实现框架是\",{\"3\":{\"202\":1}}],[\"slf4j\",{\"3\":{\"202\":1,\"205\":1}}],[\"skipped=\",{\"3\":{\"179\":1}}],[\"skipped\",{\"3\":{\"179\":1}}],[\"sssxxx\",{\"3\":{\"218\":1,\"219\":1}}],[\"sss\",{\"3\":{\"213\":1}}],[\"ss\",{\"3\":{\"157\":1,\"212\":1,\"213\":1,\"218\":1,\"219\":1}}],[\"ssh远程连接ubuntu主机\",{\"3\":{\"78\":1}}],[\"ssh远程开发\",{\"3\":{\"78\":1}}],[\"sshd\",{\"3\":{\"42\":3}}],[\"ssh目录下的authorized\",{\"3\":{\"40\":1}}],[\"ssh免密登录\",{\"0\":{\"38\":1},\"2\":{\"38\":1}}],[\"ssh\",{\"1\":{\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1},\"3\":{\"32\":4,\"39\":2,\"40\":1,\"41\":1,\"42\":4,\"78\":2}}],[\"snprintf\",{\"3\":{\"151\":3}}],[\"snippet\",{\"3\":{\"113\":1}}],[\"saying\",{\"3\":{\"179\":2}}],[\"say\",{\"3\":{\"154\":1}}],[\"saved\",{\"3\":{\"151\":1}}],[\"same\",{\"3\":{\"151\":1}}],[\"saliency\",{\"3\":{\"77\":1}}],[\"spring想实现的目标是所有实现了servletcontextinitializer接口的bean都能拿到servletcontext对象\",{\"3\":{\"234\":1}}],[\"springboot也可以通过实现tomcatconnectorcustomizer接口进行配置\",{\"3\":{\"238\":1}}],[\"springboot可以通过实现webserverfactorycustomizer接口对errorreportvalve进行配置\",{\"3\":{\"238\":1}}],[\"springboot可以通过配置关闭异常显示\",{\"3\":{\"238\":1}}],[\"springboot基于tomcatstarter拿到的tomcat容器对象做了进一步优化\",{\"3\":{\"236\":1}}],[\"springboot基于servlet3\",{\"3\":{\"236\":1}}],[\"springboot中tomcat的启动时机是在容器启动时\",{\"3\":{\"236\":1}}],[\"springboot中的servletcontainerinitializer的实现类\",{\"0\":{\"232\":1},\"2\":{\"232\":1}}],[\"springboot中的tomcat如何加载servlet\",{\"0\":{\"230\":1},\"2\":{\"230\":1}}],[\"springboot使用内嵌tomcat完成了tomcat的启动\",{\"3\":{\"236\":1}}],[\"springboot会自动装配springmvc\",{\"3\":{\"235\":1}}],[\"springboot确实搞了一个实现类tomcatstarter来实现servletcontainerinitializer接口并实现了onstartup方法\",{\"3\":{\"232\":1}}],[\"springboot启动类的mian方法中会执行springapplication\",{\"3\":{\"227\":1}}],[\"springboot启动tomcat的时机\",{\"0\":{\"227\":1},\"2\":{\"227\":1}}],[\"springboot是如何使用的内置tomcat\",{\"3\":{\"224\":1}}],[\"springcloud\",{\"3\":{\"218\":1}}],[\"springframework\",{\"3\":{\"206\":1,\"208\":5,\"229\":1,\"234\":1}}],[\"spring继续查询\",{\"3\":{\"206\":1}}],[\"spring\",{\"3\":{\"187\":1,\"203\":1,\"206\":4,\"207\":2,\"208\":3,\"228\":1}}],[\"special\",{\"3\":{\"115\":1}}],[\"specific\",{\"3\":{\"115\":1}}],[\"space\",{\"3\":{\"45\":1}}],[\"site\",{\"3\":{\"178\":2,\"179\":2}}],[\"site生命周期\",{\"0\":{\"172\":1},\"2\":{\"172\":1}}],[\"sites\",{\"3\":{\"136\":1}}],[\"single\",{\"3\":{\"156\":1}}],[\"since\",{\"3\":{\"87\":1,\"115\":1,\"179\":1}}],[\"significant\",{\"3\":{\"155\":1}}],[\"silicon\",{\"0\":{\"129\":1},\"2\":{\"129\":1}}],[\"simply\",{\"3\":{\"114\":1}}],[\"simpledateformat指定的时间格式\",{\"3\":{\"218\":1}}],[\"simpler\",{\"3\":{\"179\":1}}],[\"simple\",{\"3\":{\"110\":1,\"157\":1,\"202\":1}}],[\"sizeandtimebasedrollingpolicy\",{\"0\":{\"219\":1},\"2\":{\"219\":1},\"3\":{\"219\":1}}],[\"sizebasedtriggeringpolicy\",{\"3\":{\"216\":1,\"217\":1}}],[\"sizeof\",{\"3\":{\"151\":3}}],[\"sizes\",{\"3\":{\"48\":1}}],[\"size\",{\"3\":{\"45\":3,\"46\":6,\"51\":1,\"150\":1,\"151\":1,\"152\":1}}],[\"src\",{\"3\":{\"67\":1,\"179\":1}}],[\"socketprocessorbase\",{\"3\":{\"238\":2}}],[\"socket\",{\"3\":{\"191\":1,\"197\":2}}],[\"socket连接\",{\"3\":{\"191\":1}}],[\"socketchannel\",{\"3\":{\"182\":1}}],[\"solution\",{\"0\":{\"157\":1},\"2\":{\"157\":1},\"3\":{\"157\":1,\"179\":1}}],[\"software\",{\"3\":{\"108\":2,\"136\":1}}],[\"sourcepath\",{\"3\":{\"225\":1}}],[\"sources\",{\"3\":{\"86\":1}}],[\"source\",{\"3\":{\"72\":2,\"73\":2,\"88\":2,\"108\":1,\"113\":1,\"114\":2}}],[\"sometimes\",{\"3\":{\"116\":1}}],[\"some\",{\"3\":{\"72\":1}}],[\"so代表shared\",{\"3\":{\"55\":1}}],[\"so\",{\"3\":{\"55\":2,\"67\":5,\"87\":1,\"154\":1,\"157\":1,\"198\":2}}],[\"s文件汇编成xx\",{\"3\":{\"54\":1}}],[\"s的汇编文件\",{\"3\":{\"54\":1}}],[\"synchronized\",{\"3\":{\"225\":3,\"229\":1,\"233\":1}}],[\"syncing\",{\"3\":{\"46\":1}}],[\"symlink\",{\"3\":{\"116\":2}}],[\"systems\",{\"3\":{\"45\":1,\"46\":1}}],[\"system\",{\"3\":{\"31\":1,\"87\":3,\"179\":2,\"198\":2,\"238\":1}}],[\"swap\",{\"3\":{\"45\":1,\"46\":1}}],[\"swapoff\",{\"3\":{\"45\":1,\"46\":1}}],[\"sda4进行格式化\",{\"3\":{\"47\":1}}],[\"sda4\",{\"3\":{\"46\":1,\"47\":1,\"48\":2,\"50\":2,\"51\":1}}],[\"sda3\",{\"3\":{\"46\":1}}],[\"sda2\",{\"3\":{\"46\":1,\"51\":1}}],[\"sda1\",{\"3\":{\"46\":1}}],[\"sda\",{\"3\":{\"45\":2,\"46\":2}}],[\"shutdown\",{\"3\":{\"229\":4}}],[\"shstart脚本最终会执行bootstrap的mian方法\",{\"3\":{\"225\":1}}],[\"showserverinfo=\",{\"3\":{\"238\":1}}],[\"showreport=\",{\"3\":{\"238\":1}}],[\"shown\",{\"3\":{\"152\":1,\"157\":1}}],[\"shortcomings\",{\"3\":{\"157\":1}}],[\"shot\",{\"3\":{\"118\":1}}],[\"should\",{\"3\":{\"87\":1,\"113\":1,\"114\":1,\"178\":1}}],[\"shells\",{\"3\":{\"114\":1,\"115\":1}}],[\"shell\",{\"3\":{\"111\":2,\"115\":1,\"116\":1}}],[\"share\",{\"3\":{\"87\":1,\"108\":1}}],[\"shared\",{\"3\":{\"55\":3,\"66\":1,\"67\":2}}],[\"shape\",{\"3\":{\"77\":1}}],[\"shm\",{\"3\":{\"51\":1}}],[\"sh\",{\"3\":{\"31\":1,\"111\":1,\"113\":6,\"179\":2}}],[\"sun\",{\"3\":{\"238\":3}}],[\"suite\",{\"3\":{\"179\":1}}],[\"successrate=\",{\"3\":{\"179\":1}}],[\"successfully\",{\"3\":{\"179\":1}}],[\"such\",{\"3\":{\"156\":1}}],[\"suffixes\",{\"3\":{\"157\":1}}],[\"suffixing\",{\"3\":{\"157\":1}}],[\"suffix\",{\"3\":{\"157\":1}}],[\"sure\",{\"3\":{\"179\":1}}],[\"surefirebooterforkexception\",{\"3\":{\"179\":1}}],[\"surefirebooter7106199231689045505\",{\"3\":{\"179\":2}}],[\"surefire2911789998602964175tmp\",{\"3\":{\"179\":2}}],[\"surefirereportmojo\",{\"3\":{\"178\":1}}],[\"surefireplugin\",{\"3\":{\"176\":1}}],[\"surefire\",{\"0\":{\"174\":1,\"176\":1,\"178\":1},\"1\":{\"174\":1,\"175\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":1},\"2\":{\"174\":1,\"176\":1,\"178\":1},\"3\":{\"174\":2,\"175\":2,\"176\":3,\"178\":5,\"179\":44}}],[\"surrounding\",{\"3\":{\"108\":1}}],[\"surface\",{\"3\":{\"77\":1}}],[\"suppose\",{\"3\":{\"153\":1,\"154\":1}}],[\"supports\",{\"3\":{\"179\":1}}],[\"support\",{\"0\":{\"85\":1},\"2\":{\"85\":1}}],[\"supplied\",{\"3\":{\"151\":1}}],[\"superres\",{\"3\":{\"77\":2}}],[\"superblocks\",{\"3\":{\"47\":1}}],[\"superblock\",{\"3\":{\"47\":1}}],[\"super\",{\"3\":{\"30\":1,\"228\":1,\"235\":1}}],[\"sum\",{\"3\":{\"79\":3,\"81\":3}}],[\"summary=\",{\"3\":{\"179\":1}}],[\"summary\",{\"3\":{\"48\":1}}],[\"sudo\",{\"3\":{\"37\":1,\"42\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":3,\"57\":2,\"60\":2,\"77\":1,\"80\":4,\"85\":1,\"86\":4,\"87\":3,\"119\":1}}],[\"subshell\",{\"3\":{\"115\":1}}],[\"sub\",{\"3\":{\"31\":3}}],[\"scifail\",{\"3\":{\"233\":1}}],[\"sci\",{\"3\":{\"233\":2}}],[\"scan=\",{\"3\":{\"213\":1}}],[\"scanperiod=\",{\"3\":{\"213\":1}}],[\"scanperiod\",{\"3\":{\"209\":1}}],[\"scan\",{\"3\":{\"209\":1}}],[\"scanning\",{\"3\":{\"72\":1}}],[\"script\",{\"0\":{\"113\":1},\"2\":{\"113\":1},\"3\":{\"113\":4,\"114\":1}}],[\"scraped\",{\"3\":{\"29\":1}}],[\"scrape\",{\"3\":{\"29\":6}}],[\"scheme\",{\"3\":{\"29\":1,\"150\":1}}],[\"s\",{\"3\":{\"29\":1,\"33\":3,\"42\":1,\"45\":1,\"46\":2,\"54\":4,\"61\":2,\"72\":4,\"87\":1,\"108\":1,\"113\":3,\"151\":9,\"154\":1,\"225\":1,\"229\":1}}],[\"stopped\",{\"3\":{\"225\":1}}],[\"stopatentry\",{\"3\":{\"81\":1}}],[\"stored\",{\"3\":{\"47\":1}}],[\"store\",{\"3\":{\"26\":1}}],[\"studio\",{\"0\":{\"78\":1},\"2\":{\"78\":1},\"3\":{\"78\":1}}],[\"stereo\",{\"3\":{\"77\":1}}],[\"steps\",{\"3\":{\"72\":9}}],[\"stitching\",{\"3\":{\"77\":1}}],[\"strlen\",{\"3\":{\"151\":1}}],[\"str\",{\"3\":{\"151\":2}}],[\"strerror\",{\"3\":{\"151\":1}}],[\"stream\",{\"3\":{\"151\":2}}],[\"strequal\",{\"3\":{\"71\":1}}],[\"stringutils\",{\"3\":{\"235\":3}}],[\"string\",{\"3\":{\"73\":1,\"151\":1,\"198\":1,\"206\":1,\"225\":3,\"231\":4,\"235\":5,\"238\":1}}],[\"string>\",{\"3\":{\"73\":1}}],[\"structured\",{\"3\":{\"77\":1}}],[\"structure\",{\"3\":{\"48\":1}}],[\"stdout\",{\"3\":{\"213\":2}}],[\"std=c++14\",{\"3\":{\"81\":1}}],[\"std\",{\"3\":{\"54\":2,\"81\":1,\"82\":4}}],[\"stacktrace=never\",{\"3\":{\"238\":1}}],[\"standardcontext\",{\"3\":{\"233\":2}}],[\"standardhost\",{\"3\":{\"226\":1}}],[\"standardengine\",{\"3\":{\"226\":1}}],[\"standardservice\",{\"3\":{\"226\":1}}],[\"standardserver\",{\"3\":{\"226\":1}}],[\"standalone\",{\"3\":{\"178\":1}}],[\"state\",{\"3\":{\"225\":5}}],[\"static\",{\"3\":{\"29\":4,\"55\":1,\"66\":4,\"198\":1,\"225\":2,\"235\":2}}],[\"stamp\",{\"3\":{\"157\":1}}],[\"stability\",{\"3\":{\"115\":1}}],[\"stable\",{\"1\":{\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"132\":1},\"3\":{\"52\":1,\"115\":2}}],[\"startinternal都会被调用\",{\"3\":{\"233\":1}}],[\"startinternal\",{\"3\":{\"225\":2,\"233\":1}}],[\"starting\",{\"3\":{\"225\":1}}],[\"start方法执行后各个元素的init\",{\"3\":{\"233\":1}}],[\"start方法由父类lifecyclebase实现的\",{\"3\":{\"225\":1}}],[\"start方法\",{\"3\":{\"225\":1}}],[\"start方法中会先执行init方法\",{\"3\":{\"225\":1}}],[\"startupstep\",{\"3\":{\"228\":1}}],[\"startupinstance\",{\"3\":{\"225\":2}}],[\"startupclass\",{\"3\":{\"225\":2}}],[\"startup\",{\"3\":{\"225\":2}}],[\"starter\",{\"3\":{\"205\":1,\"229\":3,\"232\":2,\"234\":1}}],[\"starter里已集成spring\",{\"3\":{\"205\":1}}],[\"starts\",{\"3\":{\"153\":1}}],[\"start\",{\"0\":{\"84\":1},\"2\":{\"84\":1},\"3\":{\"45\":1,\"46\":1,\"115\":1,\"157\":1,\"225\":10,\"226\":3,\"228\":2,\"229\":2,\"233\":1}}],[\"selfinitialize\",{\"3\":{\"234\":2}}],[\"self\",{\"3\":{\"206\":1}}],[\"selector\",{\"0\":{\"192\":1},\"2\":{\"192\":1},\"3\":{\"192\":2}}],[\"select\",{\"3\":{\"30\":1,\"192\":1}}],[\"servlet就是dispatcherservlet\",{\"3\":{\"235\":1}}],[\"servlet的mapping配置在这里完成\",{\"3\":{\"235\":1}}],[\"servlet注册完后会返回一个registration对象\",{\"3\":{\"235\":1}}],[\"servlet注册在这里完成\",{\"3\":{\"235\":1}}],[\"servletclass\",{\"3\":{\"231\":1}}],[\"servletcontainerinitializer\",{\"3\":{\"233\":1,\"234\":1}}],[\"servletcontainerinitializer的实现类执行onstartup方法的时机\",{\"0\":{\"233\":1},\"2\":{\"233\":1}}],[\"servletcontainerinitializer文件的方式相比还有一种更加简单粗暴的方式\",{\"3\":{\"232\":1}}],[\"servletcontainerinitializer文件在springboot项目中也没有\",{\"3\":{\"232\":1}}],[\"servletcontainerinitializer文件\",{\"3\":{\"231\":1}}],[\"servletcontextinitializer的实现类之一dispatcherservletregistrationbean完成了dispatcherservlet向tomcat容器的注册\",{\"3\":{\"236\":1}}],[\"servletcontextinitializer本身是一个\",{\"3\":{\"234\":1}}],[\"servletcontextinitializer\",{\"3\":{\"229\":3,\"232\":3,\"234\":12,\"235\":1}}],[\"servletcontext\",{\"3\":{\"228\":5,\"231\":2,\"233\":1,\"234\":14,\"235\":9}}],[\"servlet>\",{\"3\":{\"231\":1,\"235\":1}}],[\"servletname\",{\"3\":{\"231\":3}}],[\"servletregistrationbean<t\",{\"3\":{\"235\":1}}],[\"servletregistration\",{\"3\":{\"231\":3,\"235\":2}}],[\"servlet对象是如何被注册到tomcat容器中的呢\",{\"3\":{\"231\":1}}],[\"servlet3\",{\"0\":{\"231\":1},\"2\":{\"231\":1},\"3\":{\"231\":1}}],[\"servlet\",{\"3\":{\"228\":1,\"231\":3,\"232\":2,\"234\":1,\"235\":3}}],[\"servletexception\",{\"3\":{\"228\":1,\"233\":1,\"234\":2,\"235\":1}}],[\"servletwebserverfactory\",{\"3\":{\"228\":1,\"234\":1}}],[\"servletwebserverapplicationcontext\",{\"0\":{\"228\":1},\"2\":{\"228\":1},\"3\":{\"228\":1,\"234\":1}}],[\"services目录下创建javax\",{\"3\":{\"231\":1}}],[\"service对象的init方法是由父类lifecyclebase实现的\",{\"3\":{\"225\":1}}],[\"service类的实现方法\",{\"3\":{\"225\":2}}],[\"service\",{\"3\":{\"218\":1,\"226\":10,\"238\":1}}],[\"service基于netty框架二次封装实现\",{\"3\":{\"184\":1}}],[\"server的start方法会调用其父类lifecyclebase的公共start方法\",{\"3\":{\"225\":1}}],[\"server类的实现方式\",{\"3\":{\"225\":2}}],[\"server端包含1个boss\",{\"3\":{\"199\":1}}],[\"serverbootstrap是服务端启动引导类\",{\"3\":{\"189\":1}}],[\"serverbootstrap\",{\"0\":{\"189\":1},\"2\":{\"189\":1},\"3\":{\"198\":5}}],[\"serversocketchannel\",{\"3\":{\"182\":1}}],[\"server\",{\"3\":{\"37\":1,\"155\":1,\"225\":9,\"226\":9,\"228\":1,\"229\":2,\"238\":4}}],[\"sessionconfiguringinitializer\",{\"3\":{\"234\":1}}],[\"sessionfinished\",{\"3\":{\"138\":1}}],[\"session\",{\"3\":{\"138\":5,\"234\":1}}],[\"semver\",{\"3\":{\"115\":1}}],[\"several\",{\"3\":{\"88\":1}}],[\"seethe\",{\"3\":{\"179\":1}}],[\"see\",{\"3\":{\"87\":1,\"88\":1,\"114\":1}}],[\"section\",{\"3\":{\"178\":1}}],[\"sector\",{\"3\":{\"45\":1,\"46\":3}}],[\"sectors\",{\"3\":{\"45\":3,\"46\":4}}],[\"second\",{\"3\":{\"29\":1,\"74\":2}}],[\"seconds\",{\"3\":{\"29\":2,\"213\":1}}],[\"setproperty\",{\"3\":{\"238\":3}}],[\"setshowreport\",{\"3\":{\"238\":1}}],[\"setshowserverinfo\",{\"3\":{\"238\":1}}],[\"setsocketoptions\",{\"3\":{\"238\":1}}],[\"setstarter\",{\"3\":{\"229\":1}}],[\"setstateinternal\",{\"3\":{\"225\":3}}],[\"setmultipartconfig\",{\"3\":{\"235\":2}}],[\"setloadonstartup\",{\"3\":{\"235\":2}}],[\"setinitparameter\",{\"3\":{\"234\":1}}],[\"setattribute\",{\"3\":{\"233\":1}}],[\"setawait\",{\"3\":{\"225\":1}}],[\"set<class<\",{\"3\":{\"233\":3,\"234\":1}}],[\"setresources\",{\"3\":{\"232\":1}}],[\"setrealm\",{\"3\":{\"226\":1}}],[\"setfailctxifservletstartfails\",{\"3\":{\"229\":1}}],[\"setcontainer\",{\"3\":{\"226\":1}}],[\"setdefaulthost\",{\"3\":{\"226\":1}}],[\"setname\",{\"3\":{\"226\":3,\"235\":1}}],[\"settings\",{\"3\":{\"117\":1}}],[\"setupcommands\",{\"3\":{\"81\":1}}],[\"set\",{\"3\":{\"25\":3,\"29\":2,\"74\":1,\"81\":1,\"108\":2,\"109\":3,\"116\":3,\"117\":2,\"150\":1,\"151\":1,\"179\":1,\"225\":1}}],[\"8443\",{\"3\":{\"238\":1}}],[\"881\",{\"3\":{\"238\":1}}],[\"884736\",{\"3\":{\"47\":1}}],[\"8f\",{\"3\":{\"238\":1}}],[\"87\",{\"3\":{\"238\":1}}],[\"877\",{\"3\":{\"179\":16}}],[\"8<\",{\"3\":{\"212\":1,\"213\":1,\"218\":1,\"219\":1}}],[\"857\",{\"3\":{\"179\":1}}],[\"85899345920\",{\"3\":{\"46\":1}}],[\"8k\",{\"3\":{\"150\":1,\"151\":1}}],[\"83\",{\"3\":{\"147\":1}}],[\"83c1c1da\",{\"0\":{\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1}}],[\"8dc8c832\",{\"0\":{\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":1}}],[\"819200\",{\"3\":{\"47\":1}}],[\"8g\",{\"3\":{\"46\":1,\"51\":4}}],[\"8080\",{\"3\":{\"198\":1,\"238\":1}}],[\"8058109c\",{\"0\":{\"130\":1,\"131\":1}}],[\"802f\",{\"3\":{\"46\":1}}],[\"80\",{\"3\":{\"46\":1}}],[\"8\",{\"0\":{\"70\":1},\"2\":{\"70\":1},\"3\":{\"26\":1,\"70\":1,\"137\":1,\"151\":2,\"208\":2,\"216\":1,\"238\":17}}],[\"gz\",{\"3\":{\"216\":1}}],[\"guide\",{\"3\":{\"200\":2}}],[\"guice容器\",{\"3\":{\"187\":1}}],[\"gcviewer\",{\"3\":{\"156\":1}}],[\"gceasy\",{\"3\":{\"156\":1}}],[\"gclogfile\",{\"3\":{\"151\":1}}],[\"gclogfilestream\",{\"3\":{\"151\":3}}],[\"gclogfilesize\",{\"3\":{\"151\":4}}],[\"gclogfilesize=100m\",{\"3\":{\"150\":1,\"152\":1}}],[\"gclog\",{\"3\":{\"151\":2}}],[\"gc\",{\"0\":{\"153\":1,\"154\":1,\"155\":1},\"2\":{\"153\":1,\"154\":1,\"155\":1},\"3\":{\"150\":2,\"151\":5,\"152\":8,\"153\":18,\"154\":26,\"155\":5,\"156\":4,\"157\":9}}],[\"gc配置\",{\"1\":{\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1}}],[\"gcc\",{\"3\":{\"35\":1,\"80\":1}}],[\"gcc+\",{\"3\":{\"35\":1}}],[\"gdb\",{\"3\":{\"80\":1,\"81\":4}}],[\"goodbye\",{\"3\":{\"179\":2}}],[\"google开源的命令行参数处理库\",{\"3\":{\"57\":1}}],[\"goal\",{\"3\":{\"178\":1}}],[\"goals>\",{\"3\":{\"177\":1}}],[\"goal>\",{\"3\":{\"177\":2}}],[\"got\",{\"3\":{\"118\":1}}],[\"go\",{\"3\":{\"79\":1,\"81\":1}}],[\"gflags`\",{\"3\":{\"57\":1}}],[\"gflags表示查找gflags库的头文件和库文件的路径\",{\"3\":{\"57\":1}}],[\"generation\",{\"3\":{\"178\":1}}],[\"generated\",{\"3\":{\"153\":1,\"157\":1,\"178\":1}}],[\"generate\",{\"3\":{\"73\":1,\"152\":1,\"153\":1,\"178\":2}}],[\"generator\",{\"3\":{\"73\":2}}],[\"genericwebapplicationcontext\",{\"3\":{\"228\":1,\"234\":1}}],[\"generic\",{\"3\":{\"26\":3}}],[\"getorder\",{\"3\":{\"238\":1}}],[\"getmessage\",{\"3\":{\"238\":2}}],[\"getmethod\",{\"3\":{\"225\":2}}],[\"getinputstream\",{\"3\":{\"238\":1}}],[\"getresource\",{\"3\":{\"238\":1}}],[\"getfile\",{\"3\":{\"238\":2}}],[\"getfacade\",{\"3\":{\"233\":1}}],[\"getdescription\",{\"3\":{\"235\":1}}],[\"getloadonstartup\",{\"3\":{\"235\":1}}],[\"getpipeline\",{\"3\":{\"238\":1}}],[\"getparent\",{\"3\":{\"238\":1}}],[\"getpath\",{\"3\":{\"235\":1}}],[\"getportsdescription\",{\"3\":{\"229\":1}}],[\"getvalue\",{\"3\":{\"233\":1}}],[\"getvaliddocumentroot\",{\"3\":{\"232\":1}}],[\"getkey\",{\"3\":{\"233\":1}}],[\"gettomcatwebserver\",{\"3\":{\"229\":1,\"234\":1}}],[\"getbeanfactory\",{\"3\":{\"228\":2,\"234\":1}}],[\"getwebserver\",{\"3\":{\"228\":1,\"229\":1,\"234\":2}}],[\"getwebserverfactory\",{\"3\":{\"228\":1,\"234\":1}}],[\"getapplicationstartup\",{\"3\":{\"228\":1}}],[\"gethost\",{\"3\":{\"226\":1,\"229\":1,\"234\":1}}],[\"getengine\",{\"3\":{\"226\":3}}],[\"getcanonicalpath\",{\"3\":{\"238\":1}}],[\"getcatalinahome\",{\"3\":{\"238\":1}}],[\"getcontainer\",{\"3\":{\"226\":2}}],[\"getconstructor\",{\"3\":{\"225\":1}}],[\"getclass\",{\"3\":{\"225\":2,\"228\":1}}],[\"getstring\",{\"3\":{\"233\":1}}],[\"getselfinitializer\",{\"3\":{\"228\":2,\"234\":2}}],[\"getselfinitializationconfig\",{\"3\":{\"206\":1}}],[\"getservletname\",{\"3\":{\"235\":1}}],[\"getservlet\",{\"3\":{\"235\":2}}],[\"getservletcontextinitializerbeans\",{\"3\":{\"234\":1}}],[\"getservletcontext\",{\"3\":{\"228\":1,\"233\":2,\"234\":1}}],[\"getservice\",{\"3\":{\"226\":1}}],[\"getserver\",{\"3\":{\"225\":4,\"226\":4}}],[\"getspringinitializationconfig\",{\"3\":{\"206\":1}}],[\"get\",{\"3\":{\"57\":2,\"80\":4,\"109\":1,\"114\":1,\"115\":1,\"117\":1,\"154\":1}}],[\"g++的路径\",{\"3\":{\"81\":1}}],[\"g++确定g++的路径\",{\"3\":{\"81\":1}}],[\"g++\",{\"2\":{\"57\":1},\"3\":{\"54\":4,\"57\":3,\"80\":1,\"81\":4,\"86\":1}}],[\"groovy\",{\"3\":{\"206\":4}}],[\"grows\",{\"3\":{\"179\":1}}],[\"groupid>\",{\"3\":{\"176\":1,\"177\":1,\"178\":1,\"179\":3,\"205\":1}}],[\"group\",{\"3\":{\"47\":1,\"48\":1,\"81\":1,\"198\":1}}],[\"graceful\",{\"3\":{\"229\":1}}],[\"gracefulshutdown\",{\"3\":{\"229\":2}}],[\"gradle\",{\"3\":{\"147\":1}}],[\"grant\",{\"3\":{\"30\":1}}],[\"grafana监控模板下载地址https\",{\"3\":{\"27\":1}}],[\"grafana访问地址http\",{\"3\":{\"27\":1}}],[\"grafana\",{\"1\":{\"27\":1,\"28\":1,\"29\":1,\"30\":1},\"3\":{\"27\":6}}],[\"gib\",{\"3\":{\"45\":1,\"46\":2}}],[\"gitlab\",{\"1\":{\"119\":1,\"120\":1,\"121\":1,\"122\":1},\"3\":{\"119\":1,\"120\":1,\"121\":1,\"122\":1}}],[\"gitee\",{\"3\":{\"26\":1}}],[\"git配置\",{\"0\":{\"26\":1},\"2\":{\"26\":1}}],[\"githubusercontent\",{\"3\":{\"113\":2}}],[\"github\",{\"3\":{\"25\":1,\"28\":1,\"30\":1,\"34\":1,\"36\":1,\"60\":1,\"78\":1,\"86\":1,\"180\":1,\"200\":4}}],[\"git\",{\"1\":{\"25\":1,\"26\":1},\"3\":{\"25\":12,\"60\":2}}],[\"git常用命令\",{\"0\":{\"25\":1},\"2\":{\"25\":1}}],[\"gpt\",{\"3\":{\"45\":1,\"46\":2}}],[\"gssapi\",{\"3\":{\"42\":1}}],[\"g\",{\"0\":{\"57\":1},\"3\":{\"33\":1,\"46\":1,\"81\":1,\"87\":2,\"109\":1,\"115\":1}}],[\"gnu\",{\"3\":{\"31\":2,\"35\":1}}],[\"globals\",{\"3\":{\"233\":1}}],[\"global\",{\"3\":{\"29\":4}}],[\"001\",{\"3\":{\"238\":2}}],[\"0标准\",{\"3\":{\"236\":1}}],[\"0标准中提供了一个不用web\",{\"3\":{\"231\":1}}],[\"0标准可以不使用web\",{\"0\":{\"231\":1},\"2\":{\"231\":1}}],[\"02965824114494373512tmp\",{\"3\":{\"179\":2}}],[\"06t10\",{\"3\":{\"179\":2}}],[\"06\",{\"3\":{\"179\":34}}],[\"0<\",{\"3\":{\"178\":1,\"179\":2}}],[\"01\",{\"3\":{\"157\":1,\"179\":2}}],[\"0l\",{\"3\":{\"151\":2}}],[\"0a7030ed\",{\"0\":{\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1}}],[\"04\",{\"3\":{\"86\":1}}],[\"0x00007fb692cf1000\",{\"3\":{\"67\":1}}],[\"0k\",{\"3\":{\"51\":1}}],[\"0m\",{\"3\":{\"51\":2}}],[\"0\",{\"3\":{\"26\":1,\"30\":4,\"33\":2,\"48\":2,\"50\":2,\"51\":4,\"54\":1,\"63\":2,\"64\":2,\"71\":1,\"79\":3,\"81\":7,\"82\":1,\"110\":2,\"115\":3,\"116\":2,\"119\":1,\"137\":1,\"150\":1,\"151\":7,\"152\":1,\"153\":4,\"154\":3,\"179\":6,\"208\":2,\"216\":1,\"226\":4,\"234\":1,\"235\":1,\"238\":5}}],[\"ok\",{\"3\":{\"233\":1}}],[\"occurred\",{\"3\":{\"206\":1}}],[\"ogback\",{\"3\":{\"203\":1}}],[\"o读写事件和业务逻辑\",{\"3\":{\"198\":1}}],[\"o线程通常执行实际的输出操作\",{\"3\":{\"197\":1}}],[\"o线程生成的入站数据\",{\"3\":{\"197\":1}}],[\"o任务\",{\"3\":{\"193\":2}}],[\"o任务和非i\",{\"3\":{\"193\":1}}],[\"o事件由channelinboundhandler或channeloutboundhandler处理\",{\"3\":{\"197\":1}}],[\"o事件或拦截i\",{\"3\":{\"195\":1}}],[\"o事件\",{\"3\":{\"192\":1,\"195\":2,\"197\":1,\"199\":2}}],[\"o多路复用\",{\"3\":{\"192\":1}}],[\"o调用都将立即返回\",{\"3\":{\"191\":1}}],[\"o操作与对应的处理程序\",{\"3\":{\"191\":1}}],[\"o操作成功\",{\"3\":{\"191\":1}}],[\"o操作已完成\",{\"3\":{\"191\":1}}],[\"o操作\",{\"3\":{\"191\":2,\"195\":3}}],[\"our\",{\"3\":{\"179\":4}}],[\"out或者system\",{\"3\":{\"213\":1}}],[\"outbound\",{\"3\":{\"197\":4}}],[\"out\",{\"3\":{\"151\":3,\"197\":1,\"198\":1,\"213\":1}}],[\"outputstream\",{\"3\":{\"151\":1,\"238\":1}}],[\"output\",{\"3\":{\"54\":1,\"73\":1,\"151\":2,\"179\":8}}],[\"outlook\",{\"3\":{\"26\":1}}],[\"over\",{\"3\":{\"153\":1}}],[\"override\",{\"3\":{\"138\":1,\"146\":1,\"157\":1,\"198\":1,\"228\":1,\"229\":1,\"234\":1,\"235\":2,\"238\":3}}],[\"oldest\",{\"3\":{\"153\":1}}],[\"old\",{\"0\":{\"153\":1},\"2\":{\"153\":1},\"3\":{\"153\":2,\"154\":3,\"157\":1}}],[\"os\",{\"3\":{\"151\":1,\"238\":2}}],[\"ostream\",{\"3\":{\"151\":1}}],[\"owned\",{\"3\":{\"87\":1}}],[\"other\",{\"3\":{\"87\":1,\"108\":1}}],[\"objdetect\",{\"3\":{\"77\":2}}],[\"objectutils\",{\"3\":{\"235\":1}}],[\"objectprovider<multipartconfigelement>\",{\"3\":{\"235\":1}}],[\"object\",{\"3\":{\"55\":1,\"72\":1,\"197\":2,\"225\":3}}],[\"o二进制文件进行链接\",{\"3\":{\"54\":1}}],[\"o的二进制目标文件\",{\"3\":{\"54\":1}}],[\"ordered\",{\"3\":{\"235\":1,\"238\":1}}],[\"organizations\",{\"3\":{\"108\":2}}],[\"org\",{\"3\":{\"88\":1,\"109\":2,\"116\":10,\"117\":1,\"137\":1,\"179\":7,\"208\":5,\"225\":2,\"234\":1,\"238\":14}}],[\"or\",{\"3\":{\"46\":1,\"54\":2,\"71\":1,\"87\":1,\"108\":1,\"113\":4,\"114\":1,\"115\":5,\"118\":2,\"151\":1,\"176\":1,\"179\":5,\"197\":1}}],[\"original\",{\"3\":{\"145\":1}}],[\"origin\",{\"3\":{\"25\":4}}],[\"officeweb\",{\"3\":{\"238\":1}}],[\"official\",{\"3\":{\"179\":1}}],[\"off\",{\"3\":{\"71\":1,\"151\":1,\"203\":1,\"210\":1,\"211\":1}}],[\"of\",{\"0\":{\"116\":1},\"2\":{\"116\":1},\"3\":{\"45\":1,\"46\":3,\"72\":2,\"88\":1,\"108\":3,\"110\":1,\"113\":1,\"115\":7,\"116\":2,\"138\":1,\"150\":2,\"151\":3,\"152\":1,\"153\":2,\"156\":1,\"157\":1,\"175\":1,\"176\":2,\"177\":1,\"178\":2,\"179\":3,\"206\":1}}],[\"open\",{\"3\":{\"88\":2,\"108\":1,\"114\":1,\"151\":2}}],[\"opencv4\",{\"3\":{\"77\":1,\"87\":3}}],[\"opencv\",{\"0\":{\"77\":1},\"1\":{\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1},\"2\":{\"77\":1},\"3\":{\"77\":56,\"86\":5,\"87\":5,\"88\":3}}],[\"openssh\",{\"3\":{\"37\":1}}],[\"opts\",{\"3\":{\"225\":2}}],[\"option\",{\"3\":{\"179\":1,\"198\":1}}],[\"options\",{\"3\":{\"81\":1,\"87\":1,\"179\":1}}],[\"optimal\",{\"3\":{\"46\":1}}],[\"optflow\",{\"3\":{\"77\":1}}],[\"opt\",{\"3\":{\"27\":2,\"49\":1,\"179\":2}}],[\"o\",{\"3\":{\"33\":1,\"46\":1,\"54\":7,\"57\":5,\"72\":3,\"81\":2,\"86\":1,\"113\":1,\"185\":1,\"197\":2}}],[\"onstartup方法中并没有添加servlet\",{\"3\":{\"234\":1}}],[\"onstartup\",{\"3\":{\"228\":1,\"233\":1,\"234\":3,\"235\":1}}],[\"onrefresh\",{\"3\":{\"228\":2}}],[\"onmismatch>\",{\"3\":{\"222\":1}}],[\"onmismatch接收或拒绝日志\",{\"3\":{\"222\":1}}],[\"onmatch>\",{\"3\":{\"222\":1}}],[\"onoccasion\",{\"3\":{\"179\":1}}],[\"only\",{\"3\":{\"45\":1,\"46\":1,\"54\":2,\"87\":1,\"115\":1}}],[\"on\",{\"0\":{\"114\":1,\"127\":1,\"128\":1,\"129\":1},\"2\":{\"114\":1,\"127\":1,\"128\":1,\"129\":1},\"3\":{\"30\":1,\"45\":1,\"46\":1,\"47\":1,\"51\":1,\"71\":1,\"111\":2,\"114\":2,\"118\":1,\"162\":1}}],[\"one\",{\"3\":{\"29\":1,\"118\":1,\"156\":1}}],[\"once\",{\"3\":{\"29\":1,\"86\":1}}],[\"==\",{\"3\":{\"151\":4,\"206\":2,\"225\":1,\"228\":2,\"229\":1,\"233\":1,\"234\":2,\"235\":2}}],[\"=>\",{\"3\":{\"67\":1}}],[\"=\",{\"3\":{\"26\":8,\"45\":2,\"46\":2,\"79\":1,\"151\":17,\"198\":4,\"206\":4,\"225\":12,\"226\":8,\"228\":6,\"229\":5,\"232\":5,\"233\":4,\"234\":8,\"235\":8,\"238\":8}}],[\"pipeline\",{\"3\":{\"198\":2}}],[\"pick\",{\"3\":{\"114\":1}}],[\"p>\",{\"3\":{\"138\":1}}],[\"port=\",{\"3\":{\"238\":1}}],[\"port\",{\"3\":{\"198\":4,\"229\":1}}],[\"pom依赖\",{\"0\":{\"205\":1},\"2\":{\"205\":1}}],[\"pom\",{\"0\":{\"164\":1},\"2\":{\"164\":1},\"3\":{\"174\":1,\"176\":2,\"177\":1,\"178\":1,\"179\":1}}],[\"point\",{\"3\":{\"150\":1}}],[\"point=\",{\"3\":{\"137\":1}}],[\"points\",{\"3\":{\"115\":1}}],[\"pointer\",{\"3\":{\"115\":1}}],[\"possibly\",{\"3\":{\"235\":1}}],[\"possible\",{\"3\":{\"87\":1}}],[\"poses\",{\"3\":{\"155\":1}}],[\"postprocesscontext\",{\"3\":{\"232\":1,\"234\":1}}],[\"post\",{\"3\":{\"115\":1}}],[\"posix\",{\"3\":{\"111\":1}}],[\"py\",{\"3\":{\"79\":2,\"81\":1}}],[\"python\",{\"3\":{\"78\":2,\"79\":3,\"81\":2}}],[\"python开发环境配置\",{\"0\":{\"79\":1},\"2\":{\"79\":1}}],[\"python开发\",{\"3\":{\"78\":1}}],[\"please\",{\"3\":{\"179\":2}}],[\"pluginmanagement>\",{\"3\":{\"176\":1}}],[\"plugins>\",{\"3\":{\"176\":1,\"177\":1,\"178\":1}}],[\"plugins<\",{\"3\":{\"176\":1,\"177\":1,\"178\":1,\"179\":3}}],[\"plugin<\",{\"3\":{\"176\":1,\"177\":1,\"178\":1,\"179\":3}}],[\"plugin>\",{\"3\":{\"137\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":3}}],[\"plugin\",{\"0\":{\"164\":1,\"165\":1,\"166\":1,\"167\":2,\"168\":1,\"169\":1,\"170\":1,\"176\":1,\"177\":1,\"178\":1},\"2\":{\"164\":1,\"165\":1,\"166\":1,\"167\":2,\"168\":1,\"169\":1,\"170\":1,\"176\":1,\"177\":1,\"178\":1},\"3\":{\"137\":1,\"144\":1,\"175\":3,\"176\":2,\"177\":2,\"178\":1,\"179\":11}}],[\"plug\",{\"3\":{\"136\":3,\"141\":1}}],[\"playing\",{\"3\":{\"179\":1}}],[\"platforms\",{\"3\":{\"111\":1}}],[\"place\",{\"3\":{\"54\":1,\"115\":1}}],[\"plot\",{\"3\":{\"77\":1}}],[\"phases>\",{\"3\":{\"179\":1}}],[\"phase>\",{\"3\":{\"179\":1}}],[\"phase\",{\"3\":{\"77\":1,\"176\":1,\"177\":1,\"179\":1}}],[\"photo\",{\"3\":{\"77\":1}}],[\"physical\",{\"3\":{\"45\":1,\"46\":1}}],[\"pkg\",{\"3\":{\"57\":2}}],[\"pmbr\",{\"3\":{\"45\":1,\"46\":1}}],[\"practice\",{\"3\":{\"176\":1}}],[\"privileges\",{\"3\":{\"87\":1}}],[\"private用于说明目标属性的作用范围\",{\"3\":{\"66\":1}}],[\"private\",{\"0\":{\"68\":1},\"2\":{\"68\":1},\"3\":{\"42\":1,\"66\":2,\"68\":4,\"108\":2,\"206\":1,\"225\":3,\"228\":1,\"229\":2,\"233\":1,\"234\":4}}],[\"println\",{\"3\":{\"198\":2}}],[\"printf\",{\"3\":{\"113\":2}}],[\"printing\",{\"3\":{\"81\":1}}],[\"print\",{\"3\":{\"79\":1}}],[\"preparewebapplicationcontext\",{\"3\":{\"234\":1}}],[\"preparecontext\",{\"3\":{\"229\":2,\"232\":1,\"234\":2}}],[\"prep\",{\"3\":{\"225\":1}}],[\"preprocessing\",{\"3\":{\"72\":1}}],[\"preprocess\",{\"3\":{\"54\":2}}],[\"present\",{\"3\":{\"153\":1,\"154\":1}}],[\"predefined\",{\"3\":{\"87\":1}}],[\"prerequisites\",{\"3\":{\"86\":1}}],[\"prelaunchtask\",{\"3\":{\"81\":1}}],[\"pretty\",{\"3\":{\"81\":1}}],[\"prefix=$home\",{\"3\":{\"87\":1}}],[\"prefix=<安装路径>\",{\"3\":{\"60\":1}}],[\"prefix\",{\"3\":{\"75\":2,\"87\":1}}],[\"prefix`\",{\"3\":{\"60\":1}}],[\"prefix`来指定安装路径\",{\"3\":{\"60\":1}}],[\"prop=\",{\"3\":{\"225\":1}}],[\"property\",{\"3\":{\"206\":1}}],[\"properties中指定logback\",{\"3\":{\"207\":1}}],[\"properties\",{\"3\":{\"179\":1}}],[\"properties<\",{\"3\":{\"179\":1}}],[\"properly\",{\"3\":{\"179\":2}}],[\"protocol=\",{\"3\":{\"238\":1}}],[\"protobuf\",{\"3\":{\"187\":1}}],[\"protected\",{\"3\":{\"198\":1,\"225\":3,\"226\":1,\"228\":1,\"229\":2,\"232\":2,\"233\":1,\"234\":3,\"235\":5,\"238\":1}}],[\"produce\",{\"3\":{\"179\":3}}],[\"prompt语法结构分\",{\"3\":{\"131\":1}}],[\"prompt语法结构\",{\"1\":{\"130\":1,\"131\":1}}],[\"prometheus配置\",{\"0\":{\"29\":1},\"2\":{\"29\":1}}],[\"prometheus访问地址http\",{\"3\":{\"27\":1}}],[\"prometheus\",{\"3\":{\"27\":5,\"28\":1,\"29\":3,\"30\":1}}],[\"profile\",{\"3\":{\"113\":3,\"114\":1}}],[\"profiles\",{\"3\":{\"108\":1}}],[\"problem\",{\"3\":{\"154\":1,\"179\":4}}],[\"problemmatcher\",{\"3\":{\"81\":1}}],[\"probably\",{\"3\":{\"45\":1,\"46\":1}}],[\"program\",{\"3\":{\"79\":2,\"81\":3}}],[\"provided\",{\"3\":{\"72\":1,\"208\":1}}],[\"provider\",{\"3\":{\"26\":3}}],[\"project>\",{\"3\":{\"176\":1,\"177\":1,\"178\":1}}],[\"projects\",{\"3\":{\"118\":1}}],[\"projectname\",{\"3\":{\"64\":1}}],[\"project\",{\"0\":{\"175\":1},\"2\":{\"175\":1},\"3\":{\"63\":1,\"64\":1,\"66\":2,\"67\":1,\"117\":1,\"118\":1,\"136\":1,\"174\":2}}],[\"processsocket\",{\"3\":{\"238\":1}}],[\"process\",{\"3\":{\"30\":1,\"87\":1,\"179\":2,\"238\":2}}],[\"proxy=http\",{\"3\":{\"43\":2}}],[\"proxy\",{\"3\":{\"26\":2}}],[\"proxy配置代理了clash的7890端口\",{\"3\":{\"26\":1}}],[\"period\",{\"3\":{\"153\":1}}],[\"periodically\",{\"3\":{\"29\":1}}],[\"per\",{\"3\":{\"111\":2}}],[\"performed\",{\"3\":{\"87\":1}}],[\"permission\",{\"3\":{\"42\":1}}],[\"permitemptypasswords\",{\"3\":{\"42\":1}}],[\"p\",{\"3\":{\"32\":4,\"33\":2,\"46\":2,\"86\":1,\"201\":1,\"223\":1}}],[\"pc\",{\"3\":{\"31\":1,\"35\":1}}],[\"parserequestline\",{\"3\":{\"238\":1}}],[\"parseserverxml\",{\"3\":{\"225\":1}}],[\"parse\",{\"3\":{\"225\":1}}],[\"part\",{\"3\":{\"178\":1}}],[\"particular\",{\"3\":{\"111\":1}}],[\"partition\",{\"3\":{\"46\":3}}],[\"partitions\",{\"3\":{\"45\":1,\"46\":1}}],[\"parent\",{\"3\":{\"176\":1}}],[\"paramtypes\",{\"3\":{\"225\":1}}],[\"param\",{\"3\":{\"138\":1,\"225\":1}}],[\"parameters\",{\"3\":{\"87\":1,\"176\":1,\"177\":1,\"178\":1}}],[\"parameter\",{\"3\":{\"87\":1,\"179\":1}}],[\"pattern>\",{\"3\":{\"212\":1,\"213\":1,\"214\":1,\"216\":1,\"218\":1,\"219\":1,\"221\":1,\"222\":1}}],[\"patternlayoutencoder\",{\"3\":{\"212\":1}}],[\"patching\",{\"3\":{\"87\":1}}],[\"path\",{\"3\":{\"29\":1,\"83\":1,\"87\":1,\"115\":1,\"208\":2,\"238\":3}}],[\"packaging\",{\"0\":{\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1},\"2\":{\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1}}],[\"package=\",{\"3\":{\"179\":1}}],[\"packagelist=\",{\"3\":{\"179\":1}}],[\"package等都是在执行maven的某个生命周期阶段\",{\"3\":{\"173\":1}}],[\"packages\",{\"3\":{\"87\":1,\"108\":3}}],[\"package方便的定位opencv在系统中的位置和需要添加的依赖\",{\"3\":{\"77\":1}}],[\"package的功能\",{\"3\":{\"77\":1}}],[\"package对它进行引用\",{\"3\":{\"76\":1}}],[\"package寻找<libaryname>库\",{\"3\":{\"76\":1}}],[\"package找到对应的依赖库\",{\"3\":{\"76\":1}}],[\"package\",{\"0\":{\"76\":1},\"2\":{\"76\":1},\"3\":{\"77\":1,\"87\":2,\"109\":1,\"118\":1}}],[\"pack\",{\"3\":{\"78\":1}}],[\"passed\",{\"3\":{\"179\":1}}],[\"pass\",{\"3\":{\"48\":5,\"179\":2}}],[\"passwordauthentication\",{\"3\":{\"42\":2}}],[\"password的字典\",{\"3\":{\"33\":1}}],[\"passwords\",{\"3\":{\"32\":1,\"42\":2}}],[\"password\",{\"3\":{\"32\":2}}],[\"password=expihb666qwe\",{\"3\":{\"30\":1}}],[\"pair进行登录\",{\"3\":{\"42\":1}}],[\"put\",{\"3\":{\"233\":1}}],[\"public\",{\"0\":{\"68\":1},\"2\":{\"68\":1},\"3\":{\"66\":4,\"67\":1,\"68\":3,\"73\":1,\"75\":1,\"108\":2,\"138\":2,\"146\":2,\"198\":1,\"225\":9,\"226\":6,\"228\":1,\"229\":4,\"231\":4,\"232\":1,\"233\":3,\"234\":4,\"235\":7,\"238\":6}}],[\"publickey\",{\"3\":{\"42\":1}}],[\"pub为公钥\",{\"3\":{\"39\":1}}],[\"pull\",{\"3\":{\"27\":2}}],[\"push\",{\"3\":{\"25\":3}}],[\"tmp\",{\"3\":{\"208\":1}}],[\"tmpdir=\",{\"3\":{\"225\":1}}],[\"tmpdir\",{\"3\":{\"208\":1,\"225\":1}}],[\"tmpfs\",{\"3\":{\"51\":4}}],[\"tcp\",{\"3\":{\"198\":1}}],[\"tls和starttls支持\",{\"3\":{\"185\":1}}],[\"title=\",{\"3\":{\"179\":2}}],[\"timebasedrollingpolicy\",{\"0\":{\"218\":1},\"2\":{\"218\":1},\"3\":{\"218\":1}}],[\"time=\",{\"3\":{\"179\":1}}],[\"timestamp\",{\"3\":{\"157\":1}}],[\"timeseries\",{\"3\":{\"29\":1}}],[\"time\",{\"3\":{\"151\":8,\"153\":1,\"157\":1}}],[\"timeout\",{\"3\":{\"29\":1}}],[\"turned\",{\"3\":{\"151\":1}}],[\"tutorials\",{\"3\":{\"88\":1}}],[\"tunneled\",{\"3\":{\"42\":1}}],[\"trigger\",{\"3\":{\"229\":1}}],[\"triggeringpolicy\",{\"0\":{\"217\":1},\"2\":{\"217\":1}}],[\"triggeringpolicy>\",{\"3\":{\"216\":1,\"217\":1}}],[\"tried\",{\"3\":{\"179\":1}}],[\"tree\",{\"3\":{\"138\":1}}],[\"truly\",{\"3\":{\"115\":1}}],[\"true>\",{\"3\":{\"73\":2}}],[\"true\",{\"3\":{\"71\":1,\"73\":1,\"79\":1,\"81\":4,\"116\":1,\"151\":1,\"179\":1,\"198\":2,\"213\":1,\"215\":1,\"225\":2,\"229\":1,\"238\":2}}],[\"troubleshooting\",{\"0\":{\"114\":1},\"2\":{\"114\":1}}],[\"trace\",{\"3\":{\"210\":1,\"211\":1,\"221\":1}}],[\"tracking\",{\"3\":{\"77\":1}}],[\"transport\",{\"3\":{\"197\":1}}],[\"translate\",{\"3\":{\"179\":2}}],[\"trained\",{\"3\":{\"87\":1}}],[\"trying\",{\"3\":{\"179\":1}}],[\"try\",{\"0\":{\"152\":1},\"2\":{\"152\":1},\"3\":{\"31\":1,\"114\":1,\"225\":6,\"228\":2,\"229\":1,\"233\":1,\"234\":1,\"238\":2}}],[\"terminated\",{\"3\":{\"179\":2}}],[\"terminal\",{\"3\":{\"108\":1,\"114\":3}}],[\"team\",{\"3\":{\"162\":1}}],[\"templates\",{\"3\":{\"238\":2}}],[\"template选择hello\",{\"3\":{\"136\":1}}],[\"temp\",{\"3\":{\"208\":1}}],[\"tempbuf\",{\"3\":{\"151\":4}}],[\"tensorrt\",{\"3\":{\"67\":1}}],[\"testcases=\",{\"3\":{\"179\":1}}],[\"testing\",{\"3\":{\"179\":1}}],[\"testfailureignore>\",{\"3\":{\"179\":1}}],[\"testfailureignore\",{\"3\":{\"179\":1}}],[\"test<\",{\"3\":{\"177\":1}}],[\"tests=\",{\"3\":{\"179\":1}}],[\"tests\",{\"3\":{\"179\":11}}],[\"testsuitefinished\",{\"3\":{\"146\":1}}],[\"teststatuslistener\",{\"3\":{\"146\":1}}],[\"testrunlistener\",{\"3\":{\"138\":1}}],[\"testrunlistener>\",{\"3\":{\"137\":1}}],[\"testrunlisteners\",{\"3\":{\"137\":1}}],[\"test>\",{\"3\":{\"73\":4}}],[\"test\",{\"3\":{\"66\":15,\"67\":10,\"73\":1,\"75\":2,\"83\":4,\"138\":3,\"174\":1,\"176\":2,\"179\":21,\"206\":4}}],[\"text\",{\"3\":{\"42\":1,\"77\":1,\"81\":2,\"179\":2,\"218\":1}}],[\"taskthread\",{\"3\":{\"238\":1}}],[\"taskthread$wrappingrunnable\",{\"3\":{\"238\":1}}],[\"tasks\",{\"3\":{\"81\":2,\"83\":4}}],[\"tag\",{\"3\":{\"228\":1}}],[\"take\",{\"3\":{\"152\":1}}],[\"tail\",{\"3\":{\"151\":1}}],[\"taobao\",{\"3\":{\"109\":1,\"116\":2,\"117\":1}}],[\"tabs\",{\"3\":{\"116\":1}}],[\"tabnine\",{\"3\":{\"78\":2}}],[\"tables\",{\"3\":{\"47\":2}}],[\"table\",{\"3\":{\"46\":1}}],[\"target>\",{\"3\":{\"73\":3}}],[\"target\",{\"3\":{\"66\":6,\"67\":2,\"68\":3,\"71\":1,\"72\":7,\"73\":3,\"178\":1,\"179\":6,\"238\":1}}],[\"targets\",{\"3\":{\"29\":4,\"72\":1,\"75\":1}}],[\"tar\",{\"3\":{\"35\":2}}],[\"t\",{\"3\":{\"33\":2,\"46\":1,\"47\":1,\"157\":3,\"218\":1,\"219\":1,\"225\":6}}],[\"txt阶段的message命令打印\",{\"3\":{\"73\":1}}],[\"txt`\",{\"3\":{\"67\":1}}],[\"txt来一次性编译\",{\"3\":{\"67\":1}}],[\"txt的开头\",{\"3\":{\"64\":1}}],[\"txt为例\",{\"3\":{\"63\":1,\"64\":1,\"65\":1}}],[\"txt\",{\"3\":{\"32\":5,\"58\":1,\"66\":5,\"67\":2,\"73\":1}}],[\"type\",{\"3\":{\"31\":1,\"46\":3,\"79\":1,\"81\":3,\"114\":1}}],[\"than\",{\"3\":{\"153\":1}}],[\"that\",{\"3\":{\"88\":1,\"110\":1,\"113\":1,\"116\":1,\"118\":1,\"153\":1,\"176\":1,\"179\":7}}],[\"throw\",{\"3\":{\"228\":2}}],[\"throws\",{\"3\":{\"225\":7,\"226\":1,\"229\":1,\"233\":1,\"234\":2,\"235\":1}}],[\"throwable\",{\"3\":{\"225\":4,\"228\":1}}],[\"through\",{\"3\":{\"138\":1}}],[\"thresholdfilter\",{\"0\":{\"221\":1},\"2\":{\"221\":1},\"3\":{\"221\":1}}],[\"threadpoolexecutor$worker\",{\"3\":{\"238\":1}}],[\"threadpoolexecutor\",{\"3\":{\"238\":3}}],[\"thread表示线程名\",{\"3\":{\"212\":1,\"213\":1}}],[\"thread\",{\"3\":{\"212\":1,\"213\":1,\"214\":1,\"216\":1,\"221\":1,\"222\":1,\"238\":2}}],[\"threads\",{\"3\":{\"197\":1,\"238\":3}}],[\"three\",{\"3\":{\"108\":1}}],[\"thus\",{\"3\":{\"87\":1,\"154\":1}}],[\"this\",{\"3\":{\"29\":1,\"45\":2,\"46\":2,\"72\":1,\"87\":1,\"113\":1,\"115\":6,\"116\":2,\"138\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":3,\"157\":1,\"174\":1,\"179\":3,\"228\":6,\"229\":5,\"233\":1,\"234\":8,\"235\":7,\"238\":1}}],[\"their\",{\"3\":{\"179\":1}}],[\"there\",{\"3\":{\"179\":2}}],[\"then\",{\"3\":{\"115\":1,\"153\":2,\"154\":1,\"155\":1,\"157\":2,\"179\":1}}],[\"these\",{\"3\":{\"111\":1,\"114\":1,\"179\":1}}],[\"them\",{\"3\":{\"29\":1,\"45\":1,\"46\":1}}],[\"the\",{\"3\":{\"25\":3,\"29\":5,\"45\":1,\"46\":2,\"54\":1,\"72\":3,\"87\":5,\"88\":2,\"108\":8,\"110\":1,\"113\":9,\"114\":5,\"115\":13,\"116\":2,\"117\":1,\"136\":1,\"138\":6,\"150\":6,\"151\":2,\"152\":3,\"153\":5,\"154\":3,\"155\":3,\"156\":2,\"157\":10,\"162\":2,\"174\":1,\"176\":5,\"177\":5,\"178\":6,\"179\":29,\"225\":3,\"229\":1,\"238\":4}}],[\"topath\",{\"3\":{\"238\":1}}],[\"toarray\",{\"3\":{\"234\":1}}],[\"tostringarray\",{\"3\":{\"235\":1}}],[\"tostring\",{\"3\":{\"225\":1,\"228\":1}}],[\"tomcat8自带的非法字符拦截机制\",{\"3\":{\"238\":1}}],[\"tomcat启动时会执行该方法\",{\"3\":{\"233\":1}}],[\"tomcat启动后会回调实现类的onstartup方法\",{\"3\":{\"231\":1}}],[\"tomcat就被启动了\",{\"3\":{\"229\":1}}],[\"tomcatwebserver\",{\"3\":{\"229\":2}}],[\"tomcatembeddedcontext\",{\"3\":{\"229\":4,\"232\":2}}],[\"tomcatstarter\",{\"3\":{\"229\":2,\"232\":2,\"234\":4}}],[\"tomcatservletwebserverfactory\",{\"0\":{\"229\":1},\"2\":{\"229\":1},\"3\":{\"229\":1,\"232\":1,\"234\":1}}],[\"tomcatprotocolhandlercustomizer\",{\"3\":{\"229\":1}}],[\"tomcatconnectorcustomizer\",{\"3\":{\"229\":1,\"238\":1}}],[\"tomcatcontextcustomizer\",{\"3\":{\"229\":1}}],[\"tomcat使用抽象模板的设计模式完成了该流程的实现\",{\"3\":{\"225\":1}}],[\"tomcat\",{\"1\":{\"224\":1,\"225\":1,\"226\":1,\"227\":1,\"228\":1,\"229\":1,\"230\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1},\"3\":{\"226\":3,\"229\":14,\"234\":2,\"238\":22}}],[\"toml\",{\"3\":{\"121\":1}}],[\"totalsizecap>\",{\"3\":{\"219\":1}}],[\"token\",{\"3\":{\"119\":2}}],[\"together\",{\"3\":{\"67\":2}}],[\"tools\",{\"3\":{\"156\":1}}],[\"tools界面操作\",{\"3\":{\"61\":1}}],[\"tooling\",{\"0\":{\"156\":1},\"2\":{\"156\":1}}],[\"too\",{\"3\":{\"31\":1,\"151\":2,\"179\":1}}],[\"touch\",{\"3\":{\"30\":1,\"40\":1}}],[\"to\",{\"0\":{\"152\":1,\"155\":1},\"2\":{\"152\":1,\"155\":1},\"3\":{\"25\":1,\"29\":7,\"30\":1,\"42\":4,\"45\":4,\"46\":3,\"72\":2,\"87\":7,\"108\":5,\"110\":1,\"111\":1,\"113\":5,\"115\":6,\"116\":4,\"136\":1,\"150\":1,\"151\":3,\"152\":2,\"153\":3,\"154\":4,\"155\":5,\"156\":2,\"157\":3,\"176\":2,\"177\":3,\"178\":1,\"179\":14,\"228\":1,\"229\":1}}],[\"n是换行符\",{\"3\":{\"212\":1,\"213\":1}}],[\"n<\",{\"3\":{\"212\":1,\"213\":1,\"214\":1,\"216\":1,\"218\":1,\"219\":1}}],[\"nio2endpoint$nio2acceptor\",{\"3\":{\"238\":2}}],[\"nio2endpoint$socketprocessor\",{\"3\":{\"238\":1}}],[\"nio2endpoint\",{\"3\":{\"238\":5}}],[\"nioeventloop的selector上\",{\"3\":{\"199\":1}}],[\"nioeventloop循环执行的任务包含3步\",{\"3\":{\"199\":2}}],[\"nioeventloopgroup相当于1个事件循环组\",{\"3\":{\"199\":1}}],[\"nioeventloopgroup和1个worker\",{\"3\":{\"199\":1}}],[\"nioeventloopgroup\",{\"0\":{\"194\":1},\"2\":{\"194\":1},\"3\":{\"194\":1,\"198\":4,\"199\":1}}],[\"nioeventloop中维护了一个线程和任务队列\",{\"3\":{\"193\":1}}],[\"nioeventloop\",{\"0\":{\"193\":1},\"2\":{\"193\":1},\"3\":{\"194\":1}}],[\"niodatagramchannel\",{\"3\":{\"191\":1}}],[\"niosctpserverchannel\",{\"3\":{\"191\":1}}],[\"niosctpchannel\",{\"3\":{\"191\":1}}],[\"nioserversocketchannel\",{\"3\":{\"191\":1,\"198\":1}}],[\"niosocketchannel\",{\"3\":{\"191\":1,\"198\":1}}],[\"nio\",{\"3\":{\"185\":1,\"238\":3}}],[\"nio的类库和api繁杂\",{\"3\":{\"182\":1}}],[\"nio的主要问题是\",{\"3\":{\"182\":1}}],[\"nio的缺点\",{\"0\":{\"182\":1},\"2\":{\"182\":1}}],[\"ninja\",{\"3\":{\"87\":1}}],[\"null\",{\"3\":{\"151\":6,\"206\":4,\"225\":9,\"226\":2,\"228\":3,\"229\":2,\"232\":1,\"233\":2,\"234\":2,\"235\":2}}],[\"nullable\",{\"3\":{\"146\":1}}],[\"num++\",{\"3\":{\"151\":1}}],[\"num\",{\"3\":{\"82\":3,\"151\":6}}],[\"numberofgclogfiles=<num\",{\"3\":{\"151\":1}}],[\"numberofgclogfiles=5\",{\"3\":{\"150\":1,\"152\":1,\"153\":1}}],[\"numberofgclogfiles\",{\"3\":{\"151\":5,\"153\":1}}],[\"number\",{\"3\":{\"46\":1,\"150\":1,\"151\":1,\"179\":1}}],[\"nvm\",{\"1\":{\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":1},\"3\":{\"110\":4,\"111\":2,\"113\":13,\"114\":3,\"115\":13,\"116\":10}}],[\"npmjs\",{\"3\":{\"109\":1}}],[\"npm\",{\"0\":{\"108\":1,\"109\":1},\"1\":{\"108\":1,\"109\":1},\"2\":{\"108\":1,\"109\":1},\"3\":{\"108\":6,\"109\":5,\"110\":3,\"116\":2,\"117\":1}}],[\"n表示新建分区\",{\"3\":{\"45\":1}}],[\"nmap\",{\"0\":{\"35\":1},\"1\":{\"35\":1,\"36\":1},\"2\":{\"35\":1},\"3\":{\"35\":2}}],[\"ns\",{\"3\":{\"33\":1}}],[\"n\",{\"3\":{\"33\":2,\"46\":1,\"71\":1,\"86\":1,\"150\":1,\"151\":8,\"179\":1,\"197\":2,\"221\":1,\"222\":1}}],[\"neutral\",{\"3\":{\"220\":1}}],[\"net\",{\"3\":{\"201\":1,\"238\":6}}],[\"netty服务端过程初始化并启动过程\",{\"0\":{\"198\":1},\"2\":{\"198\":1}}],[\"netty基于selector对象实现i\",{\"3\":{\"192\":1}}],[\"netty网络通信的组件\",{\"3\":{\"191\":1}}],[\"netty中bootstrap类是客户端程序的启动引导类\",{\"3\":{\"189\":1}}],[\"netty作为高性能的基础通信组件\",{\"3\":{\"184\":1}}],[\"netty作为异步高性能的通信框架\",{\"3\":{\"184\":1}}],[\"netty是一款基于nio\",{\"3\":{\"185\":1}}],[\"netty是一个异步事件驱动的网络应用程序框架\",{\"3\":{\"180\":1}}],[\"netty是活跃的开源项目\",{\"3\":{\"183\":1}}],[\"netty修复了已经发现的所有nio的bug\",{\"3\":{\"183\":1}}],[\"netty的架构\",{\"0\":{\"186\":1},\"2\":{\"186\":1},\"3\":{\"187\":1}}],[\"netty的对jdk自带的nio的api进行封装\",{\"3\":{\"185\":1}}],[\"netty的特点\",{\"0\":{\"185\":1},\"2\":{\"185\":1}}],[\"netty的使用场景\",{\"0\":{\"184\":1},\"2\":{\"184\":1}}],[\"netty的综合性能最优\",{\"3\":{\"183\":1}}],[\"netty的优点\",{\"0\":{\"183\":1},\"2\":{\"183\":1}}],[\"netty\",{\"3\":{\"180\":2,\"185\":4,\"197\":1,\"200\":3}}],[\"netty4\",{\"3\":{\"180\":1}}],[\"netty现在都在用的是4\",{\"3\":{\"180\":1}}],[\"netty对jdk自带的nio的api进行了良好的封装\",{\"3\":{\"180\":1}}],[\"netty介绍\",{\"1\":{\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1}}],[\"netty概述\",{\"0\":{\"180\":1},\"2\":{\"180\":1}}],[\"net=host\",{\"3\":{\"27\":2}}],[\"need\",{\"3\":{\"151\":3,\"177\":1,\"179\":1}}],[\"newoutputstream\",{\"3\":{\"238\":1}}],[\"neworigin\",{\"3\":{\"25\":1}}],[\"new变成了lifecyclestate\",{\"3\":{\"225\":1}}],[\"newinstance\",{\"3\":{\"225\":1}}],[\"news\",{\"3\":{\"88\":1}}],[\"new\",{\"3\":{\"29\":1,\"46\":1,\"114\":1,\"115\":2,\"136\":1,\"151\":2,\"153\":1,\"154\":2,\"157\":1,\"179\":1,\"198\":5,\"225\":5,\"226\":4,\"228\":4,\"229\":2,\"232\":3,\"233\":2,\"234\":4,\"235\":1,\"238\":2}}],[\"na\",{\"3\":{\"238\":4}}],[\"naming\",{\"3\":{\"150\":1,\"155\":1}}],[\"name指定appender名称\",{\"3\":{\"212\":1}}],[\"named\",{\"3\":{\"155\":1}}],[\"names\",{\"3\":{\"151\":1}}],[\"namespace\",{\"3\":{\"81\":1}}],[\"name>`\",{\"3\":{\"29\":1}}],[\"name=\",{\"3\":{\"179\":2,\"208\":3,\"213\":1,\"214\":1,\"216\":1,\"218\":2,\"219\":2,\"221\":1,\"222\":1,\"238\":1}}],[\"name=grafana\",{\"3\":{\"27\":1}}],[\"name=prometheus\",{\"3\":{\"27\":1}}],[\"name\",{\"3\":{\"26\":1,\"29\":4,\"57\":1,\"73\":1,\"79\":1,\"81\":2,\"151\":17,\"157\":2,\"210\":1,\"235\":5}}],[\"naulu\",{\"3\":{\"39\":1,\"41\":1}}],[\"naulurenjie\",{\"3\":{\"26\":1}}],[\"now\",{\"3\":{\"110\":3,\"154\":1,\"156\":1}}],[\"notnull\",{\"3\":{\"229\":1}}],[\"notice\",{\"3\":{\"179\":1}}],[\"noticed\",{\"3\":{\"179\":2}}],[\"notificationemitter\",{\"3\":{\"233\":1}}],[\"notification\",{\"3\":{\"137\":1}}],[\"note2=\",{\"3\":{\"179\":1}}],[\"note1=\",{\"3\":{\"179\":1}}],[\"note\",{\"3\":{\"116\":1,\"179\":1}}],[\"notfound\",{\"3\":{\"71\":1}}],[\"not\",{\"3\":{\"54\":3,\"71\":1,\"87\":3,\"114\":1,\"115\":1,\"116\":1,\"138\":1,\"151\":1,\"153\":1,\"157\":1,\"179\":10,\"229\":1,\"235\":2,\"238\":1}}],[\"nonblocking\",{\"3\":{\"185\":1}}],[\"non\",{\"3\":{\"48\":1}}],[\"nohup\",{\"3\":{\"30\":1}}],[\"nodelay\",{\"3\":{\"198\":1}}],[\"nodejs\",{\"3\":{\"116\":3}}],[\"nodev0\",{\"3\":{\"115\":2}}],[\"node\",{\"0\":{\"116\":1},\"2\":{\"116\":1},\"3\":{\"28\":2,\"29\":1,\"110\":7,\"111\":1,\"115\":14,\"116\":4}}],[\"no\",{\"3\":{\"25\":1,\"42\":5,\"71\":1,\"72\":1,\"86\":1,\"114\":1,\"151\":1,\"229\":1,\"232\":1}}],[\"huge\",{\"3\":{\"179\":1}}],[\"hundreds\",{\"3\":{\"88\":1}}],[\"highlight\",{\"3\":{\"212\":1,\"213\":2}}],[\"higher\",{\"3\":{\"179\":1}}],[\"highgui\",{\"3\":{\"77\":1}}],[\"html\",{\"3\":{\"178\":2,\"238\":5}}],[\"http11processor\",{\"3\":{\"238\":2}}],[\"http11inputbuffer\",{\"3\":{\"238\":2}}],[\"http11\",{\"3\":{\"238\":2}}],[\"http\",{\"3\":{\"26\":3,\"28\":1,\"29\":1,\"30\":1,\"43\":1,\"88\":1,\"109\":1,\"117\":1,\"119\":1,\"203\":1,\"223\":1,\"238\":1}}],[\"https\",{\"3\":{\"25\":1,\"26\":2,\"43\":1,\"60\":1,\"78\":2,\"79\":1,\"81\":1,\"86\":1,\"109\":1,\"113\":2,\"117\":1,\"180\":1,\"200\":4,\"201\":2,\"223\":1}}],[\"hh\",{\"3\":{\"157\":1,\"212\":1,\"213\":1,\"218\":1,\"219\":1}}],[\"h左右\",{\"3\":{\"78\":1}}],[\"hadoop\",{\"3\":{\"184\":1}}],[\"hard\",{\"3\":{\"179\":1}}],[\"happen\",{\"3\":{\"179\":1}}],[\"having\",{\"3\":{\"153\":1,\"179\":1}}],[\"have\",{\"3\":{\"151\":1,\"154\":1,\"156\":1,\"179\":2}}],[\"handlesubclassexception\",{\"3\":{\"225\":1}}],[\"handler\",{\"3\":{\"197\":8}}],[\"handlers\",{\"3\":{\"137\":1}}],[\"hans\",{\"3\":{\"78\":1}}],[\"hash\",{\"3\":{\"77\":1}}],[\"has\",{\"3\":{\"25\":1,\"46\":1,\"138\":1,\"152\":1,\"154\":1,\"162\":1,\"179\":1,\"206\":1,\"225\":1}}],[\"hfs\",{\"3\":{\"77\":1}}],[\"hdf\",{\"3\":{\"77\":1}}],[\"hobbyist\",{\"3\":{\"118\":1}}],[\"however\",{\"3\":{\"155\":1}}],[\"how\",{\"3\":{\"108\":1,\"179\":2}}],[\"home=\",{\"3\":{\"225\":1}}],[\"home\",{\"3\":{\"49\":1,\"50\":3,\"51\":1,\"67\":1,\"78\":1,\"83\":4,\"113\":3,\"122\":1,\"219\":2,\"225\":2}}],[\"host对象有一个属性叫做appbase\",{\"3\":{\"225\":1}}],[\"hostname\",{\"3\":{\"41\":1,\"226\":2}}],[\"host\",{\"3\":{\"32\":2,\"41\":1,\"226\":7,\"229\":2,\"232\":3,\"234\":2}}],[\"h\",{\"3\":{\"32\":4,\"33\":2,\"51\":1,\"66\":3,\"67\":3}}],[\"headers\",{\"3\":{\"87\":1}}],[\"header\",{\"3\":{\"75\":1,\"151\":2}}],[\"hello\",{\"3\":{\"54\":1,\"57\":1}}],[\"help可以看到对应命令\",{\"3\":{\"54\":1}}],[\"help\",{\"3\":{\"31\":1,\"45\":2,\"46\":3,\"72\":1}}],[\"helper\",{\"3\":{\"26\":1}}],[\"here\",{\"3\":{\"29\":1,\"42\":1,\"179\":1}}],[\"flow\",{\"3\":{\"238\":1}}],[\"flag\",{\"3\":{\"151\":1}}],[\"flavor\",{\"3\":{\"81\":1}}],[\"flann\",{\"3\":{\"77\":1}}],[\"ftl\",{\"3\":{\"238\":2}}],[\"fname=\",{\"3\":{\"238\":1}}],[\"fprintf\",{\"3\":{\"151\":2}}],[\"few\",{\"3\":{\"152\":1}}],[\"feedback\",{\"3\":{\"114\":1}}],[\"features2d\",{\"3\":{\"77\":1}}],[\"ffmpeg\",{\"0\":{\"85\":1},\"2\":{\"85\":1},\"3\":{\"85\":1}}],[\"fdiagnostics\",{\"3\":{\"81\":1}}],[\"fdisk\",{\"3\":{\"45\":2,\"46\":2}}],[\"fwlink\",{\"3\":{\"79\":1,\"81\":1}}],[\"fuzhengwei\",{\"3\":{\"200\":2}}],[\"fuzzy\",{\"3\":{\"77\":1}}],[\"future\",{\"0\":{\"190\":1},\"2\":{\"190\":1},\"3\":{\"198\":2}}],[\"further\",{\"3\":{\"179\":1}}],[\"func\",{\"3\":{\"74\":3}}],[\"functionalinterface\",{\"3\":{\"234\":1}}],[\"function\",{\"3\":{\"74\":2}}],[\"framework\",{\"3\":{\"174\":1}}],[\"fragments\",{\"3\":{\"141\":1}}],[\"free\",{\"3\":{\"162\":1}}],[\"freetype\",{\"3\":{\"77\":1}}],[\"from\",{\"3\":{\"29\":1,\"108\":2,\"113\":1,\"114\":1,\"151\":1,\"155\":1,\"162\":1,\"179\":4}}],[\"follows\",{\"3\":{\"179\":1}}],[\"following\",{\"3\":{\"72\":1,\"87\":1,\"113\":1,\"114\":1,\"115\":1,\"150\":1,\"177\":1,\"178\":1,\"179\":1}}],[\"folder\",{\"3\":{\"154\":1}}],[\"fopen\",{\"3\":{\"151\":2}}],[\"found\",{\"3\":{\"76\":1,\"114\":1,\"179\":2,\"238\":1}}],[\"foo\",{\"3\":{\"73\":2}}],[\"foreach\",{\"3\":{\"234\":1}}],[\"forkcount>\",{\"3\":{\"179\":1}}],[\"fork\",{\"3\":{\"179\":1}}],[\"forkstarter\",{\"3\":{\"179\":6}}],[\"forked\",{\"3\":{\"179\":3}}],[\"forward\",{\"3\":{\"155\":1}}],[\"forwarding\",{\"0\":{\"155\":1},\"2\":{\"155\":1}}],[\"form\",{\"3\":{\"151\":1}}],[\"format\",{\"3\":{\"87\":1,\"157\":1}}],[\"for\",{\"0\":{\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1},\"2\":{\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1},\"3\":{\"31\":1,\"45\":2,\"46\":3,\"72\":1,\"79\":1,\"81\":1,\"87\":2,\"88\":1,\"108\":1,\"111\":1,\"114\":1,\"115\":2,\"116\":1,\"155\":1,\"162\":2,\"179\":3,\"202\":1,\"208\":1,\"233\":1,\"234\":2}}],[\"force\",{\"3\":{\"25\":1,\"151\":1}}],[\"fstab\",{\"3\":{\"50\":1}}],[\"fstab文件\",{\"3\":{\"50\":1}}],[\"factory\",{\"3\":{\"228\":4,\"234\":2,\"238\":2}}],[\"facade\",{\"3\":{\"202\":1}}],[\"face\",{\"3\":{\"77\":1}}],[\"fail\",{\"3\":{\"179\":1,\"238\":1}}],[\"failed\",{\"3\":{\"179\":3,\"225\":1}}],[\"failuredetails=\",{\"3\":{\"179\":1}}],[\"failures=\",{\"3\":{\"179\":1}}],[\"failures\",{\"3\":{\"179\":2}}],[\"failure\",{\"3\":{\"179\":1}}],[\"fails\",{\"3\":{\"179\":1}}],[\"failsafe\",{\"0\":{\"177\":1},\"2\":{\"177\":1},\"3\":{\"175\":1,\"177\":3,\"179\":3}}],[\"faq\",{\"0\":{\"161\":1,\"179\":1,\"238\":1},\"2\":{\"161\":1,\"179\":1,\"238\":1}}],[\"fastjson\",{\"3\":{\"147\":1}}],[\"favorites\",{\"3\":{\"82\":3}}],[\"false表示可以进入第三方库\",{\"3\":{\"79\":1,\"81\":1}}],[\"false\",{\"3\":{\"71\":1,\"81\":2,\"151\":4,\"208\":1,\"213\":1,\"218\":1,\"225\":3,\"229\":1,\"233\":1,\"238\":2}}],[\"fadb733c53a6\",{\"3\":{\"46\":1}}],[\"fatal\",{\"3\":{\"25\":1,\"203\":1}}],[\"f表示查看空闲的磁盘\",{\"3\":{\"45\":1}}],[\"f\",{\"3\":{\"33\":2,\"45\":1,\"48\":1}}],[\"fi\",{\"3\":{\"225\":1}}],[\"filter>\",{\"3\":{\"221\":1,\"222\":1}}],[\"filter\",{\"0\":{\"220\":1},\"2\":{\"220\":1},\"3\":{\"221\":1,\"222\":1}}],[\"file2\",{\"3\":{\"238\":1}}],[\"file>\",{\"3\":{\"214\":1,\"216\":1}}],[\"fileappender\",{\"0\":{\"214\":1},\"2\":{\"214\":1},\"3\":{\"214\":1}}],[\"filenamepattern>\",{\"3\":{\"216\":1,\"218\":1,\"219\":1}}],[\"filenamepattern\",{\"3\":{\"216\":1,\"218\":1}}],[\"filename\",{\"3\":{\"151\":5}}],[\"fileextname\",{\"3\":{\"83\":1}}],[\"filebasename\",{\"3\":{\"83\":1}}],[\"filebasenamenoextension\",{\"3\":{\"81\":2,\"83\":1}}],[\"filedirname\",{\"3\":{\"81\":3,\"83\":1}}],[\"files>\",{\"3\":{\"151\":1}}],[\"filesystem\",{\"3\":{\"46\":4,\"47\":3,\"51\":1}}],[\"files\",{\"3\":{\"29\":1,\"48\":1,\"87\":4,\"150\":2,\"152\":2,\"153\":1,\"154\":1,\"156\":1,\"179\":1,\"238\":1}}],[\"file\",{\"3\":{\"28\":1,\"45\":1,\"46\":1,\"71\":1,\"73\":2,\"79\":2,\"81\":3,\"83\":1,\"113\":1,\"150\":1,\"151\":38,\"152\":1,\"154\":6,\"155\":3,\"156\":2,\"157\":5,\"208\":5,\"214\":2,\"216\":2,\"218\":2,\"219\":1,\"232\":1,\"238\":6}}],[\"fixedwindowrollingpolicy\",{\"0\":{\"216\":1},\"2\":{\"216\":1},\"3\":{\"216\":1}}],[\"firein\",{\"3\":{\"197\":1}}],[\"firechannelread\",{\"3\":{\"197\":1}}],[\"first\",{\"3\":{\"29\":1,\"46\":1,\"61\":2,\"63\":5,\"64\":1,\"65\":2,\"115\":1}}],[\"five\",{\"3\":{\"152\":1,\"153\":2,\"154\":1}}],[\"final\",{\"3\":{\"198\":1,\"225\":2,\"229\":1,\"234\":2,\"235\":2,\"238\":1}}],[\"financeproduct\",{\"3\":{\"179\":7}}],[\"finished\",{\"3\":{\"138\":2}}],[\"findchildren\",{\"3\":{\"226\":2}}],[\"findservices\",{\"3\":{\"226\":2}}],[\"find\",{\"0\":{\"76\":1},\"2\":{\"76\":1},\"3\":{\"76\":2,\"77\":2}}],[\"udp和http协议栈\",{\"3\":{\"184\":1}}],[\"u4ef6\",{\"3\":{\"179\":1}}],[\"u4e86\",{\"3\":{\"179\":1}}],[\"u4eec\",{\"3\":{\"179\":1}}],[\"u4e0d\",{\"3\":{\"179\":1}}],[\"u4fdd\",{\"3\":{\"179\":2}}],[\"u4f7f\",{\"3\":{\"179\":1}}],[\"u4f8b\",{\"3\":{\"179\":1}}],[\"uff0c\",{\"3\":{\"179\":3}}],[\"uff1a\",{\"3\":{\"179\":2}}],[\"u800c\",{\"3\":{\"179\":1}}],[\"u8017\",{\"3\":{\"179\":1}}],[\"u884c\",{\"3\":{\"179\":1}}],[\"u8fdb\",{\"3\":{\"179\":1}}],[\"u8fc7\",{\"3\":{\"179\":1}}],[\"u8a00\",{\"3\":{\"179\":1}}],[\"u8df3\",{\"3\":{\"179\":1}}],[\"u8d25\",{\"3\":{\"179\":2}}],[\"u8ba1\",{\"3\":{\"179\":2}}],[\"u8be6\",{\"3\":{\"179\":1}}],[\"u8bef\",{\"3\":{\"179\":2}}],[\"u8bd5\",{\"3\":{\"179\":7}}],[\"u96c6\",{\"3\":{\"179\":1}}],[\"u9669\",{\"3\":{\"179\":2}}],[\"u969c\",{\"3\":{\"179\":3}}],[\"u9012\",{\"3\":{\"179\":1}}],[\"u9884\",{\"3\":{\"179\":1}}],[\"u9879\",{\"3\":{\"179\":2}}],[\"u9519\",{\"3\":{\"179\":2}}],[\"u91cf\",{\"3\":{\"179\":5}}],[\"u3002\",{\"3\":{\"179\":4}}],[\"u7b97\",{\"3\":{\"179\":1}}],[\"u7edf\",{\"3\":{\"179\":1}}],[\"u7ed3\",{\"3\":{\"179\":4}}],[\"u7528\",{\"3\":{\"179\":2}}],[\"u7c7b\",{\"3\":{\"179\":1}}],[\"u7387\",{\"3\":{\"179\":1}}],[\"u7684\",{\"3\":{\"179\":6}}],[\"u76ee\",{\"3\":{\"179\":2}}],[\"u636e\",{\"3\":{\"179\":1}}],[\"u68c0\",{\"3\":{\"179\":1}}],[\"u6709\",{\"3\":{\"179\":1}}],[\"u67e5\",{\"3\":{\"179\":1}}],[\"u671f\",{\"3\":{\"179\":1}}],[\"u679c\",{\"3\":{\"179\":2}}],[\"u662f\",{\"3\":{\"179\":4}}],[\"u610f\",{\"3\":{\"179\":3}}],[\"u6ce8\",{\"3\":{\"179\":2}}],[\"u60c5\",{\"3\":{\"179\":1}}],[\"u603b\",{\"3\":{\"179\":2}}],[\"u6e05\",{\"3\":{\"179\":1}}],[\"u65ad\",{\"3\":{\"179\":1}}],[\"u6545\",{\"3\":{\"179\":3}}],[\"u65f6\",{\"3\":{\"179\":1}}],[\"u6570\",{\"3\":{\"179\":6}}],[\"u6240\",{\"3\":{\"179\":1}}],[\"u6210\",{\"3\":{\"179\":2}}],[\"u62a5\",{\"3\":{\"179\":4}}],[\"u6d4b\",{\"3\":{\"179\":7}}],[\"u5b83\",{\"3\":{\"179\":1}}],[\"u5f52\",{\"3\":{\"179\":1}}],[\"u5957\",{\"3\":{\"179\":1}}],[\"u5916\",{\"3\":{\"179\":1}}],[\"u5931\",{\"3\":{\"179\":2}}],[\"u5e76\",{\"3\":{\"179\":1}}],[\"u540d\",{\"3\":{\"179\":3}}],[\"u544a\",{\"3\":{\"179\":4}}],[\"u53ea\",{\"3\":{\"179\":1}}],[\"u5305\",{\"3\":{\"179\":3}}],[\"u5355\",{\"3\":{\"179\":3}}],[\"u529f\",{\"3\":{\"179\":1}}],[\"u5143\",{\"3\":{\"179\":2}}],[\"utf\",{\"3\":{\"137\":1,\"208\":2,\"216\":1}}],[\"util\",{\"3\":{\"45\":1,\"46\":1,\"238\":12}}],[\"uintx\",{\"3\":{\"151\":1}}],[\"ui\",{\"3\":{\"136\":1}}],[\"upgrading\",{\"3\":{\"179\":1}}],[\"upon\",{\"3\":{\"179\":3}}],[\"upload\",{\"3\":{\"156\":1}}],[\"updating\",{\"0\":{\"112\":1},\"2\":{\"112\":1}}],[\"update\",{\"0\":{\"113\":1},\"2\":{\"113\":1},\"3\":{\"86\":1,\"113\":1}}],[\"up\",{\"0\":{\"154\":1},\"2\":{\"154\":1},\"3\":{\"108\":2,\"114\":1,\"152\":1,\"153\":1,\"154\":1}}],[\"upstream\",{\"3\":{\"25\":3}}],[\"uuid\",{\"3\":{\"47\":1}}],[\"umount\",{\"3\":{\"45\":1,\"46\":1,\"50\":1}}],[\"unable\",{\"3\":{\"228\":1}}],[\"unless\",{\"3\":{\"179\":1}}],[\"unstable\",{\"3\":{\"115\":2}}],[\"unit\",{\"3\":{\"179\":1}}],[\"units\",{\"3\":{\"45\":1,\"46\":1}}],[\"unique\",{\"3\":{\"157\":1}}],[\"unix\",{\"3\":{\"111\":1}}],[\"uninstalled\",{\"3\":{\"87\":1}}],[\"unpack\",{\"3\":{\"86\":1}}],[\"unpartitioned\",{\"3\":{\"45\":1}}],[\"unzip\",{\"3\":{\"86\":2}}],[\"unwrapping\",{\"3\":{\"77\":1}}],[\"unwritten\",{\"3\":{\"45\":1}}],[\"until\",{\"3\":{\"45\":1,\"46\":1,\"225\":1}}],[\"unknown\",{\"3\":{\"31\":1}}],[\"ubuntu安装环境\",{\"0\":{\"80\":1},\"2\":{\"80\":1}}],[\"ubuntu上请执行\",{\"3\":{\"60\":1}}],[\"ubuntu\",{\"1\":{\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1},\"3\":{\"51\":2,\"86\":1}}],[\"ubuntu开启ssh远程登录\",{\"0\":{\"37\":1},\"2\":{\"37\":1}}],[\"u\",{\"3\":{\"32\":4,\"33\":2}}],[\"us\",{\"3\":{\"179\":1}}],[\"usr\",{\"3\":{\"75\":1,\"77\":1,\"81\":2,\"87\":7}}],[\"usegclogfilerotation\",{\"0\":{\"152\":1},\"3\":{\"150\":1,\"151\":6}}],[\"useful\",{\"3\":{\"116\":1}}],[\"used\",{\"3\":{\"51\":1}}],[\"use\",{\"0\":{\"116\":1},\"2\":{\"116\":1},\"3\":{\"45\":1,\"46\":1,\"51\":1,\"108\":3,\"110\":3,\"113\":1,\"115\":4,\"116\":3,\"150\":2,\"151\":1,\"155\":2,\"176\":1,\"177\":1,\"179\":2}}],[\"users\",{\"3\":{\"32\":2,\"39\":1,\"41\":1,\"87\":1}}],[\"user=exporter\",{\"3\":{\"30\":1}}],[\"user\",{\"3\":{\"26\":1,\"30\":1,\"41\":1,\"51\":1,\"87\":2,\"111\":1,\"118\":1,\"200\":2}}],[\"using\",{\"0\":{\"109\":1},\"2\":{\"109\":1},\"3\":{\"45\":1,\"46\":1,\"81\":1,\"87\":1,\"110\":3,\"115\":1,\"116\":1,\"136\":1,\"156\":1,\"162\":1,\"178\":1}}],[\"usage\",{\"0\":{\"115\":1,\"117\":1},\"2\":{\"115\":1,\"117\":1},\"3\":{\"32\":1,\"175\":1}}],[\"urlmappings\",{\"3\":{\"235\":1}}],[\"urlmapping\",{\"3\":{\"235\":5}}],[\"url\",{\"3\":{\"25\":1,\"119\":1}}],[\"切换到新的分支\",{\"3\":{\"25\":1}}],[\"删除旧文件时\",{\"3\":{\"218\":1}}],[\"删除之前的旧文件\",{\"3\":{\"218\":1}}],[\"删除分支\",{\"3\":{\"25\":1}}],[\"删除远程仓库\",{\"3\":{\"25\":1}}],[\"djava\",{\"3\":{\"225\":1}}],[\"dcatalina\",{\"3\":{\"225\":2}}],[\"dcmake\",{\"3\":{\"87\":1}}],[\"d$endorsed\",{\"3\":{\"225\":1}}],[\"d可以包含一个\",{\"3\":{\"218\":1}}],[\"d转换符\",{\"3\":{\"218\":1}}],[\"d表示日期\",{\"3\":{\"212\":1,\"213\":1}}],[\"d表示删除分区\",{\"3\":{\"45\":1}}],[\"dlogging\",{\"3\":{\"207\":1}}],[\"dlinkxref=false\",{\"3\":{\"178\":1}}],[\"dropped\",{\"3\":{\"179\":1}}],[\"dd\",{\"3\":{\"157\":1,\"212\":1,\"213\":1,\"218\":2,\"219\":2,\"233\":1}}],[\"dubbo协议默认使用netty作为基础通信组件\",{\"3\":{\"184\":1}}],[\"during\",{\"3\":{\"179\":2}}],[\"dumpstream\",{\"3\":{\"179\":1}}],[\"dump\",{\"3\":{\"151\":2,\"179\":3}}],[\"due\",{\"3\":{\"87\":1,\"151\":1}}],[\"dpm\",{\"3\":{\"77\":1}}],[\"daemonlock\",{\"3\":{\"225\":1}}],[\"daemon\",{\"3\":{\"225\":7}}],[\"daily\",{\"3\":{\"219\":1}}],[\"date\",{\"3\":{\"179\":3,\"198\":1}}],[\"database\",{\"3\":{\"108\":1}}],[\"datasets\",{\"3\":{\"77\":1}}],[\"daggregate=true\",{\"3\":{\"178\":1}}],[\"dash\",{\"3\":{\"111\":1}}],[\"dashboards\",{\"3\":{\"27\":1}}],[\"dnn\",{\"3\":{\"77\":3}}],[\"d是b的private依赖项\",{\"3\":{\"68\":1}}],[\"dynamicregistrationbean<servletregistration\",{\"3\":{\"235\":1}}],[\"dynamicregistrationbean<d\",{\"3\":{\"235\":1}}],[\"dynamic>\",{\"3\":{\"235\":2}}],[\"dynamic\",{\"3\":{\"67\":2,\"231\":3,\"235\":2}}],[\"dylib\",{\"3\":{\"55\":1}}],[\"df\",{\"3\":{\"51\":1}}],[\"did\",{\"3\":{\"179\":2}}],[\"different\",{\"3\":{\"110\":1,\"114\":1,\"154\":1,\"179\":1}}],[\"diffusion安装教程\",{\"1\":{\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1}}],[\"diffusion\",{\"1\":{\"132\":1},\"3\":{\"52\":1}}],[\"dir=\",{\"3\":{\"113\":1}}],[\"dirs\",{\"3\":{\"77\":3,\"225\":1}}],[\"directories\",{\"3\":{\"66\":6,\"67\":1,\"73\":1}}],[\"directory\",{\"3\":{\"48\":2,\"86\":1,\"87\":3,\"179\":1}}],[\"dir\",{\"3\":{\"66\":8,\"67\":6,\"72\":3,\"73\":2,\"76\":1,\"113\":2}}],[\"dispatcher\",{\"3\":{\"235\":2}}],[\"dispatcherservletregistration\",{\"3\":{\"235\":1}}],[\"dispatcherservletregistrationbean\",{\"3\":{\"235\":3}}],[\"dispatcherservletregistrationconfiguration\",{\"3\":{\"235\":1}}],[\"dispatcherservlet\",{\"3\":{\"235\":6}}],[\"dispatcherservletconfiguration\",{\"3\":{\"235\":1}}],[\"dispatcherservletautoconfiguration\",{\"3\":{\"235\":1}}],[\"dispatcherservlet如何加载到tomcat容器\",{\"0\":{\"235\":1},\"2\":{\"235\":1}}],[\"dispatcherservlet是如何加载到tomcat容器的\",{\"3\":{\"224\":1}}],[\"dist\",{\"3\":{\"116\":2}}],[\"distinct\",{\"3\":{\"108\":1}}],[\"discover\",{\"3\":{\"108\":1}}],[\"disassembly\",{\"3\":{\"81\":1}}],[\"disabled\",{\"3\":{\"235\":1}}],[\"disable\",{\"3\":{\"42\":2}}],[\"disks\",{\"3\":{\"46\":1}}],[\"disklabel\",{\"3\":{\"46\":1}}],[\"disk\",{\"3\":{\"45\":2,\"46\":5}}],[\"dorun\",{\"3\":{\"238\":1}}],[\"don\",{\"3\":{\"225\":1}}],[\"done\",{\"3\":{\"47\":4}}],[\"down\",{\"3\":{\"118\":1}}],[\"downloads\",{\"3\":{\"88\":1,\"113\":1}}],[\"download\",{\"3\":{\"78\":1,\"86\":1,\"113\":1,\"115\":1}}],[\"doubles\",{\"3\":{\"118\":1}}],[\"does\",{\"3\":{\"87\":2,\"179\":1}}],[\"documentroot\",{\"3\":{\"232\":2}}],[\"documentation\",{\"0\":{\"175\":1},\"2\":{\"175\":1},\"3\":{\"88\":1}}],[\"documents\",{\"3\":{\"67\":1}}],[\"docker\",{\"3\":{\"27\":4}}],[\"do\",{\"3\":{\"45\":1,\"54\":3,\"87\":1,\"113\":1,\"115\":1,\"151\":1,\"179\":1}}],[\"detect\",{\"3\":{\"179\":1}}],[\"details\",{\"3\":{\"87\":1,\"201\":1}}],[\"detail\",{\"3\":{\"81\":1}}],[\"deleted\",{\"3\":{\"153\":1}}],[\"dee51094\",{\"0\":{\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1}}],[\"deprecated\",{\"3\":{\"115\":1}}],[\"dependency>\",{\"3\":{\"205\":1}}],[\"dependencies\",{\"3\":{\"72\":1,\"117\":1,\"147\":1}}],[\"depend\",{\"3\":{\"72\":1}}],[\"debug=\",{\"3\":{\"213\":1}}],[\"debug\",{\"3\":{\"140\":1,\"203\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"214\":1,\"216\":1,\"221\":2,\"222\":1,\"238\":1}}],[\"debuger配置\",{\"3\":{\"79\":1}}],[\"debug>\",{\"3\":{\"73\":1}}],[\"described\",{\"3\":{\"155\":1}}],[\"descriptor\",{\"3\":{\"77\":1}}],[\"description=\",{\"3\":{\"179\":2}}],[\"description\",{\"3\":{\"63\":1,\"64\":1,\"81\":2,\"179\":1,\"235\":7}}],[\"description是项目描述\",{\"3\":{\"63\":1}}],[\"desired\",{\"3\":{\"115\":1}}],[\"designed\",{\"3\":{\"111\":1}}],[\"destination\",{\"3\":{\"75\":4}}],[\"demos\",{\"3\":{\"200\":1}}],[\"demo\",{\"3\":{\"69\":1,\"70\":1,\"71\":1,\"72\":9,\"75\":2,\"76\":2,\"77\":1,\"79\":1,\"81\":1,\"200\":2}}],[\"defined\",{\"3\":{\"238\":2}}],[\"defined等\",{\"3\":{\"71\":1}}],[\"define\",{\"3\":{\"176\":1,\"179\":1}}],[\"define进行宏展开\",{\"3\":{\"54\":1}}],[\"defaulthost=\",{\"3\":{\"238\":1}}],[\"default生命周期\",{\"0\":{\"163\":1},\"2\":{\"163\":1}}],[\"defaultextensionns=\",{\"3\":{\"145\":2}}],[\"defaultstream\",{\"3\":{\"151\":2}}],[\"defaults\",{\"3\":{\"29\":2,\"50\":1,\"208\":1}}],[\"default\",{\"3\":{\"29\":3,\"46\":3,\"72\":1,\"87\":1,\"115\":4,\"116\":1,\"179\":1,\"235\":3}}],[\"dec\",{\"3\":{\"47\":1,\"48\":1}}],[\"decide\",{\"3\":{\"45\":1,\"46\":1}}],[\"devops\",{\"3\":{\"155\":1}}],[\"development\",{\"3\":{\"108\":1,\"136\":1,\"141\":1}}],[\"developers\",{\"3\":{\"108\":2,\"152\":1}}],[\"device\",{\"3\":{\"46\":1}}],[\"dev\",{\"3\":{\"45\":2,\"46\":6,\"47\":2,\"48\":2,\"50\":2,\"51\":4,\"57\":1,\"77\":1}}],[\"denied\",{\"3\":{\"42\":1}}],[\"d2f82416\",{\"0\":{\"35\":1,\"36\":1}}],[\"d\",{\"0\":{\"156\":1},\"2\":{\"156\":1},\"3\":{\"25\":1,\"27\":2,\"33\":1,\"68\":3,\"151\":2,\"208\":1,\"212\":1,\"213\":1,\"218\":4,\"219\":2,\"235\":1}}],[\"ae\",{\"3\":{\"238\":1}}],[\"a0\",{\"3\":{\"238\":1}}],[\"audit\",{\"3\":{\"179\":1}}],[\"autostart\",{\"3\":{\"229\":3}}],[\"automatic\",{\"0\":{\"127\":1,\"128\":1},\"2\":{\"127\":1,\"128\":1}}],[\"automatically\",{\"3\":{\"87\":1}}],[\"autodl\",{\"3\":{\"78\":1}}],[\"autodl地址\",{\"3\":{\"78\":1}}],[\"autodl示例\",{\"3\":{\"78\":1}}],[\"authorized\",{\"3\":{\"40\":2}}],[\"achieved\",{\"3\":{\"157\":1}}],[\"active\",{\"3\":{\"155\":1}}],[\"accept其中之一\",{\"3\":{\"220\":1}}],[\"accessed\",{\"3\":{\"138\":1}}],[\"access\",{\"3\":{\"108\":1,\"203\":1}}],[\"account添加了头文件引用路径\",{\"3\":{\"66\":1}}],[\"account为最终生成的库文件名\",{\"3\":{\"66\":1}}],[\"account\",{\"3\":{\"66\":32,\"67\":23}}],[\"accounting\",{\"3\":{\"47\":1}}],[\"according\",{\"3\":{\"29\":1}}],[\"avoid\",{\"0\":{\"152\":1},\"2\":{\"152\":1}}],[\"available\",{\"3\":{\"115\":1,\"136\":1}}],[\"avail\",{\"3\":{\"51\":1}}],[\"a3f8969a\",{\"0\":{\"119\":1,\"120\":1,\"121\":1,\"122\":1}}],[\"api\",{\"3\":{\"205\":1}}],[\"api使你可以很方便地更换成其它日志系统如log4j或jdk14\",{\"3\":{\"203\":1}}],[\"apache\",{\"0\":{\"174\":1},\"2\":{\"174\":1},\"3\":{\"174\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":10,\"225\":2,\"238\":14}}],[\"append>\",{\"3\":{\"214\":1}}],[\"appender>\",{\"3\":{\"213\":1,\"214\":1,\"216\":1,\"218\":1,\"219\":1,\"221\":1,\"222\":1}}],[\"appender有两个必要属性name和class\",{\"3\":{\"212\":1}}],[\"appender标签\",{\"0\":{\"212\":1},\"2\":{\"212\":1}}],[\"appender\",{\"3\":{\"208\":2}}],[\"appear\",{\"3\":{\"179\":1}}],[\"appears\",{\"3\":{\"179\":1}}],[\"approach\",{\"3\":{\"152\":1,\"155\":1}}],[\"applicationcontext\",{\"3\":{\"233\":1}}],[\"applicationcontextexception\",{\"3\":{\"228\":2}}],[\"application\",{\"3\":{\"140\":1,\"153\":1,\"154\":3}}],[\"applies\",{\"3\":{\"115\":1}}],[\"apple\",{\"0\":{\"129\":1},\"2\":{\"129\":1}}],[\"apt\",{\"3\":{\"37\":1,\"57\":2,\"60\":1,\"77\":1,\"80\":4,\"85\":1,\"86\":2}}],[\"aggregator\",{\"3\":{\"174\":1}}],[\"again\",{\"3\":{\"114\":1}}],[\"age\",{\"3\":{\"57\":1}}],[\"agentmojo\",{\"0\":{\"160\":1},\"2\":{\"160\":1}}],[\"agent\",{\"3\":{\"29\":1}}],[\"after\",{\"3\":{\"114\":2,\"151\":1,\"154\":1}}],[\"abstractendpoint\",{\"3\":{\"238\":2}}],[\"abstractprotocol\",{\"3\":{\"238\":1}}],[\"abstractprotocol$connectionhandler\",{\"3\":{\"238\":1}}],[\"abstractprocessorlight\",{\"3\":{\"238\":2}}],[\"abstractservletwebserverfactory\",{\"3\":{\"229\":1,\"232\":1,\"234\":1}}],[\"abstractsurefiremojo\",{\"3\":{\"179\":6}}],[\"abstract\",{\"3\":{\"225\":3,\"235\":2}}],[\"abstractloggingsystem类\",{\"3\":{\"206\":1}}],[\"abstracttestproxy\",{\"3\":{\"146\":1}}],[\"above\",{\"3\":{\"113\":1,\"152\":1}}],[\"about\",{\"0\":{\"108\":1,\"111\":1,\"174\":1},\"2\":{\"108\":1,\"111\":1,\"174\":1},\"3\":{\"179\":1}}],[\"abe3\",{\"3\":{\"47\":1}}],[\"attr\",{\"3\":{\"233\":1}}],[\"attached\",{\"3\":{\"179\":1}}],[\"attempts\",{\"3\":{\"113\":1}}],[\"at\",{\"3\":{\"86\":1,\"150\":1,\"151\":1,\"157\":1,\"179\":7,\"238\":17}}],[\"arrays\",{\"3\":{\"234\":1}}],[\"arraylist<>\",{\"3\":{\"234\":1}}],[\"article\",{\"3\":{\"201\":1}}],[\"artifactid>\",{\"3\":{\"176\":1,\"177\":1,\"178\":1,\"179\":3,\"205\":1}}],[\"arbitrary\",{\"3\":{\"115\":1}}],[\"aruco\",{\"3\":{\"77\":1}}],[\"archive\",{\"3\":{\"75\":1,\"86\":1}}],[\"argument\",{\"3\":{\"152\":1}}],[\"arguments\",{\"3\":{\"31\":1,\"151\":2,\"225\":1}}],[\"arg\",{\"3\":{\"86\":1}}],[\"args\",{\"3\":{\"81\":2,\"198\":1,\"225\":2}}],[\"arg2\",{\"3\":{\"74\":2}}],[\"arg1\",{\"3\":{\"74\":2}}],[\"are\",{\"3\":{\"72\":1,\"115\":1,\"154\":1,\"155\":2,\"179\":2,\"238\":2}}],[\"a链接给对象test\",{\"3\":{\"66\":1}}],[\"a和b在运行时\",{\"3\":{\"55\":2}}],[\"a打包到该工程的输出文件中\",{\"3\":{\"55\":1}}],[\"a代表archive\",{\"3\":{\"55\":1}}],[\"alwaysmapurl\",{\"3\":{\"235\":1}}],[\"already\",{\"3\":{\"235\":1}}],[\"alt\",{\"3\":{\"233\":1}}],[\"altddname\",{\"3\":{\"233\":2}}],[\"alternatively\",{\"3\":{\"114\":1}}],[\"altered\",{\"3\":{\"46\":1}}],[\"also\",{\"3\":{\"115\":1,\"178\":1,\"179\":1}}],[\"alibaba\",{\"3\":{\"147\":1}}],[\"aliases\",{\"3\":{\"115\":1}}],[\"alias\",{\"3\":{\"115\":5}}],[\"alice\",{\"3\":{\"57\":1}}],[\"algorithms\",{\"3\":{\"88\":1}}],[\"allows\",{\"3\":{\"110\":1}}],[\"allow\",{\"3\":{\"86\":1}}],[\"allocating\",{\"3\":{\"47\":1}}],[\"all\",{\"3\":{\"45\":3,\"46\":2,\"72\":1,\"87\":1,\"115\":1,\"136\":1,\"153\":2,\"154\":1,\"157\":1,\"179\":1,\"203\":1,\"210\":1,\"211\":1}}],[\"alerting\",{\"3\":{\"29\":1}}],[\"alertmanagers\",{\"3\":{\"29\":1}}],[\"alertmanager\",{\"3\":{\"29\":2}}],[\"another\",{\"3\":{\"179\":2}}],[\"answer\",{\"3\":{\"179\":3}}],[\"analyze\",{\"3\":{\"156\":1}}],[\"an\",{\"3\":{\"88\":1,\"115\":2,\"118\":1,\"140\":1,\"154\":1,\"179\":1}}],[\"any\",{\"3\":{\"29\":1,\"111\":1,\"115\":2,\"179\":2}}],[\"and\",{\"0\":{\"112\":1,\"126\":1},\"2\":{\"112\":1,\"126\":1},\"3\":{\"25\":1,\"29\":1,\"45\":1,\"46\":2,\"47\":2,\"48\":1,\"54\":1,\"71\":1,\"86\":1,\"87\":2,\"88\":1,\"108\":5,\"110\":1,\"111\":2,\"113\":3,\"114\":1,\"115\":4,\"141\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"162\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":6,\"238\":2}}],[\"advantage\",{\"3\":{\"152\":1}}],[\"admin\",{\"3\":{\"27\":1}}],[\"addvalve\",{\"3\":{\"238\":1}}],[\"addcontextcustomizers\",{\"3\":{\"238\":1}}],[\"addchild\",{\"3\":{\"226\":1,\"232\":1}}],[\"addmapping\",{\"3\":{\"235\":1}}],[\"addregistration\",{\"3\":{\"235\":2}}],[\"addresses\",{\"3\":{\"157\":1}}],[\"addall\",{\"3\":{\"234\":2}}],[\"addservlet方法终于被调用了\",{\"3\":{\"235\":1}}],[\"addservlet\",{\"3\":{\"231\":3,\"235\":1}}],[\"addservletcontainerinitializer\",{\"3\":{\"229\":1,\"232\":1,\"233\":1}}],[\"addservice\",{\"3\":{\"226\":1}}],[\"addtivity\",{\"3\":{\"210\":1}}],[\"additivity=\",{\"3\":{\"208\":1,\"218\":1}}],[\"addlistener\",{\"3\":{\"198\":1}}],[\"addlast\",{\"3\":{\"198\":2}}],[\"added\",{\"3\":{\"29\":1,\"179\":2}}],[\"add\",{\"3\":{\"25\":1,\"29\":1,\"63\":1,\"65\":1,\"66\":2,\"67\":3,\"68\":4,\"73\":1,\"113\":1,\"177\":1,\"178\":1,\"179\":1,\"234\":2}}],[\"asynchronouschannelgroupimpl\",{\"3\":{\"238\":1}}],[\"asynchronouschannelgroupimpl$1\",{\"3\":{\"238\":1}}],[\"aslist\",{\"3\":{\"234\":1}}],[\"assert\",{\"3\":{\"229\":1}}],[\"assembly\",{\"3\":{\"72\":1}}],[\"assemble\",{\"3\":{\"54\":4}}],[\"aspects\",{\"3\":{\"108\":1}}],[\"as\",{\"3\":{\"25\":1,\"29\":1,\"86\":1,\"108\":1,\"110\":1,\"118\":2,\"152\":1,\"155\":2,\"156\":1,\"157\":1,\"178\":1,\"179\":5}}],[\"a\",{\"0\":{\"116\":1,\"153\":1,\"155\":1},\"2\":{\"116\":1,\"153\":1,\"155\":1},\"3\":{\"25\":1,\"29\":3,\"45\":1,\"46\":2,\"49\":1,\"55\":1,\"66\":6,\"67\":1,\"68\":4,\"108\":2,\"111\":1,\"113\":1,\"114\":1,\"115\":3,\"116\":3,\"117\":1,\"118\":2,\"136\":2,\"138\":1,\"151\":2,\"152\":1,\"153\":1,\"154\":1,\"155\":2,\"162\":1,\"174\":1,\"176\":1,\"178\":1,\"179\":8}}],[\"b7202306260101\",{\"3\":{\"238\":1}}],[\"bc\",{\"3\":{\"238\":1}}],[\"b5\",{\"3\":{\"238\":1}}],[\"b07\",{\"3\":{\"179\":2}}],[\"b85d\",{\"3\":{\"179\":7}}],[\"break\",{\"3\":{\"233\":1}}],[\"breakage\",{\"3\":{\"115\":1}}],[\"branch\",{\"3\":{\"25\":6}}],[\"boosgroup\",{\"3\":{\"198\":2}}],[\"boolean\",{\"3\":{\"229\":1}}],[\"bool\",{\"3\":{\"151\":1}}],[\"boot会用logback来记录日志\",{\"3\":{\"203\":1}}],[\"booterclient\",{\"3\":{\"179\":3}}],[\"booter\",{\"3\":{\"179\":1}}],[\"bootstrap意思是引导\",{\"3\":{\"189\":1}}],[\"bootstrap\",{\"0\":{\"189\":1},\"2\":{\"189\":1},\"3\":{\"60\":1,\"225\":7}}],[\"boot\",{\"3\":{\"46\":1,\"51\":1,\"205\":2,\"206\":1,\"208\":7,\"228\":1,\"229\":1,\"234\":1}}],[\"borrow\",{\"3\":{\"108\":1}}],[\"bgsegm\",{\"3\":{\"77\":1}}],[\"business\",{\"3\":{\"218\":1}}],[\"bug修复速度快\",{\"3\":{\"183\":1}}],[\"bug\",{\"3\":{\"182\":1}}],[\"bundle\",{\"3\":{\"179\":1}}],[\"built\",{\"3\":{\"72\":1}}],[\"build>\",{\"3\":{\"176\":1,\"177\":1}}],[\"builds\",{\"3\":{\"122\":1}}],[\"building\",{\"3\":{\"72\":1}}],[\"build\",{\"0\":{\"85\":1,\"86\":1},\"2\":{\"85\":1,\"86\":1},\"3\":{\"31\":1,\"61\":5,\"66\":6,\"67\":6,\"72\":7,\"81\":1,\"86\":5,\"176\":1,\"177\":1}}],[\"build=x86\",{\"3\":{\"31\":1,\"35\":1}}],[\"but\",{\"3\":{\"54\":1,\"152\":1,\"179\":5}}],[\"backlog\",{\"3\":{\"198\":1}}],[\"backups\",{\"3\":{\"47\":1}}],[\"base=\",{\"3\":{\"225\":1}}],[\"base\",{\"3\":{\"208\":3,\"225\":1}}],[\"basedir\",{\"3\":{\"178\":1}}],[\"based\",{\"3\":{\"162\":1}}],[\"bashrc\",{\"3\":{\"113\":1,\"114\":1}}],[\"bash\",{\"3\":{\"111\":1,\"113\":3,\"114\":1}}],[\"bad\",{\"3\":{\"45\":1,\"46\":1}}],[\"blocking\",{\"3\":{\"185\":1}}],[\"blocks\",{\"3\":{\"47\":3,\"48\":2}}],[\"blog\",{\"3\":{\"25\":1,\"155\":1,\"201\":1}}],[\"bean\",{\"3\":{\"235\":3}}],[\"beans\",{\"3\":{\"234\":2}}],[\"because\",{\"3\":{\"179\":1}}],[\"become\",{\"3\":{\"157\":1}}],[\"becomes\",{\"3\":{\"115\":1}}],[\"between\",{\"3\":{\"179\":2}}],[\"being\",{\"3\":{\"179\":4}}],[\"best\",{\"3\":{\"176\":1}}],[\"behavior\",{\"3\":{\"116\":1}}],[\"below\",{\"3\":{\"113\":1,\"157\":1}}],[\"been\",{\"3\":{\"46\":1,\"162\":1,\"179\":1}}],[\"before\",{\"3\":{\"45\":1,\"46\":1,\"154\":5,\"225\":1}}],[\"be\",{\"3\":{\"45\":3,\"46\":2,\"87\":6,\"111\":1,\"138\":1,\"150\":3,\"151\":1,\"153\":5,\"154\":2,\"155\":1,\"157\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":2,\"229\":1}}],[\"bz2\",{\"3\":{\"35\":1}}],[\"bzip2\",{\"3\":{\"35\":1}}],[\"b\",{\"0\":{\"154\":1},\"2\":{\"154\":1},\"3\":{\"33\":1,\"60\":1,\"61\":2,\"66\":1,\"67\":1,\"68\":6,\"72\":1}}],[\"bioinspired\",{\"3\":{\"77\":1}}],[\"bios\",{\"3\":{\"46\":1}}],[\"binding\",{\"3\":{\"238\":1}}],[\"bindings\",{\"0\":{\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1},\"2\":{\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1}}],[\"bind\",{\"3\":{\"198\":1}}],[\"bind0等任务\",{\"3\":{\"193\":1}}],[\"binaries\",{\"0\":{\"116\":1},\"2\":{\"116\":1},\"3\":{\"116\":2}}],[\"bin\",{\"3\":{\"31\":1,\"75\":1,\"81\":2,\"87\":1,\"179\":4}}],[\"bitnami\",{\"3\":{\"27\":3}}],[\"bytebuffer\",{\"3\":{\"197\":2}}],[\"bytebuffer等\",{\"3\":{\"182\":1}}],[\"bytes\",{\"3\":{\"45\":4,\"46\":6,\"151\":2}}],[\"by\",{\"3\":{\"30\":1,\"45\":1,\"46\":1,\"87\":2,\"116\":1,\"157\":1,\"162\":1,\"176\":1,\"177\":1,\"179\":1}}],[\"cs\",{\"3\":{\"238\":1}}],[\"csdn\",{\"3\":{\"201\":1}}],[\"cyan\",{\"3\":{\"212\":1}}],[\"cn\",{\"3\":{\"179\":2}}],[\"cnf=mysqld\",{\"3\":{\"30\":1}}],[\"cnf\",{\"3\":{\"30\":2}}],[\"crazymakercircle\",{\"3\":{\"201\":1}}],[\"crash\",{\"3\":{\"179\":2}}],[\"crashed\",{\"3\":{\"179\":1}}],[\"critical\",{\"3\":{\"179\":1}}],[\"creating\",{\"3\":{\"47\":2}}],[\"createnewfile\",{\"3\":{\"238\":1}}],[\"createwebserver\",{\"3\":{\"228\":5,\"234\":1}}],[\"createdefaultrealm\",{\"3\":{\"226\":1}}],[\"created\",{\"3\":{\"46\":1,\"153\":1,\"154\":1,\"162\":1}}],[\"create\",{\"3\":{\"30\":1,\"86\":1,\"116\":1,\"151\":1,\"179\":1,\"228\":1}}],[\"credential\",{\"3\":{\"26\":4}}],[\"central\",{\"0\":{\"155\":1},\"2\":{\"155\":1},\"3\":{\"155\":1}}],[\"ceintl\",{\"3\":{\"78\":1}}],[\"cmdline\",{\"3\":{\"151\":1}}],[\"cmake示例\",{\"0\":{\"77\":1},\"2\":{\"77\":1}}],[\"cmake文件\",{\"3\":{\"76\":1}}],[\"cmakefiles\",{\"3\":{\"72\":3}}],[\"cmake分步编译\",{\"0\":{\"72\":1},\"2\":{\"72\":1}}],[\"cmake还可以写条件控制\",{\"3\":{\"71\":1}}],[\"cmake中经常使用target\",{\"3\":{\"68\":1}}],[\"cmake中的命令大多和cmake\",{\"3\":{\"63\":1}}],[\"cmake无法定位库文件\",{\"3\":{\"66\":1}}],[\"cmake是可执行程序名称\",{\"3\":{\"63\":1}}],[\"cmake是项目名称\",{\"3\":{\"63\":1}}],[\"cmake是用于构建\",{\"3\":{\"58\":1}}],[\"cmake做代码提示\",{\"3\":{\"61\":1}}],[\"cmake基础知识\",{\"0\":{\"59\":1},\"2\":{\"59\":1}}],[\"cmakelists\",{\"3\":{\"58\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":5,\"67\":3}}],[\"cmake简介\",{\"0\":{\"58\":1},\"2\":{\"58\":1}}],[\"cmake\",{\"0\":{\"68\":1},\"1\":{\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1},\"2\":{\"68\":1},\"3\":{\"60\":4,\"61\":5,\"63\":5,\"64\":2,\"65\":2,\"66\":2,\"67\":1,\"72\":6,\"73\":4,\"75\":1,\"76\":1,\"80\":1,\"86\":3,\"87\":3}}],[\"cin\",{\"3\":{\"82\":1}}],[\"cwd\",{\"3\":{\"81\":2}}],[\"ccalib\",{\"3\":{\"77\":1}}],[\"customize\",{\"3\":{\"238\":2}}],[\"custombundle>\",{\"3\":{\"179\":1}}],[\"custom\",{\"3\":{\"76\":2,\"179\":3}}],[\"cur\",{\"3\":{\"151\":6}}],[\"curl\",{\"3\":{\"28\":1,\"30\":1,\"113\":2}}],[\"currentappx\",{\"3\":{\"151\":2}}],[\"currently\",{\"3\":{\"45\":1,\"46\":1,\"115\":1,\"155\":1}}],[\"current\",{\"3\":{\"25\":2,\"73\":2,\"79\":1,\"81\":1,\"87\":1,\"114\":1,\"116\":2,\"151\":6,\"155\":3}}],[\"capitalize\",{\"3\":{\"235\":2}}],[\"call\",{\"3\":{\"197\":2,\"225\":1}}],[\"called\",{\"3\":{\"179\":3}}],[\"calling\",{\"3\":{\"176\":1,\"177\":1}}],[\"calib3d\",{\"3\":{\"77\":1}}],[\"cases\",{\"3\":{\"179\":2}}],[\"case\",{\"3\":{\"153\":1,\"206\":1}}],[\"cascades\",{\"3\":{\"87\":1}}],[\"catch\",{\"3\":{\"225\":6,\"228\":2,\"229\":1,\"233\":1,\"234\":1,\"238\":2}}],[\"catalina的start方法\",{\"3\":{\"225\":1}}],[\"catalina的load方法\",{\"3\":{\"225\":1}}],[\"catalinaloader\",{\"3\":{\"225\":1}}],[\"catalinadaemon\",{\"3\":{\"225\":6}}],[\"catalina\",{\"3\":{\"225\":3,\"238\":2}}],[\"cat\",{\"3\":{\"121\":1}}],[\"cause\",{\"3\":{\"116\":1}}],[\"cannot\",{\"3\":{\"151\":3,\"228\":1}}],[\"can\",{\"3\":{\"87\":3,\"108\":1,\"114\":1,\"115\":5,\"116\":1,\"138\":1,\"157\":2,\"176\":1,\"177\":1,\"178\":1}}],[\"cache\",{\"3\":{\"72\":2}}],[\"careful\",{\"3\":{\"45\":1,\"46\":1}}],[\"c是b的public依赖项\",{\"3\":{\"68\":1}}],[\"c也会链接b\",{\"3\":{\"68\":1}}],[\"c会链接b\",{\"3\":{\"68\":1}}],[\"c不会链接b\",{\"3\":{\"68\":1}}],[\"cxx\",{\"3\":{\"63\":1,\"64\":1,\"72\":4}}],[\"cflags\",{\"3\":{\"57\":2}}],[\"cppdbg\",{\"3\":{\"81\":1}}],[\"cppbuild\",{\"3\":{\"81\":1}}],[\"cpptools\",{\"3\":{\"78\":1}}],[\"cpp是源文件\",{\"3\":{\"63\":1}}],[\"cpp\",{\"3\":{\"54\":1,\"57\":3,\"63\":1,\"65\":1,\"66\":5,\"67\":5,\"68\":4,\"72\":3,\"81\":3,\"151\":2}}],[\"cpp源文件预处理成xx\",{\"3\":{\"54\":1}}],[\"c303\",{\"3\":{\"46\":1}}],[\"ch\",{\"3\":{\"198\":3,\"203\":1,\"212\":1,\"213\":1,\"214\":1,\"216\":3,\"217\":1,\"218\":2,\"219\":2,\"221\":2,\"222\":2,\"223\":1,\"238\":3}}],[\"childhandler\",{\"3\":{\"198\":1}}],[\"childoption\",{\"3\":{\"198\":2}}],[\"channel类型\",{\"3\":{\"198\":1}}],[\"channelinitializer<niosocketchannel>\",{\"3\":{\"198\":1}}],[\"channelinboundhandleradapter用于处理入站i\",{\"3\":{\"195\":1}}],[\"channelinboundhandler用于处理入站i\",{\"3\":{\"195\":1}}],[\"channeloption\",{\"3\":{\"198\":3}}],[\"channeloutboundhandleradapter用于处理出站i\",{\"3\":{\"195\":1}}],[\"channeloutboundhandler用于处理出站i\",{\"3\":{\"195\":1}}],[\"channelpipeline实现了一种高级形式的拦截过滤器模式\",{\"3\":{\"197\":1}}],[\"channelpipeline\",{\"0\":{\"197\":1},\"2\":{\"197\":1},\"3\":{\"197\":1}}],[\"channelduplexhandler用于处理入站和出站事件\",{\"3\":{\"195\":1}}],[\"channelhandlercontext\",{\"0\":{\"196\":1},\"2\":{\"196\":1},\"3\":{\"197\":3}}],[\"channelhandler本身并没有提供很多方法\",{\"3\":{\"195\":1}}],[\"channelhandler是一个接口\",{\"3\":{\"195\":1}}],[\"channelhandler\",{\"0\":{\"195\":1},\"2\":{\"195\":1}}],[\"channel为用户提供\",{\"3\":{\"191\":1}}],[\"channel\",{\"0\":{\"191\":1},\"2\":{\"191\":1},\"3\":{\"197\":2,\"198\":1}}],[\"channelfuture\",{\"0\":{\"190\":1},\"2\":{\"190\":1}}],[\"changed\",{\"3\":{\"87\":2,\"151\":1,\"179\":2}}],[\"changes\",{\"3\":{\"45\":2,\"46\":1,\"206\":1}}],[\"change\",{\"3\":{\"42\":2}}],[\"challenge\",{\"3\":{\"155\":1}}],[\"challenges\",{\"3\":{\"152\":1}}],[\"challengeresponseauthentication\",{\"3\":{\"42\":2}}],[\"character\",{\"3\":{\"238\":1}}],[\"characters\",{\"3\":{\"238\":2}}],[\"charset>\",{\"3\":{\"212\":1,\"213\":1,\"218\":1,\"219\":1}}],[\"char\",{\"3\":{\"151\":3}}],[\"check\",{\"3\":{\"151\":2}}],[\"checking\",{\"3\":{\"31\":1,\"48\":5}}],[\"checkout\",{\"3\":{\"25\":2}}],[\"classname=\",{\"3\":{\"238\":1}}],[\"classname\",{\"3\":{\"231\":1}}],[\"classes\",{\"3\":{\"229\":1,\"232\":1,\"233\":2,\"234\":1}}],[\"class<\",{\"3\":{\"225\":1,\"231\":1}}],[\"classpath\",{\"3\":{\"225\":1,\"238\":2}}],[\"class指定appender的全限定名\",{\"3\":{\"212\":1}}],[\"classic<\",{\"3\":{\"205\":1}}],[\"classic\",{\"3\":{\"203\":1,\"205\":1,\"212\":1,\"221\":1,\"222\":1}}],[\"class\",{\"3\":{\"138\":1,\"146\":1,\"179\":2,\"198\":1,\"225\":2,\"226\":1,\"228\":1,\"229\":2,\"232\":1,\"233\":1,\"234\":3,\"235\":6,\"238\":2}}],[\"class=\",{\"3\":{\"137\":1,\"179\":1,\"212\":1,\"213\":1,\"214\":1,\"216\":3,\"217\":1,\"218\":2,\"219\":2,\"221\":2,\"222\":2}}],[\"cloud\",{\"3\":{\"219\":1}}],[\"closely\",{\"3\":{\"179\":1}}],[\"close\",{\"3\":{\"114\":1,\"151\":3}}],[\"clones\",{\"3\":{\"113\":1}}],[\"clone\",{\"3\":{\"60\":1}}],[\"cli\",{\"3\":{\"108\":2}}],[\"client\",{\"3\":{\"30\":2}}],[\"clean生命周期\",{\"0\":{\"171\":1},\"2\":{\"171\":1}}],[\"clean\",{\"3\":{\"72\":1,\"173\":1}}],[\"clear\",{\"3\":{\"42\":1}}],[\"cd\",{\"3\":{\"40\":1,\"49\":1,\"60\":1,\"72\":1,\"86\":1,\"122\":1,\"179\":2}}],[\"c++调试\",{\"3\":{\"81\":1}}],[\"c++14标准\",{\"3\":{\"81\":1}}],[\"c++开发\",{\"3\":{\"78\":1}}],[\"c++环境配置\",{\"1\":{\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1}}],[\"c++中预处理指令以\",{\"3\":{\"54\":1}}],[\"c++的编译过程\",{\"2\":{\"54\":1}}],[\"c++\",{\"2\":{\"81\":1},\"3\":{\"35\":1,\"81\":2}}],[\"c\",{\"0\":{\"54\":1,\"81\":1,\"155\":1},\"2\":{\"155\":1},\"3\":{\"33\":1,\"41\":1,\"54\":2,\"68\":3,\"81\":2,\"179\":2}}],[\"coyote\",{\"3\":{\"238\":14}}],[\"collected\",{\"3\":{\"179\":1}}],[\"color=always\",{\"3\":{\"81\":1}}],[\"coverage\",{\"3\":{\"162\":1}}],[\"covered\",{\"3\":{\"118\":1}}],[\"copied\",{\"3\":{\"87\":1}}],[\"copies\",{\"3\":{\"87\":1}}],[\"copilot\",{\"3\":{\"78\":1}}],[\"coding\",{\"3\":{\"83\":4}}],[\"code建议安装插件列表\",{\"3\":{\"78\":1}}],[\"code\",{\"0\":{\"83\":1},\"2\":{\"83\":1},\"3\":{\"78\":3,\"81\":1,\"162\":1,\"179\":2}}],[\"code相关信息\",{\"0\":{\"78\":1},\"2\":{\"78\":1}}],[\"code插件\",{\"3\":{\"61\":1}}],[\"correct\",{\"3\":{\"113\":1}}],[\"corrected\",{\"3\":{\"45\":1,\"46\":1}}],[\"core核心可扩展事件模型\",{\"3\":{\"187\":1}}],[\"core\",{\"0\":{\"86\":1},\"2\":{\"86\":1},\"3\":{\"77\":1,\"203\":1,\"205\":1,\"213\":1,\"214\":1,\"216\":3,\"217\":1,\"218\":2,\"219\":2,\"221\":1,\"222\":1}}],[\"course\",{\"3\":{\"67\":2}}],[\"cout\",{\"3\":{\"54\":1,\"81\":1,\"82\":2}}],[\"counts\",{\"3\":{\"48\":1}}],[\"connectiontimeout=\",{\"3\":{\"238\":1}}],[\"connectivity\",{\"3\":{\"48\":1}}],[\"connector\",{\"3\":{\"238\":4}}],[\"connect\",{\"3\":{\"193\":1}}],[\"convenient\",{\"3\":{\"179\":1}}],[\"convention\",{\"3\":{\"155\":1}}],[\"conditions\",{\"3\":{\"116\":1}}],[\"constantly\",{\"3\":{\"179\":1}}],[\"const\",{\"3\":{\"151\":1}}],[\"consistency\",{\"3\":{\"151\":1}}],[\"consists\",{\"3\":{\"108\":1}}],[\"consoleappender\",{\"0\":{\"213\":1},\"2\":{\"213\":1},\"3\":{\"213\":1,\"221\":1,\"222\":1}}],[\"console\",{\"3\":{\"79\":1,\"81\":1,\"208\":2,\"221\":2,\"222\":2}}],[\"containerbase\",{\"3\":{\"233\":1}}],[\"containing\",{\"3\":{\"29\":1}}],[\"context对象也不例外\",{\"3\":{\"233\":1}}],[\"context\",{\"3\":{\"228\":1,\"229\":6,\"232\":9,\"233\":5,\"234\":4,\"238\":3}}],[\"contents\",{\"3\":{\"153\":3,\"154\":1}}],[\"content\",{\"3\":{\"73\":1,\"153\":2,\"154\":6,\"179\":1}}],[\"contributions\",{\"3\":{\"136\":1}}],[\"continent\",{\"3\":{\"108\":1}}],[\"contiguous\",{\"3\":{\"48\":1}}],[\"conflicts\",{\"3\":{\"87\":1}}],[\"config=classpath\",{\"3\":{\"207\":2}}],[\"config是一个工具\",{\"3\":{\"57\":1}}],[\"config配置文件里的配置项passwordauthentication改成yes\",{\"3\":{\"42\":1}}],[\"configurabletomcatwebserverfactory\",{\"3\":{\"229\":1,\"232\":1,\"234\":1,\"238\":1}}],[\"configurablewebserverapplicationcontext\",{\"3\":{\"228\":1,\"234\":1}}],[\"configuration节点主要包含appdender\",{\"3\":{\"209\":1}}],[\"configuration标签的属性如下\",{\"3\":{\"209\":1}}],[\"configuration标签\",{\"0\":{\"209\":1},\"2\":{\"209\":1}}],[\"configuration>\",{\"3\":{\"179\":3,\"208\":1,\"213\":1,\"214\":1,\"216\":1,\"221\":1,\"222\":1}}],[\"configurations\",{\"3\":{\"79\":1,\"81\":1}}],[\"configuration\",{\"3\":{\"29\":2,\"87\":2,\"117\":1,\"177\":1,\"179\":2,\"208\":1}}],[\"configurecontext\",{\"3\":{\"229\":2,\"232\":2,\"234\":2}}],[\"configured\",{\"3\":{\"153\":2}}],[\"configure\",{\"3\":{\"31\":2,\"35\":1,\"86\":1,\"179\":1,\"235\":3}}],[\"configs\",{\"3\":{\"29\":5}}],[\"config\",{\"3\":{\"29\":2,\"30\":1,\"31\":2,\"42\":2,\"57\":3,\"109\":2,\"113\":2,\"117\":3,\"121\":1,\"206\":6,\"225\":1}}],[\"conf\",{\"3\":{\"27\":1}}],[\"communicate\",{\"3\":{\"115\":1}}],[\"commands\",{\"3\":{\"113\":1,\"114\":1}}],[\"command\",{\"3\":{\"45\":3,\"46\":4,\"81\":1,\"108\":1,\"110\":1,\"113\":1,\"114\":4,\"115\":1,\"136\":1,\"179\":3,\"225\":1}}],[\"component\",{\"3\":{\"238\":2}}],[\"components\",{\"3\":{\"108\":1}}],[\"completed\",{\"3\":{\"225\":1,\"238\":2}}],[\"compliant\",{\"3\":{\"111\":1}}],[\"compatibility\",{\"3\":{\"208\":1}}],[\"computer\",{\"3\":{\"88\":2}}],[\"compiling\",{\"3\":{\"72\":1}}],[\"compile\",{\"3\":{\"54\":4,\"115\":1}}],[\"com\",{\"3\":{\"25\":1,\"26\":2,\"27\":1,\"28\":1,\"30\":1,\"60\":1,\"78\":2,\"79\":1,\"81\":1,\"86\":1,\"113\":2,\"117\":1,\"145\":3,\"147\":1,\"180\":1,\"200\":4,\"201\":1,\"208\":1,\"218\":1,\"223\":1}}],[\"rfc\",{\"3\":{\"238\":4}}],[\"rpc\",{\"3\":{\"200\":1}}],[\"rsyslog\",{\"3\":{\"155\":2}}],[\"rsa\",{\"3\":{\"39\":1,\"41\":1}}],[\"rsa为私钥\",{\"3\":{\"39\":1}}],[\"rollover\",{\"3\":{\"219\":1}}],[\"rollingpolicy>\",{\"3\":{\"216\":1,\"218\":1,\"219\":1}}],[\"rolling\",{\"3\":{\"216\":3,\"217\":1,\"218\":2,\"219\":2}}],[\"rollingfileappender的file子节点可有可无\",{\"3\":{\"218\":1}}],[\"rollingfileappender的行为\",{\"3\":{\"215\":1}}],[\"rollingfileappender\",{\"0\":{\"215\":1},\"2\":{\"215\":1},\"3\":{\"216\":1,\"218\":1,\"219\":1}}],[\"rocketmq底层也是用的netty作为基础通信组件\",{\"3\":{\"184\":1}}],[\"rotate\",{\"3\":{\"151\":3,\"152\":2}}],[\"rotated\",{\"3\":{\"150\":2,\"151\":1}}],[\"rotating\",{\"3\":{\"150\":1}}],[\"rotation\",{\"3\":{\"150\":1,\"151\":7}}],[\"root可以包含零个或多个appender\",{\"3\":{\"211\":1}}],[\"root也是logger元素\",{\"3\":{\"211\":1}}],[\"root标签\",{\"0\":{\"211\":1},\"2\":{\"211\":1}}],[\"root三个标签\",{\"3\":{\"209\":1}}],[\"root>\",{\"3\":{\"208\":1,\"213\":1,\"214\":1,\"216\":1,\"221\":1,\"222\":1}}],[\"root\",{\"3\":{\"32\":2,\"87\":2,\"146\":1}}],[\"ran\",{\"3\":{\"179\":1}}],[\"range\",{\"3\":{\"79\":1}}],[\"rar\",{\"0\":{\"170\":1},\"2\":{\"170\":1}}],[\"race\",{\"3\":{\"116\":1}}],[\"raw\",{\"3\":{\"113\":2}}],[\"rgbd\",{\"3\":{\"77\":1}}],[\"r\",{\"3\":{\"33\":1}}],[\"redirectport=\",{\"3\":{\"238\":1}}],[\"redirecttestoutputtofile>\",{\"3\":{\"179\":2}}],[\"red\",{\"3\":{\"212\":1}}],[\"ref元素\",{\"3\":{\"210\":1,\"211\":1}}],[\"ref=\",{\"3\":{\"208\":3,\"213\":1,\"214\":1,\"216\":1,\"218\":1,\"221\":1,\"222\":1}}],[\"ref\",{\"3\":{\"208\":3,\"213\":1,\"214\":1,\"216\":1,\"218\":1,\"221\":1,\"222\":1}}],[\"refer\",{\"3\":{\"179\":2}}],[\"reference\",{\"3\":{\"48\":1,\"86\":1,\"87\":1}}],[\"reinitialize\",{\"3\":{\"206\":2}}],[\"reuseforks>\",{\"3\":{\"179\":1}}],[\"resolvable\",{\"3\":{\"238\":1}}],[\"resourceutils\",{\"3\":{\"238\":1}}],[\"resourceloader\",{\"3\":{\"238\":7}}],[\"resourceloaderaware\",{\"3\":{\"229\":1,\"232\":1,\"234\":1}}],[\"resource=\",{\"3\":{\"208\":4}}],[\"resource\",{\"3\":{\"179\":1,\"238\":1}}],[\"restarted\",{\"3\":{\"157\":1}}],[\"restart\",{\"3\":{\"154\":6}}],[\"restarting\",{\"3\":{\"154\":1}}],[\"results\",{\"3\":{\"179\":1}}],[\"result\",{\"3\":{\"151\":2}}],[\"recent\",{\"3\":{\"153\":1}}],[\"recommend\",{\"3\":{\"87\":1}}],[\"recommended\",{\"0\":{\"157\":1},\"2\":{\"157\":1},\"3\":{\"45\":1,\"46\":1,\"179\":1}}],[\"renamed\",{\"3\":{\"151\":1}}],[\"rewind\",{\"3\":{\"151\":1}}],[\"reactor\",{\"3\":{\"199\":1}}],[\"reactor模型\",{\"3\":{\"199\":1}}],[\"reaches\",{\"3\":{\"151\":1,\"152\":1}}],[\"read\",{\"3\":{\"117\":1,\"193\":1,\"197\":2}}],[\"really\",{\"3\":{\"45\":1}}],[\"relaxedquerychars=\",{\"3\":{\"238\":1}}],[\"relaxedquerychars\",{\"3\":{\"238\":1}}],[\"relaxedpathchars=\",{\"3\":{\"238\":1}}],[\"relaxedpathchars\",{\"3\":{\"238\":1}}],[\"relativefile\",{\"3\":{\"83\":1}}],[\"release\",{\"3\":{\"81\":4,\"115\":2}}],[\"reload\",{\"3\":{\"30\":1}}],[\"requires\",{\"3\":{\"150\":1}}],[\"required相似\",{\"3\":{\"63\":1}}],[\"required来指定当前工程所使用的cmake版本\",{\"3\":{\"63\":1}}],[\"required\",{\"3\":{\"63\":1,\"66\":2,\"67\":1,\"77\":1}}],[\"request\",{\"3\":{\"79\":1,\"81\":2,\"197\":1,\"238\":1}}],[\"registrationbean\",{\"3\":{\"235\":2}}],[\"registration\",{\"3\":{\"119\":1,\"235\":14}}],[\"registry\",{\"3\":{\"87\":1,\"108\":3,\"109\":6,\"117\":5}}],[\"registered\",{\"3\":{\"235\":3}}],[\"registerenvironmentbeans\",{\"3\":{\"234\":1}}],[\"registerapplicationscope\",{\"3\":{\"234\":1}}],[\"registersingleton\",{\"3\":{\"228\":2}}],[\"register\",{\"3\":{\"119\":1,\"235\":2}}],[\"reg\",{\"3\":{\"77\":1}}],[\"regular\",{\"3\":{\"71\":1,\"87\":1}}],[\"rebuild\",{\"3\":{\"72\":1}}],[\"return\",{\"3\":{\"54\":1,\"81\":1,\"82\":1,\"151\":3,\"206\":2,\"225\":1,\"226\":7,\"229\":1,\"233\":1,\"234\":3,\"235\":5,\"238\":1}}],[\"reproduced\",{\"3\":{\"179\":1}}],[\"reportformat>\",{\"3\":{\"179\":1}}],[\"reports\",{\"3\":{\"179\":2}}],[\"reported\",{\"3\":{\"179\":4}}],[\"reporting>\",{\"3\":{\"178\":1}}],[\"report\",{\"0\":{\"178\":1},\"2\":{\"178\":1},\"3\":{\"175\":1,\"178\":9,\"179\":31}}],[\"repository\",{\"3\":{\"113\":1}}],[\"repartitioning\",{\"3\":{\"45\":1,\"46\":1}}],[\"replication\",{\"3\":{\"30\":1}}],[\"removed\",{\"3\":{\"151\":1}}],[\"remote\",{\"3\":{\"25\":5,\"78\":5,\"115\":2}}],[\"remain\",{\"3\":{\"45\":1,\"46\":1}}],[\"rule\",{\"3\":{\"29\":1}}],[\"rules\",{\"3\":{\"29\":4}}],[\"runworker\",{\"3\":{\"238\":1}}],[\"run方法\",{\"3\":{\"227\":1}}],[\"runjdb\",{\"3\":{\"225\":1}}],[\"runalltasks\",{\"3\":{\"199\":2}}],[\"runlistener\",{\"3\":{\"137\":1}}],[\"runner\",{\"1\":{\"119\":1,\"120\":1,\"121\":1,\"122\":1},\"3\":{\"119\":1,\"120\":1,\"121\":1,\"122\":1,\"137\":1}}],[\"running\",{\"0\":{\"126\":1},\"2\":{\"126\":1},\"3\":{\"113\":1,\"114\":1}}],[\"runs\",{\"3\":{\"108\":1,\"113\":1}}],[\"runtime\",{\"3\":{\"75\":1}}],[\"run\",{\"3\":{\"27\":2,\"51\":3,\"113\":2,\"114\":1,\"115\":4,\"138\":1,\"179\":6,\"238\":6}}],[\"rm\",{\"3\":{\"25\":1}}],[\"61\",{\"3\":{\"238\":1}}],[\"614c04f7\",{\"0\":{\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"215\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1}}],[\"659\",{\"3\":{\"238\":1}}],[\"65\",{\"3\":{\"238\":1}}],[\"65536\",{\"3\":{\"47\":1}}],[\"6以上版本支持\",{\"3\":{\"180\":1}}],[\"669\",{\"3\":{\"179\":1}}],[\"6e2ab9da\",{\"0\":{\"52\":1}}],[\"6m\",{\"3\":{\"51\":1}}],[\"6g\",{\"3\":{\"51\":4}}],[\"686063d202ce\",{\"3\":{\"47\":1}}],[\"63cf\",{\"3\":{\"47\":1}}],[\"638c1d18\",{\"0\":{\"24\":1}}],[\"60g\",{\"3\":{\"45\":1,\"46\":1}}],[\"60\",{\"3\":{\"45\":1,\"46\":1,\"213\":1}}],[\"649\",{\"3\":{\"179\":2}}],[\"64425541120\",{\"3\":{\"45\":1}}],[\"64\",{\"3\":{\"31\":1}}],[\"6\",{\"0\":{\"22\":1,\"23\":1,\"68\":1,\"140\":1,\"148\":1,\"213\":1,\"214\":1,\"215\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1},\"2\":{\"22\":1,\"23\":1,\"68\":1,\"140\":1,\"148\":1,\"213\":1,\"214\":1,\"215\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1},\"3\":{\"33\":1,\"67\":1,\"110\":2,\"208\":1}}],[\"404\",{\"3\":{\"238\":1}}],[\"404=\",{\"3\":{\"238\":1}}],[\"400\",{\"3\":{\"238\":1}}],[\"400=\",{\"3\":{\"238\":1}}],[\"4096000\",{\"3\":{\"47\":1}}],[\"4096\",{\"3\":{\"46\":1}}],[\"4095\",{\"3\":{\"46\":1}}],[\"49\",{\"3\":{\"238\":1}}],[\"4relative\",{\"3\":{\"214\":1,\"216\":1,\"221\":1,\"222\":1}}],[\"474\",{\"3\":{\"238\":1}}],[\"474844021\",{\"3\":{\"201\":1,\"223\":1}}],[\"47\",{\"3\":{\"157\":1}}],[\"410\",{\"3\":{\"238\":1}}],[\"418dacbd\",{\"3\":{\"179\":7}}],[\"41\",{\"3\":{\"157\":1}}],[\"41940991\",{\"3\":{\"46\":1}}],[\"41940992\",{\"3\":{\"45\":1,\"46\":4}}],[\"41943039\",{\"3\":{\"45\":1,\"46\":1}}],[\"4g\",{\"3\":{\"51\":2}}],[\"42\",{\"3\":{\"51\":1}}],[\"42c1\",{\"3\":{\"47\":1}}],[\"4k\",{\"3\":{\"47\":1}}],[\"4643\",{\"3\":{\"179\":7}}],[\"46\",{\"3\":{\"47\":1,\"48\":1}}],[\"4c38\",{\"3\":{\"46\":1}}],[\"4bd1b706\",{\"0\":{\"25\":1,\"26\":1}}],[\"4\",{\"0\":{\"21\":1,\"66\":1,\"138\":1,\"146\":1,\"208\":1,\"219\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":2,\"235\":1},\"2\":{\"21\":1,\"66\":1,\"138\":1,\"146\":1,\"208\":1,\"219\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":2,\"235\":1},\"3\":{\"31\":1,\"35\":1,\"46\":3,\"48\":1,\"51\":1,\"66\":2,\"73\":1,\"86\":2,\"115\":1,\"116\":1,\"137\":1,\"152\":1,\"153\":2,\"154\":3,\"185\":1,\"200\":2,\"225\":1}}],[\"统一认证框架\",{\"0\":{\"18\":1},\"2\":{\"18\":1}}],[\"产品微服务化重构\",{\"0\":{\"15\":1},\"2\":{\"15\":1}}],[\"搭建公司devops体系\",{\"0\":{\"12\":1},\"2\":{\"12\":1}}],[\"三层是engine元素\",{\"3\":{\"225\":1}}],[\"三\",{\"0\":{\"11\":1,\"77\":1,\"80\":1,\"209\":1,\"227\":1},\"2\":{\"11\":1,\"77\":1,\"80\":1,\"209\":1,\"227\":1}}],[\"340\",{\"3\":{\"238\":1}}],[\"35\",{\"3\":{\"214\":1,\"216\":1}}],[\"3<\",{\"3\":{\"205\":1}}],[\"3e0e47ea\",{\"0\":{\"132\":1}}],[\"3986\",{\"3\":{\"238\":2}}],[\"39\",{\"3\":{\"113\":2}}],[\"3939840\",{\"3\":{\"47\":1,\"48\":1}}],[\"312\",{\"3\":{\"238\":4}}],[\"31\",{\"3\":{\"57\":1}}],[\"31936b48\",{\"0\":{\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1}}],[\"326171\",{\"3\":{\"48\":1}}],[\"32768\",{\"3\":{\"47\":1}}],[\"30\",{\"3\":{\"47\":1,\"48\":1,\"221\":1,\"222\":1}}],[\"3000\",{\"3\":{\"27\":1}}],[\"38221824\",{\"3\":{\"46\":1}}],[\"3719168\",{\"3\":{\"46\":1}}],[\"3719167\",{\"3\":{\"46\":1}}],[\"3715072\",{\"3\":{\"46\":1}}],[\"37\",{\"3\":{\"45\":1,\"46\":1}}],[\"3\",{\"0\":{\"8\":1,\"9\":1,\"10\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":2,\"19\":2,\"20\":2,\"21\":1,\"56\":1,\"57\":1,\"58\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"137\":1,\"145\":1,\"207\":1,\"215\":1,\"216\":1,\"217\":1,\"218\":2,\"219\":1,\"228\":1,\"229\":1,\"233\":1},\"2\":{\"8\":1,\"9\":1,\"10\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":2,\"19\":2,\"20\":2,\"21\":1,\"56\":1,\"57\":1,\"58\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":2,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"137\":1,\"145\":1,\"207\":1,\"215\":1,\"216\":1,\"217\":1,\"218\":2,\"219\":1,\"228\":1,\"229\":1,\"233\":1},\"3\":{\"48\":1,\"51\":1,\"61\":1,\"63\":2,\"64\":1,\"65\":1,\"66\":2,\"67\":1,\"72\":1,\"73\":1,\"113\":2,\"115\":2,\"116\":2,\"137\":1,\"152\":1,\"153\":1,\"154\":3,\"155\":2,\"179\":2,\"185\":1,\"225\":1}}],[\"国泰新点软件股份有限公司\",{\"0\":{\"2\":1,\"5\":1,\"8\":1},\"2\":{\"2\":1,\"5\":1,\"8\":1}}],[\"1中channelpipline的说明\",{\"3\":{\"197\":1}}],[\"1起\",{\"3\":{\"185\":1}}],[\"1ae5788d\",{\"0\":{\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1}}],[\"1>\",{\"3\":{\"151\":1}}],[\"1+2+3+4+5\",{\"3\":{\"79\":1,\"81\":1}}],[\"1708\",{\"3\":{\"238\":1}}],[\"17\",{\"3\":{\"77\":1,\"179\":16}}],[\"14\",{\"0\":{\"76\":1},\"2\":{\"76\":1},\"3\":{\"76\":1,\"110\":3,\"115\":2,\"179\":16,\"208\":1}}],[\"13\",{\"0\":{\"75\":1},\"2\":{\"75\":1},\"3\":{\"75\":1}}],[\"1版本为例\",{\"3\":{\"60\":1}}],[\"19\",{\"3\":{\"179\":2}}],[\"190004b0\",{\"0\":{\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1}}],[\"192\",{\"3\":{\"26\":4,\"27\":2,\"29\":3,\"32\":2,\"41\":2,\"43\":2,\"119\":1}}],[\"1191\",{\"3\":{\"238\":1}}],[\"112\",{\"3\":{\"238\":1}}],[\"11239424\",{\"3\":{\"47\":1}}],[\"1184\",{\"3\":{\"238\":1}}],[\"1183\",{\"3\":{\"179\":1}}],[\"11\",{\"0\":{\"73\":1},\"2\":{\"73\":1},\"3\":{\"48\":1,\"73\":1,\"115\":1}}],[\"1m\",{\"3\":{\"46\":1}}],[\"16ccd7d7\",{\"0\":{\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1}}],[\"16\",{\"3\":{\"51\":1,\"76\":1,\"110\":1,\"115\":2,\"179\":2}}],[\"1605632\",{\"3\":{\"47\":1}}],[\"163840\",{\"3\":{\"47\":1}}],[\"167772160\",{\"3\":{\"46\":1}}],[\"167772126\",{\"3\":{\"45\":1,\"46\":4}}],[\"167772159\",{\"3\":{\"45\":1,\"46\":1}}],[\"168\",{\"3\":{\"26\":4,\"27\":2,\"29\":3,\"32\":2,\"41\":2,\"43\":2,\"119\":1}}],[\"126\",{\"3\":{\"238\":1}}],[\"124588880\",{\"3\":{\"201\":1}}],[\"123456789101112131415161718192021222324252627282930313233343536373839\",{\"3\":{\"197\":1}}],[\"12\",{\"0\":{\"74\":1},\"2\":{\"74\":1},\"3\":{\"74\":1,\"110\":1,\"115\":4}}],[\"125831135\",{\"3\":{\"45\":2,\"46\":1}}],[\"128\",{\"3\":{\"41\":2,\"46\":1}}],[\"127\",{\"3\":{\"30\":2}}],[\"1024\",{\"3\":{\"198\":1}}],[\"1011\",{\"3\":{\"179\":1}}],[\"100\",{\"3\":{\"72\":1,\"182\":1}}],[\"1000\",{\"3\":{\"51\":1}}],[\"10\",{\"0\":{\"72\":1},\"2\":{\"72\":1},\"3\":{\"33\":1,\"51\":1,\"63\":1,\"66\":2,\"67\":1,\"72\":1,\"179\":16}}],[\"109\",{\"3\":{\"32\":2}}],[\"10s\",{\"3\":{\"29\":1}}],[\"15728640\",{\"3\":{\"47\":1,\"48\":1}}],[\"15\",{\"3\":{\"29\":2,\"76\":1,\"110\":1,\"179\":1,\"213\":1}}],[\"15s\",{\"3\":{\"29\":2}}],[\"18\",{\"3\":{\"46\":1,\"86\":1,\"110\":2}}],[\"188\",{\"3\":{\"26\":2,\"41\":2,\"43\":2}}],[\"184f4da6\",{\"0\":{\"0\":1,\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1}}],[\"1\",{\"0\":{\"2\":1,\"3\":2,\"4\":1,\"6\":1,\"9\":1,\"12\":1,\"13\":2,\"14\":1,\"16\":1,\"19\":1,\"22\":1,\"54\":2,\"55\":1,\"56\":1,\"57\":2,\"58\":1,\"60\":1,\"63\":1,\"135\":2,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"143\":1,\"205\":1,\"213\":1,\"216\":1,\"221\":1,\"228\":1,\"231\":1},\"2\":{\"2\":1,\"3\":2,\"4\":1,\"6\":1,\"9\":1,\"12\":1,\"13\":2,\"14\":1,\"16\":1,\"19\":1,\"22\":1,\"54\":2,\"55\":1,\"56\":1,\"57\":2,\"58\":1,\"60\":1,\"63\":1,\"135\":2,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"143\":1,\"205\":1,\"213\":1,\"216\":1,\"221\":1,\"228\":1,\"231\":1},\"3\":{\"26\":2,\"28\":1,\"29\":2,\"30\":2,\"43\":2,\"45\":1,\"46\":2,\"47\":1,\"48\":2,\"51\":9,\"60\":1,\"63\":1,\"64\":1,\"71\":1,\"72\":1,\"73\":1,\"78\":1,\"110\":3,\"115\":3,\"137\":1,\"147\":1,\"150\":3,\"151\":4,\"152\":1,\"153\":1,\"154\":3,\"178\":1,\"179\":6,\"197\":4,\"208\":4,\"215\":1,\"216\":1,\"225\":1,\"238\":7}}],[\"2ed587f3\",{\"0\":{\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1}}],[\"2mb\",{\"3\":{\"179\":1}}],[\"245\",{\"3\":{\"179\":1}}],[\"282\",{\"3\":{\"179\":1}}],[\"2<\",{\"3\":{\"176\":1,\"177\":1,\"179\":1}}],[\"29\",{\"3\":{\"157\":1}}],[\"294912\",{\"3\":{\"47\":1}}],[\"2ab91088\",{\"0\":{\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1}}],[\"25\",{\"3\":{\"60\":2}}],[\"253m\",{\"3\":{\"51\":1}}],[\"2654208\",{\"3\":{\"47\":1}}],[\"22\",{\"3\":{\"110\":2,\"115\":3,\"176\":1,\"177\":1,\"179\":1}}],[\"229376\",{\"3\":{\"47\":1}}],[\"220\",{\"3\":{\"27\":2,\"29\":3}}],[\"2g\",{\"3\":{\"46\":1}}],[\"2023\",{\"3\":{\"179\":18}}],[\"2021\",{\"3\":{\"47\":1,\"48\":1}}],[\"20\",{\"3\":{\"157\":1,\"179\":2}}],[\"2019\",{\"3\":{\"157\":1}}],[\"20mb\",{\"3\":{\"152\":1}}],[\"2048\",{\"3\":{\"46\":2}}],[\"209a5215\",{\"3\":{\"46\":1}}],[\"20000\",{\"3\":{\"238\":1}}],[\"200\",{\"3\":{\"26\":1,\"119\":1}}],[\"218\",{\"3\":{\"238\":1}}],[\"21\",{\"3\":{\"110\":1,\"179\":1}}],[\"215\",{\"3\":{\"29\":2}}],[\"216\",{\"3\":{\"29\":1}}],[\"217\",{\"3\":{\"26\":1}}],[\"2>\",{\"3\":{\"28\":1}}],[\"235\",{\"3\":{\"27\":2,\"32\":2}}],[\"2\",{\"0\":{\"2\":1,\"3\":1,\"4\":2,\"5\":2,\"6\":2,\"7\":3,\"8\":1,\"9\":1,\"10\":2,\"14\":1,\"15\":1,\"16\":1,\"17\":2,\"20\":1,\"23\":1,\"55\":1,\"58\":1,\"60\":1,\"61\":2,\"62\":1,\"63\":1,\"64\":2,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"136\":1,\"143\":1,\"144\":2,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1,\"205\":1,\"206\":2,\"207\":1,\"208\":1,\"214\":1,\"217\":1,\"222\":1,\"229\":1,\"232\":1},\"2\":{\"2\":1,\"3\":1,\"4\":2,\"5\":2,\"6\":2,\"7\":3,\"8\":1,\"9\":1,\"10\":2,\"14\":1,\"15\":1,\"16\":1,\"17\":2,\"20\":1,\"23\":1,\"55\":1,\"58\":1,\"60\":1,\"61\":2,\"62\":1,\"63\":1,\"64\":2,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"136\":1,\"143\":1,\"144\":2,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1,\"205\":1,\"206\":2,\"207\":1,\"208\":1,\"214\":1,\"217\":1,\"222\":1,\"229\":1,\"232\":1},\"3\":{\"45\":2,\"46\":2,\"48\":1,\"57\":1,\"72\":1,\"73\":1,\"79\":1,\"81\":2,\"115\":1,\"116\":1,\"147\":1,\"152\":1,\"153\":1,\"154\":3,\"179\":6,\"197\":2,\"205\":1,\"208\":1,\"215\":1,\"225\":1}}],[\"二层是service元素\",{\"3\":{\"225\":1}}],[\"二是把字节数组写入到输出流\",{\"3\":{\"212\":1}}],[\"二进制\",{\"3\":{\"187\":1}}],[\"二\",{\"0\":{\"1\":1,\"59\":1,\"79\":1,\"142\":1,\"204\":1,\"226\":1},\"2\":{\"1\":1,\"59\":1,\"79\":1,\"142\":1,\"204\":1,\"226\":1}}],[\"一堆servletcontextinitializer接口的实现类\",{\"3\":{\"234\":1}}],[\"一样的逻辑\",{\"3\":{\"226\":1}}],[\"一样的道理\",{\"3\":{\"226\":1}}],[\"一层也就是根节点是server元素\",{\"3\":{\"225\":1}}],[\"一是把日志信息转换成字节数组\",{\"3\":{\"212\":1}}],[\"一个可选的level和一个可选的addtivity属性\",{\"3\":{\"210\":1}}],[\"一个channel包含了一个channelpipeline\",{\"3\":{\"197\":1}}],[\"一个线程可以监听多个连接的channel事件\",{\"3\":{\"192\":1}}],[\"一个netty应用通常由一个bootstrap开始\",{\"3\":{\"189\":1}}],[\"一个或多个线程池真正的无连接数据报套接字支持\",{\"3\":{\"185\":1}}],[\"一个工程如果依赖一个静态链接库\",{\"3\":{\"55\":1}}],[\"一条条简单的命令\",{\"3\":{\"173\":1}}],[\"一般用于细粒度级别上\",{\"3\":{\"203\":1}}],[\"一般和在粗粒度级别上\",{\"3\":{\"203\":1}}],[\"一般有slf4j+log4j\",{\"3\":{\"202\":1}}],[\"一般都会有以下变量\",{\"3\":{\"76\":1}}],[\"一般这样的命令支持通过public\",{\"3\":{\"68\":1}}],[\"一\",{\"0\":{\"0\":1,\"53\":1,\"78\":1,\"134\":1,\"203\":1,\"225\":1},\"2\":{\"0\":1,\"53\":1,\"78\":1,\"134\":1,\"203\":1,\"225\":1}}],[\"volatile\",{\"3\":{\"225\":1}}],[\"void\",{\"3\":{\"138\":1,\"146\":1,\"151\":2,\"198\":2,\"206\":1,\"225\":10,\"226\":1,\"228\":2,\"229\":3,\"232\":2,\"233\":2,\"234\":5,\"235\":3,\"238\":2}}],[\"vm\",{\"3\":{\"179\":4}}],[\"vmware\",{\"3\":{\"46\":1}}],[\"ve\",{\"3\":{\"118\":1}}],[\"verifymojo\",{\"3\":{\"177\":1}}],[\"verify\",{\"3\":{\"177\":2}}],[\"verifying\",{\"3\":{\"114\":1}}],[\"version>\",{\"3\":{\"176\":1,\"177\":1,\"178\":1,\"179\":3,\"205\":1}}],[\"version=\",{\"3\":{\"137\":2,\"208\":2,\"216\":1}}],[\"versions\",{\"3\":{\"110\":1,\"115\":3,\"179\":1}}],[\"version是这个函数的一个特殊关键字\",{\"3\":{\"63\":1}}],[\"version是版本号\",{\"3\":{\"63\":1}}],[\"version\",{\"3\":{\"35\":1,\"60\":1,\"63\":2,\"64\":1,\"66\":2,\"67\":1,\"71\":2,\"79\":1,\"81\":2,\"111\":1,\"115\":11,\"176\":1,\"179\":5}}],[\"v0\",{\"3\":{\"113\":2}}],[\"v6\",{\"3\":{\"110\":2}}],[\"v1\",{\"3\":{\"116\":2}}],[\"v12\",{\"3\":{\"110\":2}}],[\"v14\",{\"3\":{\"110\":2}}],[\"v16\",{\"3\":{\"110\":2}}],[\"v7\",{\"3\":{\"110\":1}}],[\"valueof\",{\"3\":{\"238\":1}}],[\"value=\",{\"3\":{\"208\":2,\"219\":1}}],[\"valve\",{\"3\":{\"238\":5}}],[\"valves\",{\"3\":{\"238\":1}}],[\"valid\",{\"3\":{\"72\":1,\"238\":2}}],[\"variable\",{\"3\":{\"71\":1,\"73\":2,\"116\":1}}],[\"var\",{\"3\":{\"69\":1,\"74\":1,\"179\":7}}],[\"vscode先添加tasks\",{\"3\":{\"81\":1}}],[\"vscode下launch\",{\"3\":{\"79\":1}}],[\"vscode\",{\"3\":{\"61\":1,\"78\":6,\"83\":4}}],[\"vscode远程插件指定私钥\",{\"0\":{\"41\":1},\"2\":{\"41\":1}}],[\"vs\",{\"0\":{\"83\":1},\"2\":{\"83\":1},\"3\":{\"61\":1,\"78\":2}}],[\"v3\",{\"3\":{\"60\":1}}],[\"vg\",{\"3\":{\"51\":1}}],[\"via\",{\"3\":{\"110\":1,\"197\":1}}],[\"visibility\",{\"3\":{\"153\":1}}],[\"vision\",{\"3\":{\"88\":2}}],[\"visualstudio\",{\"3\":{\"78\":1}}],[\"visual\",{\"0\":{\"78\":1},\"2\":{\"78\":1},\"3\":{\"78\":1}}],[\"viz\",{\"3\":{\"77\":1}}],[\"videostab\",{\"3\":{\"77\":1}}],[\"videoio\",{\"3\":{\"77\":1}}],[\"video\",{\"3\":{\"77\":1}}],[\"virtual\",{\"3\":{\"46\":1}}],[\"vim\",{\"3\":{\"40\":1,\"42\":1,\"50\":1}}],[\"v\",{\"0\":{\"0\":1,\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":1,\"119\":1,\"120\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1,\"162\":1,\"163\":1,\"164\":1,\"165\":1,\"166\":1,\"167\":1,\"168\":1,\"169\":1,\"170\":1,\"171\":1,\"172\":1,\"173\":1,\"174\":1,\"175\":1,\"176\":1,\"177\":1,\"178\":1,\"179\":1,\"180\":1,\"181\":1,\"182\":1,\"183\":1,\"184\":1,\"185\":1,\"186\":1,\"187\":1,\"188\":1,\"189\":1,\"190\":1,\"191\":1,\"192\":1,\"193\":1,\"194\":1,\"195\":1,\"196\":1,\"197\":1,\"198\":1,\"199\":1,\"200\":1,\"201\":1,\"202\":1,\"203\":1,\"204\":1,\"205\":1,\"206\":1,\"207\":1,\"208\":1,\"209\":1,\"210\":1,\"211\":1,\"212\":1,\"213\":1,\"214\":1,\"215\":1,\"216\":1,\"217\":1,\"218\":1,\"219\":1,\"220\":1,\"221\":1,\"222\":1,\"223\":1,\"224\":1,\"225\":1,\"226\":1,\"227\":1,\"228\":1,\"229\":1,\"230\":1,\"231\":1,\"232\":1,\"233\":1,\"234\":1,\"235\":1,\"236\":1,\"237\":1,\"238\":1},\"3\":{\"25\":1,\"27\":1,\"33\":2,\"110\":3,\"114\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,At(t,{fields:["title","header","text","customFields"],storeFields:["title","header","text","customFields"]})]));self.onmessage=({data:{query:e,locale:t,options:s}})=>{self.postMessage(zt(e,Ct[t],s))};
//# sourceMappingURL=index.js.map
