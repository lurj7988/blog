const Z="ENTRIES",W="KEYS",T="VALUES",p="";let O=class{constructor(e,t){const s=e._tree,n=Array.from(s.keys());this.set=e,this._type=t,this._path=n.length>0?[{node:s,keys:n}]:[]}next(){const e=this.dive();return this.backtrack(),e}dive(){if(this._path.length===0)return{done:!0,value:void 0};const{node:e,keys:t}=E(this._path);if(E(t)===p)return{done:!1,value:this.result()};const s=e.get(E(t));return this._path.push({node:s,keys:Array.from(s.keys())}),this.dive()}backtrack(){if(this._path.length===0)return;const e=E(this._path).keys;e.pop(),!(e.length>0)&&(this._path.pop(),this.backtrack())}key(){return this.set._prefix+this._path.map(({keys:e})=>E(e)).filter(e=>e!==p).join("")}value(){return E(this._path).node.get(p)}result(){switch(this._type){case T:return this.value();case W:return this.key();default:return[this.key(),this.value()]}}[Symbol.iterator](){return this}};const E=e=>e[e.length-1],tt=(e,t,s)=>{const n=new Map;if(t===void 0)return n;const u=t.length+1,i=u+s,o=new Uint8Array(i*u).fill(s+1);for(let r=0;r<u;++r)o[r]=r;for(let r=1;r<i;++r)o[r*u]=r;return $(e,t,s,n,o,1,u,""),n},$=(e,t,s,n,u,i,o,r)=>{const a=i*o;t:for(const c of e.keys())if(c===p){const d=u[a-1];d<=s&&n.set(r,[e.get(c),d])}else{let d=i;for(let l=0;l<c.length;++l,++d){const f=c[l],m=o*d,F=m-o;let h=u[m];const g=Math.max(0,d-s-1),A=Math.min(o-1,d+s);for(let _=g;_<A;++_){const I=f!==t[_],x=u[F+_]+ +I,y=u[F+_+1]+1,k=u[m+_]+1,V=u[m+_+1]=Math.min(x,y,k);V<h&&(h=V)}if(h>s)continue t}$(e.get(c),t,s,n,u,d,o,r+c)}};let R=class w{constructor(t=new Map,s=""){this._size=void 0,this._tree=t,this._prefix=s}atPrefix(t){if(!t.startsWith(this._prefix))throw new Error("Mismatched prefix");const[s,n]=b(this._tree,t.slice(this._prefix.length));if(s===void 0){const[u,i]=S(n);for(const o of u.keys())if(o!==p&&o.startsWith(i)){const r=new Map;return r.set(o.slice(i.length),u.get(o)),new w(r,t)}}return new w(s,t)}clear(){this._size=void 0,this._tree.clear()}delete(t){return this._size=void 0,et(this._tree,t)}entries(){return new O(this,Z)}forEach(t){for(const[s,n]of this)t(s,n,this)}fuzzyGet(t,s){return tt(this._tree,t,s)}get(t){const s=M(this._tree,t);return s!==void 0?s.get(p):void 0}has(t){const s=M(this._tree,t);return s!==void 0&&s.has(p)}keys(){return new O(this,W)}set(t,s){if(typeof t!="string")throw new Error("key must be a string");return this._size=void 0,B(this._tree,t).set(p,s),this}get size(){if(this._size)return this._size;this._size=0;const t=this.entries();for(;!t.next().done;)this._size+=1;return this._size}update(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=B(this._tree,t);return n.set(p,s(n.get(p))),this}fetch(t,s){if(typeof t!="string")throw new Error("key must be a string");this._size=void 0;const n=B(this._tree,t);let u=n.get(p);return u===void 0&&n.set(p,u=s()),u}values(){return new O(this,T)}[Symbol.iterator](){return this.entries()}static from(t){const s=new w;for(const[n,u]of t)s.set(n,u);return s}static fromObject(t){return w.from(Object.entries(t))}};const b=(e,t,s=[])=>{if(t.length===0||e==null)return[e,s];for(const n of e.keys())if(n!==p&&t.startsWith(n))return s.push([e,n]),b(e.get(n),t.slice(n.length),s);return s.push([e,t]),b(void 0,"",s)},M=(e,t)=>{if(t.length===0||e==null)return e;for(const s of e.keys())if(s!==p&&t.startsWith(s))return M(e.get(s),t.slice(s.length))},B=(e,t)=>{const s=t.length;t:for(let n=0;e&&n<s;){for(const i of e.keys())if(i!==p&&t[n]===i[0]){const o=Math.min(s-n,i.length);let r=1;for(;r<o&&t[n+r]===i[r];)++r;const a=e.get(i);if(r===i.length)e=a;else{const c=new Map;c.set(i.slice(r),a),e.set(t.slice(n,n+r),c),e.delete(i),e=c}n+=r;continue t}const u=new Map;return e.set(t.slice(n),u),u}return e},et=(e,t)=>{const[s,n]=b(e,t);if(s!==void 0){if(s.delete(p),s.size===0)q(n);else if(s.size===1){const[u,i]=s.entries().next().value;P(n,u,i)}}},q=e=>{if(e.length===0)return;const[t,s]=S(e);if(t.delete(s),t.size===0)q(e.slice(0,-1));else if(t.size===1){const[n,u]=t.entries().next().value;n!==p&&P(e.slice(0,-1),n,u)}},P=(e,t,s)=>{if(e.length===0)return;const[n,u]=S(e);n.set(u+t,s),n.delete(u)},S=e=>e[e.length-1],st=/[\n\r -#%-*,-/:;?@[-\]_{}\u00A0\u00A1\u00A7\u00AB\u00B6\u00B7\u00BB\u00BF\u037E\u0387\u055A-\u055F\u0589\u058A\u05BE\u05C0\u05C3\u05C6\u05F3\u05F4\u0609\u060A\u060C\u060D\u061B\u061E\u061F\u066A-\u066D\u06D4\u0700-\u070D\u07F7-\u07F9\u0830-\u083E\u085E\u0964\u0965\u0970\u09FD\u0A76\u0AF0\u0C77\u0C84\u0DF4\u0E4F\u0E5A\u0E5B\u0F04-\u0F12\u0F14\u0F3A-\u0F3D\u0F85\u0FD0-\u0FD4\u0FD9\u0FDA\u104A-\u104F\u10FB\u1360-\u1368\u1400\u166E\u1680\u169B\u169C\u16EB-\u16ED\u1735\u1736\u17D4-\u17D6\u17D8-\u17DA\u1800-\u180A\u1944\u1945\u1A1E\u1A1F\u1AA0-\u1AA6\u1AA8-\u1AAD\u1B5A-\u1B60\u1BFC-\u1BFF\u1C3B-\u1C3F\u1C7E\u1C7F\u1CC0-\u1CC7\u1CD3\u2000-\u200A\u2010-\u2029\u202F-\u2043\u2045-\u2051\u2053-\u205F\u207D\u207E\u208D\u208E\u2308-\u230B\u2329\u232A\u2768-\u2775\u27C5\u27C6\u27E6-\u27EF\u2983-\u2998\u29D8-\u29DB\u29FC\u29FD\u2CF9-\u2CFC\u2CFE\u2CFF\u2D70\u2E00-\u2E2E\u2E30-\u2E4F\u3000-\u3003\u3008-\u3011\u3014-\u301F\u3030\u303D\u30A0\u30FB\uA4FE\uA4FF\uA60D-\uA60F\uA673\uA67E\uA6F2-\uA6F7\uA874-\uA877\uA8CE\uA8CF\uA8F8-\uA8FA\uA8FC\uA92E\uA92F\uA95F\uA9C1-\uA9CD\uA9DE\uA9DF\uAA5C-\uAA5F\uAADE\uAADF\uAAF0\uAAF1\uABEB\uFD3E\uFD3F\uFE10-\uFE19\uFE30-\uFE52\uFE54-\uFE61\uFE63\uFE68\uFE6A\uFE6B\uFF01-\uFF03\uFF05-\uFF0A\uFF0C-\uFF0F\uFF1A\uFF1B\uFF1F\uFF20\uFF3B-\uFF3D\uFF3F\uFF5B\uFF5D\uFF5F-\uFF65]+/u,j="or",N="and",nt="and_not",ut=(e,t)=>{e.includes(t)||e.push(t)},G=(e,t)=>{for(const s of t)e.includes(s)||e.push(s)},it=({score:e},{score:t})=>t-e,ot=()=>new Map,v=e=>{const t=new Map;for(const s of Object.keys(e))t.set(parseInt(s,10),e[s]);return t},J=(e,t)=>Object.prototype.hasOwnProperty.call(e,t)?e[t]:void 0,rt={[j]:(e,t)=>{for(const s of t.keys()){const n=e.get(s);if(n==null)e.set(s,t.get(s));else{const{score:u,terms:i,match:o}=t.get(s);n.score=n.score+u,n.match=Object.assign(n.match,o),G(n.terms,i)}}return e},[N]:(e,t)=>{const s=new Map;for(const n of t.keys()){const u=e.get(n);if(u==null)continue;const{score:i,terms:o,match:r}=t.get(n);G(u.terms,o),s.set(n,{score:u.score+i,terms:u.terms,match:Object.assign(u.match,r)})}return s},[nt]:(e,t)=>{for(const s of t.keys())e.delete(s);return e}},ct=(e,t,s,n,u,i)=>{const{k:o,b:r,d:a}=i;return Math.log(1+(s-t+.5)/(t+.5))*(a+e*(o+1)/(e+o*(1-r+r*n/u)))},ht=e=>(t,s,n)=>{const u=typeof e.fuzzy=="function"?e.fuzzy(t,s,n):e.fuzzy||!1,i=typeof e.prefix=="function"?e.prefix(t,s,n):e.prefix===!0;return{term:t,fuzzy:u,prefix:i}},lt={k:1.2,b:.7,d:.5},dt={idField:"id",extractField:(e,t)=>e[t],tokenize:(e,t)=>e.split(st),processTerm:(e,t)=>e.toLowerCase(),fields:void 0,searchOptions:void 0,storeFields:[],logger:(e,t,s)=>console!=null&&console.warn!=null&&console[e](t),autoVacuum:!0},U={combineWith:j,prefix:!1,fuzzy:!1,maxFuzzy:6,boost:{},weights:{fuzzy:.45,prefix:.375},bm25:lt},at={combineWith:N,prefix:(e,t,s)=>t===s.length-1},ft={batchSize:1e3,batchWait:10},H={minDirtFactor:.1,minDirtCount:20},Ft={...ft,...H};class gt{constructor(t){if((t==null?void 0:t.fields)==null)throw new Error('SlimSearch: option "fields" must be provided');const s=t.autoVacuum==null||t.autoVacuum===!0?Ft:t.autoVacuum;this._options={...dt,...t,autoVacuum:s,searchOptions:{...U,...t.searchOptions||{}},autoSuggestOptions:{...at,...t.autoSuggestOptions||{}}},this._index=new R,this._documentCount=0,this._documentIds=new Map,this._idToShortId=new Map,this._fieldIds={},this._fieldLength=new Map,this._avgFieldLength=[],this._nextId=0,this._storedFields=new Map,this._dirtCount=0,this._currentVacuum=null,this._enqueuedVacuum=null,this._enqueuedVacuumConditions=H,this.addFields(this._options.fields)}get isVacuuming(){return this._currentVacuum!=null}get dirtCount(){return this._dirtCount}get dirtFactor(){return this._dirtCount/(1+this._documentCount+this._dirtCount)}get documentCount(){return this._documentCount}get termCount(){return this._index.size}toJSON(){const t=[];for(const[s,n]of this._index){const u={};for(const[i,o]of n)u[i]=Object.fromEntries(o);t.push([s,u])}return{documentCount:this._documentCount,nextId:this._nextId,documentIds:Object.fromEntries(this._documentIds),fieldIds:this._fieldIds,fieldLength:Object.fromEntries(this._fieldLength),averageFieldLength:this._avgFieldLength,storedFields:Object.fromEntries(this._storedFields),dirtCount:this._dirtCount,index:t,serializationVersion:2}}addFields(t){for(let s=0;s<t.length;s++)this._fieldIds[t[s]]=s}}const K=(e,t,s,n)=>{for(const u of Object.keys(e._fieldIds))if(e._fieldIds[u]===s){e._options.logger("warn",`SlimSearch: document with ID ${e._documentIds.get(t)} has changed before removal: term "${n}" was not present in field "${u}". Removing a document after it has changed can corrupt the index!`,"version_conflict");return}},mt=(e,t,s,n)=>{if(!e._index.has(n)){K(e,s,t,n);return}const u=e._index.fetch(n,ot),i=u.get(t);i==null||i.get(s)==null?K(e,s,t,n):i.get(s)<=1?i.size<=1?u.delete(t):i.delete(s):i.set(s,i.get(s)-1),e._index.get(n).size===0&&e._index.delete(n)},X=(e,t=j)=>{if(e.length===0)return new Map;const s=t.toLowerCase();return e.reduce(rt[s])||new Map},L=(e,t,s,n,u,i,o,r,a=new Map)=>{if(u==null)return a;for(const c of Object.keys(i)){const d=i[c],l=e._fieldIds[c],f=u.get(l);if(f==null)continue;let m=f.size;const F=e._avgFieldLength[l];for(const h of f.keys()){if(!e._documentIds.has(h)){mt(e,l,h,s),m-=1;continue}const g=o?o(e._documentIds.get(h),s,e._storedFields.get(h)):1;if(!g)continue;const A=f.get(h),_=e._fieldLength.get(h)[l],I=ct(A,m,e._documentCount,_,F,r),x=n*d*g*I,y=a.get(h);if(y){y.score+=x,ut(y.terms,t);const k=J(y.match,s);k?k.push(c):y.match[s]=[c]}else a.set(h,{score:x,terms:[t],match:{[s]:[c]}})}}return a},pt=(e,t,s)=>{const n={...e._options.searchOptions,...s},u=(n.fields||e._options.fields).reduce((h,g)=>({...h,[g]:J(n.boost,g)||1}),{}),{boostDocument:i,weights:o,maxFuzzy:r,bm25:a}=n,{fuzzy:c,prefix:d}={...U.weights,...o},l=e._index.get(t.term),f=L(e,t.term,t.term,1,l,u,i,a);let m,F;if(t.prefix&&(m=e._index.atPrefix(t.term)),t.fuzzy){const h=t.fuzzy===!0?.2:t.fuzzy,g=h<1?Math.min(r,Math.round(t.term.length*h)):h;g&&(F=e._index.fuzzyGet(t.term,g))}if(m)for(const[h,g]of m){const A=h.length-t.term.length;if(!A)continue;F==null||F.delete(h);const _=d*h.length/(h.length+.3*A);L(e,t.term,h,_,g,u,i,a,f)}if(F)for(const h of F.keys()){const[g,A]=F.get(h);if(!A)continue;const _=c*h.length/(h.length+A);L(e,t.term,h,_,g,u,i,a,f)}return f},Y=(e,t,s={})=>{if(typeof t!="string"){const d={...s,...t,queries:void 0},l=t.queries.map(f=>Y(e,f,d));return X(l,d.combineWith)}const{tokenize:n,processTerm:u,searchOptions:i}=e._options,o={tokenize:n,processTerm:u,...i,...s},{tokenize:r,processTerm:a}=o,c=r(t).flatMap(d=>a(d)).filter(d=>!!d).map(ht(o)).map(d=>pt(e,d,o));return X(c,o.combineWith)},_t=(e,t,s={})=>{const n=Y(e,t,s),u=[];for(const[i,{score:o,terms:r,match:a}]of n){const c=r.length,d={id:e._documentIds.get(i),score:o*c,terms:Object.keys(a),match:a};Object.assign(d,e._storedFields.get(i)),(s.filter==null||s.filter(d))&&u.push(d)}return u.sort(it),u},At=({index:e,documentCount:t,nextId:s,documentIds:n,fieldIds:u,fieldLength:i,averageFieldLength:o,storedFields:r,dirtCount:a,serializationVersion:c},d)=>{if(c!==1&&c!==2)throw new Error("SlimSearch: cannot deserialize an index created with an incompatible version");const l=new gt(d);l._documentCount=t,l._nextId=s,l._documentIds=v(n),l._idToShortId=new Map,l._fieldIds=u,l._fieldLength=v(i),l._avgFieldLength=o,l._storedFields=v(r),l._dirtCount=a||0,l._index=new R;for(const[f,m]of l._documentIds)l._idToShortId.set(m,f);for(const[f,m]of e){const F=new Map;for(const h of Object.keys(m)){let g=m[h];c===1&&(g=g.ds),F.set(parseInt(h,10),v(g))}l._index.set(f,F)}return l},Q=Object.entries,yt=Object.fromEntries,Et=Object.keys,z=100,C=20,D=(e,t)=>{const s=e.toLowerCase(),n=t.toLowerCase(),u=[];let i=0,o=0;const r=(c,d=!1)=>{let l="";o===0?l=c.length>C?`… ${c.slice(-C)}`:c:d?l=c.length+o>z?`${c.slice(0,z-o)}… `:c:l=c.length>C?`${c.slice(0,C)} … ${c.slice(-C)}`:c,l&&u.push(l),o+=l.length,d||(u.push(["mark",t]),o+=t.length,o>=z&&u.push(" …"))};let a=s.indexOf(n,i);if(a===-1)return null;for(;a>=0;){const c=a+n.length;if(r(e.slice(i,a)),i=c,o>z)break;a=s.indexOf(n,i)}return o<z&&r(e.slice(i),!0),u},zt=(e,t,s={})=>{const n={};return _t(t,e,{fuzzy:.2,prefix:!0,boost:{header:4,text:2,title:1},...s}).forEach(u=>{const{title:i,id:o,terms:r,score:a}=u,c=o.split("#")[0];n[c]||(n[c]={title:i,contents:[]});const{contents:d}=n[c],l=f=>{const m=D(u.title,f);if(m&&d.push({type:"title",id:o,display:m,score:a}),"header"in u){const F=D(u.header,f);F&&d.push({type:"heading",id:o.split("#")[0],display:F,score:a})}if("text"in u)for(const F of u.text){const h=D(F,f);h&&d.push({type:"content",header:"header"in u?u.header:u.title,id:o.split("#")[0],display:h,score:a})}"customFields"in u&&Q(u.customFields).forEach(([F,h])=>{h.forEach(g=>{const A=D(g,f);A&&d.push({type:"custom",id:o,index:F,display:A,score:a})})})};r.forEach(f=>{l(f)})}),Et(n).sort((u,i)=>n[i].contents.reduce((o,{score:r})=>o+r,0)-n[u].contents.reduce((o,{score:r})=>o+r,0)).map(u=>n[u])},Ct=yt(Q(JSON.parse("{\"/en/\":{\"documentCount\":57,\"nextId\":57,\"documentIds\":{\"0\":\"v-5aa3d8ba\",\"1\":\"v-395cd082#catalog\",\"2\":\"v-4a2a37eb#markdown-introduction\",\"3\":\"v-4a2a37eb#markdown-config\",\"4\":\"v-4a2a37eb#markdown-extension\",\"5\":\"v-4a2a37eb#vuepress-enhancement\",\"6\":\"v-4a2a37eb#theme-enhancement\",\"7\":\"v-4a2a37eb#custom-container\",\"8\":\"v-4a2a37eb#tabs\",\"9\":\"v-4a2a37eb#code-tabs\",\"10\":\"v-4a2a37eb#superscript-and-subscript\",\"11\":\"v-4a2a37eb#align\",\"12\":\"v-4a2a37eb#attrs\",\"13\":\"v-4a2a37eb#footnote\",\"14\":\"v-4a2a37eb#mark\",\"15\":\"v-4a2a37eb#tasklist\",\"16\":\"v-4a2a37eb#image-enhancement\",\"17\":\"v-4a2a37eb#card\",\"18\":\"v-4a2a37eb#chart\",\"19\":\"v-4a2a37eb#echarts\",\"20\":\"v-4a2a37eb#flowchart\",\"21\":\"v-4a2a37eb#mermaid\",\"22\":\"v-4a2a37eb#tex\",\"23\":\"v-4a2a37eb#include-files\",\"24\":\"v-4a2a37eb#code-demo\",\"25\":\"v-4a2a37eb#stylize\",\"26\":\"v-4a2a37eb#playground\",\"27\":\"v-4a2a37eb#vue-playground\",\"28\":\"v-4a2a37eb#presentation\",\"29\":\"v-4a2a37eb\",\"30\":\"v-0e4acecb#page-information\",\"31\":\"v-0e4acecb#page-content\",\"32\":\"v-0e4acecb#page-structure\",\"33\":\"v-fb852992#heading-2\",\"34\":\"v-fb852992#heading-3\",\"35\":\"v-4fd051a1#heading-2\",\"36\":\"v-4fd051a1#heading-3\",\"37\":\"v-57615dc1#heading-2\",\"38\":\"v-57615dc1#heading-3\",\"39\":\"v-285adf66#heading-2\",\"40\":\"v-285adf66#heading-3\",\"41\":\"v-58aa03b4#heading-2\",\"42\":\"v-58aa03b4#heading-3\",\"43\":\"v-55405276#heading-2\",\"44\":\"v-55405276#heading-3\",\"45\":\"v-51d6a138#heading-2\",\"46\":\"v-51d6a138#heading-3\",\"47\":\"v-4e6ceffa#heading-2\",\"48\":\"v-4e6ceffa#heading-3\",\"49\":\"v-e748286e#heading-2\",\"50\":\"v-e748286e#heading-3\",\"51\":\"v-e3de7730#heading-2\",\"52\":\"v-e3de7730#heading-3\",\"53\":\"v-e074c5f2#heading-2\",\"54\":\"v-e074c5f2#heading-3\",\"55\":\"v-dd0b14b4#heading-2\",\"56\":\"v-dd0b14b4#heading-3\"},\"fieldIds\":{\"id\":0,\"title\":1,\"header\":2,\"text\":3,\"customFields\":4},\"fieldLength\":{\"0\":[2,2,null,7],\"1\":[3,2,1,8],\"2\":[4,2,2,1],\"3\":[4,2,2,1],\"4\":[4,2,2,1],\"5\":[4,2,2,1],\"6\":[4,2,2,1],\"7\":[4,2,2,1],\"8\":[3,2,1,1],\"9\":[4,2,2,1],\"10\":[5,2,3,1],\"11\":[3,2,1,1],\"12\":[3,2,1,1],\"13\":[3,2,1,1],\"14\":[3,2,1,1],\"15\":[3,2,1,1],\"16\":[4,2,2,1],\"17\":[3,2,1,1],\"18\":[3,2,1,1],\"19\":[3,2,1,1],\"20\":[3,2,1,1],\"21\":[3,2,1,1],\"22\":[3,2,1,1],\"23\":[4,2,2,1],\"24\":[4,2,2,1],\"25\":[3,2,1,1],\"26\":[3,2,1,1],\"27\":[4,2,2,1],\"28\":[3,2,1,1],\"29\":[2,2,null,19],\"30\":[4,2,2,1],\"31\":[4,2,2,1],\"32\":[4,2,2,1],\"33\":[4,1,2,5],\"34\":[4,1,2,5],\"35\":[4,2,2,5],\"36\":[4,2,2,5],\"37\":[4,1,2,5],\"38\":[4,1,2,5],\"39\":[4,1,2,5],\"40\":[4,1,2,5],\"41\":[4,2,2,5],\"42\":[4,2,2,5],\"43\":[4,2,2,1],\"44\":[4,2,2,1],\"45\":[4,2,2,5],\"46\":[4,2,2,5],\"47\":[4,2,2,5],\"48\":[4,2,2,5],\"49\":[4,2,2,5],\"50\":[4,2,2,5],\"51\":[4,2,2,1],\"52\":[4,2,2,1],\"53\":[4,2,2,5],\"54\":[4,2,2,5],\"55\":[4,2,2,5],\"56\":[4,2,2,5]},\"averageFieldLength\":[3.6666666666666665,1.894736842105263,1.691470054446461,2.9473684210526314],\"storedFields\":{\"0\":{\"title\":\"Intro Page\",\"text\":[\"Place your introduction and profile here.\"]},\"1\":{\"title\":\"Features Demo\",\"header\":\"Catalog\",\"text\":[\"Markdown Enhance\",\"Page Config\",\"Function Disable\",\"Encryption Demo\"]},\"2\":{\"title\":\"Markdown Enhance\",\"header\":\"Markdown Introduction\",\"text\":[]},\"3\":{\"title\":\"Markdown Enhance\",\"header\":\"Markdown Config\",\"text\":[]},\"4\":{\"title\":\"Markdown Enhance\",\"header\":\"Markdown Extension\",\"text\":[]},\"5\":{\"title\":\"Markdown Enhance\",\"header\":\"VuePress Enhancement\",\"text\":[]},\"6\":{\"title\":\"Markdown Enhance\",\"header\":\"Theme Enhancement\",\"text\":[]},\"7\":{\"title\":\"Markdown Enhance\",\"header\":\"Custom Container\",\"text\":[]},\"8\":{\"title\":\"Markdown Enhance\",\"header\":\"Tabs\",\"text\":[]},\"9\":{\"title\":\"Markdown Enhance\",\"header\":\"Code Tabs\",\"text\":[]},\"10\":{\"title\":\"Markdown Enhance\",\"header\":\"Superscript and Subscript\",\"text\":[]},\"11\":{\"title\":\"Markdown Enhance\",\"header\":\"Align\",\"text\":[]},\"12\":{\"title\":\"Markdown Enhance\",\"header\":\"Attrs\",\"text\":[]},\"13\":{\"title\":\"Markdown Enhance\",\"header\":\"Footnote\",\"text\":[]},\"14\":{\"title\":\"Markdown Enhance\",\"header\":\"Mark\",\"text\":[]},\"15\":{\"title\":\"Markdown Enhance\",\"header\":\"Tasklist\",\"text\":[]},\"16\":{\"title\":\"Markdown Enhance\",\"header\":\"Image Enhancement\",\"text\":[]},\"17\":{\"title\":\"Markdown Enhance\",\"header\":\"Card\",\"text\":[]},\"18\":{\"title\":\"Markdown Enhance\",\"header\":\"Chart\",\"text\":[]},\"19\":{\"title\":\"Markdown Enhance\",\"header\":\"Echarts\",\"text\":[]},\"20\":{\"title\":\"Markdown Enhance\",\"header\":\"Flowchart\",\"text\":[]},\"21\":{\"title\":\"Markdown Enhance\",\"header\":\"Mermaid\",\"text\":[]},\"22\":{\"title\":\"Markdown Enhance\",\"header\":\"Tex\",\"text\":[]},\"23\":{\"title\":\"Markdown Enhance\",\"header\":\"Include files\",\"text\":[]},\"24\":{\"title\":\"Markdown Enhance\",\"header\":\"Code Demo\",\"text\":[]},\"25\":{\"title\":\"Markdown Enhance\",\"header\":\"Stylize\",\"text\":[]},\"26\":{\"title\":\"Markdown Enhance\",\"header\":\"Playground\",\"text\":[]},\"27\":{\"title\":\"Markdown Enhance\",\"header\":\"Vue Playground\",\"text\":[]},\"28\":{\"title\":\"Markdown Enhance\",\"header\":\"Presentation\",\"text\":[]},\"29\":{\"title\":\"Markdown Enhance\",\"text\":[\"VuePress basically generate pages from Markdown files. So you can use it to generate documentation or blog sites easily.\"]},\"30\":{\"title\":\"Page Config\",\"header\":\"Page Information\",\"text\":[]},\"31\":{\"title\":\"Page Config\",\"header\":\"Page Content\",\"text\":[]},\"32\":{\"title\":\"Page Config\",\"header\":\"Page Structure\",\"text\":[]},\"33\":{\"title\":\"Cherry\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"34\":{\"title\":\"Cherry\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"35\":{\"title\":\"Dragon Fruit\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"36\":{\"title\":\"Dragon Fruit\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"37\":{\"title\":\"Strawberry\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"38\":{\"title\":\"Strawberry\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"39\":{\"title\":\"Tomato\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"40\":{\"title\":\"Tomato\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"41\":{\"title\":\"Apple 1\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"42\":{\"title\":\"Apple 1\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"43\":{\"title\":\"Apple 2\",\"header\":\"Heading 2\",\"text\":[]},\"44\":{\"title\":\"Apple 2\",\"header\":\"Heading 3\",\"text\":[]},\"45\":{\"title\":\"Apple 3\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"46\":{\"title\":\"Apple 3\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"47\":{\"title\":\"Apple 4\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"48\":{\"title\":\"Apple 4\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"49\":{\"title\":\"Banana 1\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"50\":{\"title\":\"Banana 1\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"51\":{\"title\":\"Banana 2\",\"header\":\"Heading 2\",\"text\":[]},\"52\":{\"title\":\"Banana 2\",\"header\":\"Heading 3\",\"text\":[]},\"53\":{\"title\":\"Banana 3\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"54\":{\"title\":\"Banana 3\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]},\"55\":{\"title\":\"Banana 4\",\"header\":\"Heading 2\",\"text\":[\"Here is the content.\"]},\"56\":{\"title\":\"Banana 4\",\"header\":\"Heading 3\",\"text\":[\"Here is the content.\"]}},\"dirtCount\":0,\"index\":[[\"1\",{\"1\":{\"41\":1,\"42\":1,\"49\":1,\"50\":1}}],[\"51d6a138\",{\"0\":{\"45\":1,\"46\":1}}],[\"55405276\",{\"0\":{\"43\":1,\"44\":1}}],[\"58aa03b4\",{\"0\":{\"41\":1,\"42\":1}}],[\"57615dc1\",{\"0\":{\"37\":1,\"38\":1}}],[\"5aa3d8ba\",{\"0\":{\"0\":1}}],[\"4\",{\"1\":{\"47\":1,\"48\":1,\"55\":1,\"56\":1}}],[\"4e6ceffa\",{\"0\":{\"47\":1,\"48\":1}}],[\"4fd051a1\",{\"0\":{\"35\":1,\"36\":1}}],[\"4a2a37eb\",{\"0\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1}}],[\"3\",{\"0\":{\"34\":1,\"36\":1,\"38\":1,\"40\":1,\"42\":1,\"44\":1,\"46\":1,\"48\":1,\"50\":1,\"52\":1,\"54\":1,\"56\":1},\"1\":{\"45\":1,\"46\":1,\"53\":1,\"54\":1},\"2\":{\"34\":1,\"36\":1,\"38\":1,\"40\":1,\"42\":1,\"44\":1,\"46\":1,\"48\":1,\"50\":1,\"52\":1,\"54\":1,\"56\":1}}],[\"395cd082\",{\"0\":{\"1\":1}}],[\"285adf66\",{\"0\":{\"39\":1,\"40\":1}}],[\"2\",{\"0\":{\"33\":1,\"35\":1,\"37\":1,\"39\":1,\"41\":1,\"43\":1,\"45\":1,\"47\":1,\"49\":1,\"51\":1,\"53\":1,\"55\":1},\"1\":{\"43\":1,\"44\":1,\"51\":1,\"52\":1},\"2\":{\"33\":1,\"35\":1,\"37\":1,\"39\":1,\"41\":1,\"43\":1,\"45\":1,\"47\":1,\"49\":1,\"51\":1,\"53\":1,\"55\":1}}],[\"heading\",{\"0\":{\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1},\"2\":{\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"here\",{\"3\":{\"0\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"0e4acecb\",{\"0\":{\"30\":1,\"31\":1,\"32\":1}}],[\"banana\",{\"1\":{\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"basically\",{\"3\":{\"29\":1}}],[\"blog\",{\"3\":{\"29\":1}}],[\"or\",{\"3\":{\"29\":1}}],[\"use\",{\"3\":{\"29\":1}}],[\"you\",{\"3\":{\"29\":1}}],[\"your\",{\"3\":{\"0\":1}}],[\"generate\",{\"3\":{\"29\":2}}],[\"strawberry\",{\"1\":{\"37\":1,\"38\":1}}],[\"structure\",{\"0\":{\"32\":1},\"2\":{\"32\":1}}],[\"stylize\",{\"0\":{\"25\":1},\"2\":{\"25\":1}}],[\"sites\",{\"3\":{\"29\":1}}],[\"so\",{\"3\":{\"29\":1}}],[\"subscript\",{\"0\":{\"10\":1},\"2\":{\"10\":1}}],[\"superscript\",{\"0\":{\"10\":1},\"2\":{\"10\":1}}],[\"mermaid\",{\"0\":{\"21\":1},\"2\":{\"21\":1}}],[\"mark\",{\"0\":{\"14\":1},\"2\":{\"14\":1}}],[\"markdown\",{\"0\":{\"2\":1,\"3\":1,\"4\":1},\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1},\"2\":{\"2\":1,\"3\":1,\"4\":1},\"3\":{\"1\":1,\"29\":1}}],[\"is\",{\"3\":{\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"it\",{\"3\":{\"29\":1}}],[\"information\",{\"0\":{\"30\":1},\"2\":{\"30\":1}}],[\"include\",{\"0\":{\"23\":1},\"2\":{\"23\":1}}],[\"introduction\",{\"0\":{\"2\":1},\"2\":{\"2\":1},\"3\":{\"0\":1}}],[\"intro\",{\"1\":{\"0\":1}}],[\"image\",{\"0\":{\"16\":1},\"2\":{\"16\":1}}],[\"apple\",{\"1\":{\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1}}],[\"attrs\",{\"0\":{\"12\":1},\"2\":{\"12\":1}}],[\"align\",{\"0\":{\"11\":1},\"2\":{\"11\":1}}],[\"and\",{\"0\":{\"10\":1},\"2\":{\"10\":1},\"3\":{\"0\":1}}],[\"the\",{\"3\":{\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"theme\",{\"0\":{\"6\":1},\"2\":{\"6\":1}}],[\"tomato\",{\"1\":{\"39\":1,\"40\":1}}],[\"to\",{\"3\":{\"29\":1}}],[\"tex\",{\"0\":{\"22\":1},\"2\":{\"22\":1}}],[\"tasklist\",{\"0\":{\"15\":1},\"2\":{\"15\":1}}],[\"tabs\",{\"0\":{\"8\":1,\"9\":1},\"2\":{\"8\":1,\"9\":1}}],[\"e074c5f2\",{\"0\":{\"53\":1,\"54\":1}}],[\"e3de7730\",{\"0\":{\"51\":1,\"52\":1}}],[\"e748286e\",{\"0\":{\"49\":1,\"50\":1}}],[\"easily\",{\"3\":{\"29\":1}}],[\"echarts\",{\"0\":{\"19\":1},\"2\":{\"19\":1}}],[\"extension\",{\"0\":{\"4\":1},\"2\":{\"4\":1}}],[\"encryption\",{\"3\":{\"1\":1}}],[\"enhancement\",{\"0\":{\"5\":1,\"6\":1,\"16\":1},\"2\":{\"5\":1,\"6\":1,\"16\":1}}],[\"enhance\",{\"1\":{\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1},\"3\":{\"1\":1}}],[\"dd0b14b4\",{\"0\":{\"55\":1,\"56\":1}}],[\"dragon\",{\"1\":{\"35\":1,\"36\":1}}],[\"documentation\",{\"3\":{\"29\":1}}],[\"disable\",{\"3\":{\"1\":1}}],[\"demo\",{\"0\":{\"24\":1},\"1\":{\"1\":1},\"2\":{\"24\":1},\"3\":{\"1\":1}}],[\"fruit\",{\"1\":{\"35\":1,\"36\":1}}],[\"from\",{\"3\":{\"29\":1}}],[\"fb852992\",{\"0\":{\"33\":1,\"34\":1}}],[\"files\",{\"0\":{\"23\":1},\"2\":{\"23\":1},\"3\":{\"29\":1}}],[\"flowchart\",{\"0\":{\"20\":1},\"2\":{\"20\":1}}],[\"footnote\",{\"0\":{\"13\":1},\"2\":{\"13\":1}}],[\"function\",{\"3\":{\"1\":1}}],[\"features\",{\"1\":{\"1\":1}}],[\"cherry\",{\"1\":{\"33\":1,\"34\":1}}],[\"chart\",{\"0\":{\"18\":1},\"2\":{\"18\":1}}],[\"can\",{\"3\":{\"29\":1}}],[\"card\",{\"0\":{\"17\":1},\"2\":{\"17\":1}}],[\"catalog\",{\"0\":{\"1\":1},\"2\":{\"1\":1}}],[\"code\",{\"0\":{\"9\":1,\"24\":1},\"2\":{\"9\":1,\"24\":1}}],[\"content\",{\"0\":{\"31\":1},\"2\":{\"31\":1},\"3\":{\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}],[\"container\",{\"0\":{\"7\":1},\"2\":{\"7\":1}}],[\"config\",{\"0\":{\"3\":1},\"1\":{\"30\":1,\"31\":1,\"32\":1},\"2\":{\"3\":1},\"3\":{\"1\":1}}],[\"custom\",{\"0\":{\"7\":1},\"2\":{\"7\":1}}],[\"presentation\",{\"0\":{\"28\":1},\"2\":{\"28\":1}}],[\"profile\",{\"3\":{\"0\":1}}],[\"playground\",{\"0\":{\"26\":1,\"27\":1},\"2\":{\"26\":1,\"27\":1}}],[\"place\",{\"3\":{\"0\":1}}],[\"pages\",{\"3\":{\"29\":1}}],[\"page\",{\"0\":{\"30\":1,\"31\":1,\"32\":1},\"1\":{\"0\":1,\"30\":1,\"31\":1,\"32\":1},\"2\":{\"30\":1,\"31\":1,\"32\":1},\"3\":{\"1\":1}}],[\"vue\",{\"0\":{\"27\":1},\"2\":{\"27\":1}}],[\"vuepress\",{\"0\":{\"5\":1},\"2\":{\"5\":1},\"3\":{\"29\":1}}],[\"v\",{\"0\":{\"0\":1,\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1}}]],\"serializationVersion\":2},\"/\":{\"documentCount\":162,\"nextId\":162,\"documentIds\":{\"0\":\"v-184f4da6#个人优势\",\"1\":\"v-184f4da6#工作经历\",\"2\":\"v-184f4da6#工作业绩\",\"3\":\"v-184f4da6#拥有技能\",\"4\":\"v-184f4da6#项目经历\",\"5\":\"v-184f4da6#公司devops体系搭建\",\"6\":\"v-184f4da6#工作内容\",\"7\":\"v-184f4da6#工作业绩-1\",\"8\":\"v-638c1d18#目录\",\"9\":\"v-4bd1b706#git常用命令\",\"10\":\"v-4bd1b706#git配置\",\"11\":\"v-56155b0b#部署\",\"12\":\"v-56155b0b#监控linux\",\"13\":\"v-56155b0b#prometheus配置\",\"14\":\"v-56155b0b#监控mysql\",\"15\":\"v-76fa89e8#medusa编译\",\"16\":\"v-76fa89e8#medusa暴力破解ssh\",\"17\":\"v-76fa89e8#medusa命令详解\",\"18\":\"v-76fa89e8\",\"19\":\"v-d2f82416#nmap-编译\",\"20\":\"v-d2f82416\",\"21\":\"v-95ad2ff2#ubuntu开启ssh远程登录\",\"22\":\"v-95ad2ff2#ssh免密登录\",\"23\":\"v-95ad2ff2#在本地windows上生成公钥私钥对\",\"24\":\"v-95ad2ff2#将公钥放入linux服务器\",\"25\":\"v-95ad2ff2#vscode远程插件指定私钥\",\"26\":\"v-95ad2ff2#禁止ssh用户名密码登录\",\"27\":\"v-31936b48#学术加速\",\"28\":\"v-31936b48#磁盘分区与挂载\",\"29\":\"v-31936b48#查看空闲磁盘空间\",\"30\":\"v-31936b48#新建分区\",\"31\":\"v-31936b48#格式化分区\",\"32\":\"v-31936b48#检测分区\",\"33\":\"v-31936b48#移动文件\",\"34\":\"v-31936b48#磁盘挂载\",\"35\":\"v-31936b48#查看挂载\",\"36\":\"v-6e2ab9da#目录\",\"37\":\"v-190004b0#一、准备知识\",\"38\":\"v-190004b0#_1-1-c-的编译过程\",\"39\":\"v-190004b0#_1-2-静态链接库和动态链接库\",\"40\":\"v-190004b0#_1-3-为什么需要cmake\",\"41\":\"v-190004b0#_1-3-1-g-命令行编译\",\"42\":\"v-190004b0#_1-3-2-cmake简介\",\"43\":\"v-190004b0#二、cmake基础知识\",\"44\":\"v-190004b0#_2-1-安装\",\"45\":\"v-190004b0#_2-2-第一个cmake例子\",\"46\":\"v-190004b0#_2-3-语法基础\",\"47\":\"v-190004b0#_2-3-1-指定版本\",\"48\":\"v-190004b0#_2-3-2-设置项目\",\"49\":\"v-190004b0#_2-3-3-添加可执行文件目标\",\"50\":\"v-190004b0#_2-3-4-生成静态库并链接\",\"51\":\"v-190004b0#_2-3-5-生成动态库并连接\",\"52\":\"v-190004b0#_2-3-6-cmake-中的-public、private、interface\",\"53\":\"v-190004b0#_2-3-7-变量\",\"54\":\"v-190004b0#_2-3-8-include引入其他代码\",\"55\":\"v-190004b0#_2-3-9-条件控制\",\"56\":\"v-190004b0#_2-3-10-cmake分步编译\",\"57\":\"v-190004b0#_2-3-11-生成器表达式\",\"58\":\"v-190004b0#_2-3-12-函数和宏\",\"59\":\"v-190004b0#_2-3-13-设置安装\",\"60\":\"v-190004b0#_2-3-14-寻找依赖-find-package\",\"61\":\"v-190004b0#三、opencv-cmake示例\",\"62\":\"v-16ccd7d7#一、visual-studio-code相关信息\",\"63\":\"v-16ccd7d7#二、python开发环境配置\",\"64\":\"v-16ccd7d7#三、ubuntu安装环境\",\"65\":\"v-16ccd7d7#四、c-开发环境配置\",\"66\":\"v-16ccd7d7#五、第一个c-程序\",\"67\":\"v-16ccd7d7#六、附录-vs-code-中变量解释\",\"68\":\"v-2ab91088#quick-start\",\"69\":\"v-2ab91088#build-with-ffmpeg-support\",\"70\":\"v-2ab91088#build-core-modules\",\"71\":\"v-2ab91088#install\",\"72\":\"v-2ab91088\",\"73\":\"v-0a7030ed#什么是qsv文件\",\"74\":\"v-0a7030ed#头部信息\",\"75\":\"v-0a7030ed#索引信息\",\"76\":\"v-0a7030ed#json字符串\",\"77\":\"v-0a7030ed#视频分段信息\",\"78\":\"v-0a7030ed#总结\",\"79\":\"v-0a7030ed#后记\",\"80\":\"v-5d439e64#创建类\",\"81\":\"v-5d439e64#通用方法\",\"82\":\"v-5d439e64#逐字节读取文件\",\"83\":\"v-5d439e64#字节数组转16进制字符串\",\"84\":\"v-5d439e64#字节数组转int\",\"85\":\"v-5d439e64#老版本解密算法\",\"86\":\"v-5d439e64#新版本解密算法\",\"87\":\"v-5d439e64#获取qsv头部信息\",\"88\":\"v-5d439e64#获取json数据\",\"89\":\"v-5d439e64#提取视频信息\",\"90\":\"v-5d439e64#参考资料\",\"91\":\"v-5d439e64#往期系列\",\"92\":\"v-7bb63861#about-npm\",\"93\":\"v-7bb63861#using-npm\",\"94\":\"v-8dc8c832#intro\",\"95\":\"v-8dc8c832#about\",\"96\":\"v-8dc8c832#installing-and-updating\",\"97\":\"v-8dc8c832#install-update-script\",\"98\":\"v-8dc8c832#troubleshooting-on-linux\",\"99\":\"v-8dc8c832#usage\",\"100\":\"v-8dc8c832#use-a-mirror-of-node-binaries\",\"101\":\"v-9362ca3c#usage\",\"102\":\"v-9362ca3c\",\"103\":\"v-a3f8969a#注册\",\"104\":\"v-a3f8969a#查看runner命令\",\"105\":\"v-a3f8969a#查看runner配置文件\",\"106\":\"v-a3f8969a#客户端构建路径\",\"107\":\"v-83c1c1da#安装python环境\",\"108\":\"v-83c1c1da#安装git\",\"109\":\"v-83c1c1da#安装环境\",\"110\":\"v-83c1c1da#installation-and-running\",\"111\":\"v-83c1c1da#automatic-installation-on-windows\",\"112\":\"v-83c1c1da#automatic-installation-on-linux\",\"113\":\"v-83c1c1da#installation-on-apple-silicon\",\"114\":\"v-8058109c#反向词\",\"115\":\"v-8058109c\",\"116\":\"v-3e0e47ea#目录\",\"117\":\"v-dee51094#参数详解\",\"118\":\"v-dee51094#源码解析\",\"119\":\"v-dee51094#try-to-avoid-xx-usegclogfilerotation\",\"120\":\"v-dee51094#a-losing-old-gc-logs\",\"121\":\"v-dee51094#b-mixed-up-gc-logs\",\"122\":\"v-dee51094#c-forwarding-gc-logs-to-a-central-location\",\"123\":\"v-dee51094#d-tooling\",\"124\":\"v-dee51094#recommended-solution\",\"125\":\"v-1ae5788d#配置\",\"126\":\"v-1ae5788d#原理\",\"127\":\"v-1ae5788d#agentmojo\",\"128\":\"v-1ae5788d#faq\",\"129\":\"v-1ae5788d\",\"130\":\"v-76945eec#default生命周期\",\"131\":\"v-76945eec#plugin-bindings-for-pom-packaging\",\"132\":\"v-76945eec#plugin-bindings-for-jar-packaging\",\"133\":\"v-76945eec#plugin-bindings-for-ejb-packaging\",\"134\":\"v-76945eec#plugin-bindings-for-maven-plugin-packaging\",\"135\":\"v-76945eec#plugin-bindings-for-war-packaging\",\"136\":\"v-76945eec#plugin-bindings-for-ear-packaging\",\"137\":\"v-76945eec#plugin-bindings-for-rar-packaging\",\"138\":\"v-76945eec#clean生命周期\",\"139\":\"v-76945eec#site生命周期\",\"140\":\"v-76945eec\",\"141\":\"v-7420a911#about-apache-maven-surefire\",\"142\":\"v-7420a911#project-documentation\",\"143\":\"v-7420a911#maven-surefire-plugin\",\"144\":\"v-7420a911#maven-failsafe-plugin\",\"145\":\"v-7420a911#maven-surefire-report-plugin\",\"146\":\"v-7420a911#faq\",\"147\":\"v-727d1ccd#前言\",\"148\":\"v-727d1ccd#一、原来的tomcat启动流程\",\"149\":\"v-727d1ccd#二、内嵌tomcat\",\"150\":\"v-727d1ccd#三、springboot启动tomcat的时机\",\"151\":\"v-727d1ccd#_3-1-servletwebserverapplicationcontext\",\"152\":\"v-727d1ccd#_3-2-tomcatservletwebserverfactory\",\"153\":\"v-727d1ccd#四、springboot中的tomcat如何加载servlet\",\"154\":\"v-727d1ccd#_4-1-servlet3-0标准可以不使用web-xml完成servlet的注册\",\"155\":\"v-727d1ccd#_4-2-springboot中的servletcontainerinitializer的实现类\",\"156\":\"v-727d1ccd#_4-3-servletcontainerinitializer的实现类执行onstartup方法的时机\",\"157\":\"v-727d1ccd#_4-4-分析tomcatstarter的onstartup方法\",\"158\":\"v-727d1ccd#_4-5-dispatcherservlet如何加载到tomcat容器\",\"159\":\"v-727d1ccd#总结\",\"160\":\"v-727d1ccd#个性化实现\",\"161\":\"v-727d1ccd#faq\"},\"fieldIds\":{\"id\":0,\"title\":1,\"header\":2,\"text\":3,\"customFields\":4},\"fieldLength\":{\"0\":[3,1,1,1],\"1\":[3,1,1,1],\"2\":[3,1,1,1],\"3\":[3,1,1,1],\"4\":[3,1,1,1],\"5\":[3,1,1,1],\"6\":[3,1,1,1],\"7\":[4,1,1,1],\"8\":[3,1,1,1],\"9\":[3,1,1,43],\"10\":[3,1,1,29],\"11\":[3,1,1,29],\"12\":[3,1,1,16],\"13\":[3,1,1,89],\"14\":[3,1,1,38],\"15\":[3,1,1,33],\"16\":[3,1,1,22],\"17\":[3,1,1,63],\"18\":[2,1,null,1],\"19\":[4,1,2,24],\"20\":[2,1,null,1],\"21\":[3,1,1,7],\"22\":[3,1,1,1],\"23\":[3,1,1,11],\"24\":[3,1,1,11],\"25\":[3,1,1,16],\"26\":[3,1,1,44],\"27\":[3,1,1,10],\"28\":[3,1,1,1],\"29\":[3,1,1,106],\"30\":[3,1,1,163],\"31\":[3,1,1,63],\"32\":[3,1,1,39],\"33\":[3,1,1,13],\"34\":[3,1,1,21],\"35\":[3,1,1,48],\"36\":[3,1,1,2],\"37\":[4,1,2,1],\"38\":[5,1,2,77],\"39\":[5,1,3,44],\"40\":[5,1,3,1],\"41\":[6,1,4,51],\"42\":[6,1,4,19],\"43\":[4,1,2,1],\"44\":[5,1,3,32],\"45\":[4,1,2,22],\"46\":[5,1,3,1],\"47\":[6,1,4,42],\"48\":[5,1,3,27],\"49\":[5,1,3,15],\"50\":[6,1,4,85],\"51\":[6,1,4,68],\"52\":[10,1,8,61],\"53\":[6,1,4,13],\"54\":[6,1,4,4],\"55\":[6,1,4,42],\"56\":[6,1,4,70],\"57\":[6,1,4,84],\"58\":[6,1,4,26],\"59\":[6,1,4,39],\"60\":[8,1,6,35],\"61\":[5,1,3,85],\"62\":[6,1,4,48],\"63\":[4,1,2,58],\"64\":[4,1,2,13],\"65\":[5,1,3,148],\"66\":[5,1,2,17],\"67\":[7,1,5,34],\"68\":[4,1,2,1],\"69\":[6,1,4,6],\"70\":[5,1,3,51],\"71\":[3,1,1,108],\"72\":[2,1,null,33],\"73\":[3,1,1,1],\"74\":[3,1,1,1],\"75\":[3,1,1,1],\"76\":[3,1,1,1],\"77\":[3,1,1,1],\"78\":[3,1,1,1],\"79\":[3,1,1,1],\"80\":[3,1,1,1],\"81\":[3,1,1,1],\"82\":[3,1,1,1],\"83\":[3,1,1,1],\"84\":[3,1,1,1],\"85\":[3,1,1,1],\"86\":[3,1,1,1],\"87\":[3,1,1,1],\"88\":[3,1,1,1],\"89\":[3,1,1,1],\"90\":[3,1,1,1],\"91\":[3,1,1,1],\"92\":[4,1,2,69],\"93\":[4,1,2,15],\"94\":[3,1,1,43],\"95\":[3,1,1,36],\"96\":[5,1,3,1],\"97\":[5,1,3,77],\"98\":[5,1,3,56],\"99\":[3,1,1,110],\"100\":[8,1,6,69],\"101\":[3,1,1,22],\"102\":[2,1,null,29],\"103\":[3,3,1,15],\"104\":[3,3,1,4],\"105\":[3,3,1,7],\"106\":[3,3,1,6],\"107\":[3,2,1,1],\"108\":[3,2,1,1],\"109\":[3,2,1,1],\"110\":[5,2,3,1],\"111\":[6,2,4,1],\"112\":[6,2,4,1],\"113\":[6,2,4,1],\"114\":[3,1,1,1],\"115\":[2,1,null,10],\"116\":[3,2,1,2],\"117\":[3,1,1,51],\"118\":[3,1,1,160],\"119\":[7,1,5,52],\"120\":[7,1,5,66],\"121\":[7,1,5,61],\"122\":[10,1,8,56],\"123\":[4,1,2,27],\"124\":[4,1,2,72],\"125\":[3,1,1,1],\"126\":[3,1,1,1],\"127\":[3,1,1,1],\"128\":[3,1,1,1],\"129\":[2,1,null,30],\"130\":[3,1,1,1],\"131\":[7,1,5,1],\"132\":[7,1,5,1],\"133\":[7,1,5,1],\"134\":[7,1,6,1],\"135\":[7,1,5,1],\"136\":[7,1,5,1],\"137\":[7,1,5,1],\"138\":[3,1,1,1],\"139\":[3,1,1,1],\"140\":[2,1,null,18],\"141\":[6,1,4,14],\"142\":[4,1,2,7],\"143\":[5,1,3,62],\"144\":[5,1,3,64],\"145\":[6,1,4,64],\"146\":[3,1,1,432],\"147\":[3,2,1,8],\"148\":[4,2,2,233],\"149\":[4,2,2,73],\"150\":[4,2,2,7],\"151\":[5,2,3,69],\"152\":[5,2,3,121],\"153\":[4,2,2,1],\"154\":[7,2,5,47],\"155\":[5,2,3,57],\"156\":[5,2,3,91],\"157\":[4,2,2,141],\"158\":[5,2,3,124],\"159\":[3,2,1,15],\"160\":[3,2,1,5],\"161\":[3,2,1,247]},\"averageFieldLength\":[4.135802469135803,1.1913580246913582,2.199809694449751,33.962962962962955],\"storedFields\":{\"0\":{\"title\":\"个人简介\",\"header\":\"个人优势\",\"text\":[]},\"1\":{\"title\":\"个人简介\",\"header\":\"工作经历\",\"text\":[]},\"2\":{\"title\":\"个人简介\",\"header\":\"工作业绩\",\"text\":[]},\"3\":{\"title\":\"个人简介\",\"header\":\"拥有技能\",\"text\":[]},\"4\":{\"title\":\"个人简介\",\"header\":\"项目经历\",\"text\":[]},\"5\":{\"title\":\"个人简介\",\"header\":\"公司DevOps体系搭建\",\"text\":[]},\"6\":{\"title\":\"个人简介\",\"header\":\"工作内容\",\"text\":[]},\"7\":{\"title\":\"个人简介\",\"header\":\"工作业绩\",\"text\":[]},\"8\":{\"title\":\"前沿技术\",\"header\":\"目录\",\"text\":[\"人工智能\"]},\"9\":{\"title\":\"git\",\"header\":\"git常用命令\",\"text\":[\"git remote -v # 显示所有远程仓库 git remote rm newOrigin # 删除远程仓库 git remote add origin main # 新增远程仓库 git remote set-url origin https://github.com/lurj7988/blog.git # 设置远程仓库地址 git checkout # 显示所有本地仓库 git branch -a # 查看所有分支 git branch main # 创建一个名为main的新分支 git branch -d master # 删除分支 git checkout main # 切换到新的分支 git push origin main --force # 强制将本地仓库覆盖到远程仓库 git push --set-upstream origin main # fatal: The current branch main has no upstream branch. To push the current branch and set the remote as upstream \"]},\"10\":{\"title\":\"git\",\"header\":\"git配置\",\"text\":[\"proxy配置代理了clash的7890端口，实现通过vpn访问github\",\"[user] name = lurj email = naulurenjie@outlook.com [credential \\\"http://192.168.0.200\\\"] provider = generic [credential \\\"https://gitee.com\\\"] provider = generic [credential \\\"http://192.168.217.8\\\"] provider = generic [http] proxy = 192.168.188.1:7890 [https] proxy = 192.168.188.1:7890 [credential] helper = store \"]},\"11\":{\"title\":\"grafana\",\"header\":\"部署\",\"text\":[\"docker pull bitnami/prometheus:latest docker run -d --name=prometheus --net=host -v /opt/prometheus.yml:/opt/bitnami/prometheus/conf/prometheus.yml bitnami/prometheus:latest docker pull grafana/grafana docker run -d --name=grafana --net=host grafana/grafana:latest \",\"grafana访问地址http://192.168.220.235:3000/默认密码admin/admin\",\"prometheus访问地址http://192.168.220.235:9090/\",\"grafana监控模板下载地址https://grafana.com/grafana/dashboards/\"]},\"12\":{\"title\":\"grafana\",\"header\":\"监控linux\",\"text\":[\"安装包github下载地址https://github.com/prometheus/node_exporter\",\"./node_exporter >log.file 2>&1 & curl http://localhost:9100/metrics \"]},\"13\":{\"title\":\"grafana\",\"header\":\"prometheus配置\",\"text\":[\"# my global config global: scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute. evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute. # scrape_timeout is set to the global default (10s). # Alertmanager configuration alerting: alertmanagers: - static_configs: - targets: # - alertmanager:9093 # Load rules once and periodically evaluate them according to the global 'evaluation_interval'. rule_files: # - \\\"first_rules.yml\\\" # - \\\"second_rules.yml\\\" # A scrape configuration containing exactly one endpoint to scrape: # Here it's Prometheus itself. scrape_configs: # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config. - job_name: \\\"prometheus\\\" # metrics_path defaults to '/metrics' # scheme defaults to 'http'. static_configs: - targets: [\\\"localhost:9090\\\"] # add a new node - job_name: \\\"prometheus_agent\\\" static_configs: - targets: [\\\"192.168.220.216:9100\\\",\\\"192.168.220.215:9100\\\"] - job_name: 'mysql' static_configs: - targets: [\\\"192.168.220.215:9104\\\"] \"]},\"14\":{\"title\":\"grafana\",\"header\":\"监控mysql\",\"text\":[\"安装包github下载地址https://github.com/prometheus/mysqld_exporter\",\"touch mysqld_exporter.cnf nohup ./mysqld_exporter --config.my-cnf=mysqld_exporter.cnf & curl http://localhost:9104/metrics \",\"[client] user=exporter password=eXpIHB666QWE! \",\"create user 'exporter'@'127.0.0.1' IDENTIFIED BY 'eXpIHB666QWE!'; GRANT SELECT, PROCESS, SUPER, REPLICATION CLIENT, RELOAD ON *.* TO 'exporter'@'127.0.0.1'; \"]},\"15\":{\"title\":\"medusa\",\"header\":\"medusa编译\",\"text\":[\"./configure --build=x86-pc-linux-gnu # 需要加上参数否则会报下面的错 make -j 4 && make install \",\"注意\",\"checking build system type... config.sub: too many arguments\",\"Try `config.sub --help' for more information.\",\"configure: error: /bin/sh ./config.sub x86_64-unknown-linux-gnu\"]},\"16\":{\"title\":\"medusa\",\"header\":\"medusa暴力破解ssh\",\"text\":[\"usage\",\"medusa -M ssh -H host.txt -U users.txt -p password medusa -M ssh -h 192.168.109.235 -u root -p 'Epoint123!@#' medusa -M ssh -h 192.168.109.235 -u root -P passwords.txt medusa -M ssh -H host.txt -U users.txt -p password \"]},\"17\":{\"title\":\"medusa\",\"header\":\"medusa命令详解\",\"text\":[\"medusa -h #目标IP地址 medusa -H #包含目标IP地址的文件 medusa -u #指定测试的用户名 medusa -U #指定测试的用户名字典 medusa -p #指定测试的密码 medusa -P #指定测试的密码字典 medusa -C #指定测试格式为user:password的字典 medusa -O #将输出结果保存在指定的文件 medusa -e #[n/s/ns] 额外的密码检测(n:空密码 s:用户名=密码) medusa -M #制定执行的模块(不带.mod扩展名) medusa -m #指定传递给模块的参数 medusa -d #查看支持破解的模块 medusa -s #启动SSL medusa -g #设置连接超时时间(默认值3) medusa -r #设置重试的次数(默认值3) medusa -t #设置同时测试的登陆总数 medusa -T #设置同时测试的主机总数 medusa -f #在破解得到第一个用户名或者密码后停止扫描主机 medusa -F #在任何竹主机上面破解得到第一个用户名或面后停止扫描 medusa -b #不显示软件启动时候的版本信息 medusa -q #显示模块的使用信息 medusa -v #详细等级(0-6) medusa -w #错误调试等级(0-10) medusa -V #显示版本信息 medusa -Z #恢复之前终端的扫描 \"]},\"18\":{\"title\":\"medusa\",\"text\":[\"Github\"]},\"19\":{\"title\":\"nmap\",\"header\":\"nmap 编译\",\"text\":[\"下载地址\",\"yum -y install bzip2 tar -xvf nmap-7.91.tar.bz2 ./configure --build=x86-pc-linux-gnu yum -y install gcc+ gcc-c++ make -j 4 && make install nmap --version \"]},\"20\":{\"title\":\"nmap\",\"text\":[\"Github\"]},\"21\":{\"title\":\"ssh\",\"header\":\"ubuntu开启SSH远程登录\",\"text\":[\"sudo apt install -y openssh-server \"]},\"22\":{\"title\":\"ssh\",\"header\":\"ssh免密登录\",\"text\":[]},\"23\":{\"title\":\"ssh\",\"header\":\"在本地Windows上生成公钥私钥对\",\"text\":[\"生产目录位于C:\\\\Users\\\\naulu\\\\.ssh，其中id_rsa为私钥，id_rsa.pub为公钥\",\"ssh-keygen \"]},\"24\":{\"title\":\"ssh\",\"header\":\"将公钥放入linux服务器\",\"text\":[\"将公钥中的内容添加到linux用户目录下的.ssh目录下的authorized_keys文件中。\",\"cd ~/.ssh touch authorized_keys vim authorized_keys \"]},\"25\":{\"title\":\"ssh\",\"header\":\"vscode远程插件指定私钥\",\"text\":[\"Host 192.168.188.128 HostName 192.168.188.128 User lurj IdentityFile C:/Users/naulu/.ssh/id_rsa \"]},\"26\":{\"title\":\"ssh\",\"header\":\"禁止ssh用户名密码登录\",\"text\":[\"修改 /etc/ssh/sshd_config\",\"$ sudo vim /etc/ssh/sshd_config ... # To disable tunneled clear text passwords, change to no here! #PasswordAuthentication yes #PermitEmptyPasswords no PasswordAuthentication no # Change to no to disable s/key passwords #ChallengeResponseAuthentication yes ChallengeResponseAuthentication no ... \",\"把PasswordAuthentication改成no，则ssh再发起登录的时候就会提示如下错误：\",\"ssh : Permission denied (publickey,gssapi-with-mic) \",\"通常禁止了用户名密码登录之后，需要配置public/private key pair进行登录，即ssh使用-i参数指定private key文件登录。\",\"反之如果ssh使用用户名密码登录遇到上述错误，则需要把 /etc/ssh/sshd_config配置文件里的配置项PasswordAuthentication改成yes。\"]},\"27\":{\"title\":\"ubuntu\",\"header\":\"学术加速\",\"text\":[\"export http_proxy=http://192.168.188.1:7890 && export https_proxy=http://192.168.188.1:7890 \"]},\"28\":{\"title\":\"ubuntu\",\"header\":\"磁盘分区与挂载\",\"text\":[\"参考链接\"]},\"29\":{\"title\":\"ubuntu\",\"header\":\"查看空闲磁盘空间\",\"text\":[\"进入以后，m表示帮助，F表示查看空闲的磁盘，q表示退出，d表示删除分区，n表示新建分区，w表示保存配置等\",\"lurj@lurj:~$ sudo fdisk /dev/sda Welcome to fdisk (util-linux 2.37.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. GPT PMBR size mismatch (41943039 != 167772159) will be corrected by write. This disk is currently in use - repartitioning is probably a bad idea. It's recommended to umount all file systems, and swapoff all swap partitions on this disk. Command (m for help): F Unpartitioned space /dev/sda: 60 GiB, 64425541120 bytes, 125831135 sectors Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes Start End Sectors Size 41940992 167772126 125831135 60G Command (m for help): All unwritten changes will be lost, do you really want to quit? y \"]},\"30\":{\"title\":\"ubuntu\",\"header\":\"新建分区\",\"text\":[\"选择n指令进去新建分区模式，选择默认分区号，根据指令设置磁盘大小，选择p指令查看分区是否添加成功，选择w指令保存配置，选择q指令退出不保存配置。\",\"lurj@lurj:~$ sudo fdisk /dev/sda Welcome to fdisk (util-linux 2.37.2). Changes will remain in memory only, until you decide to write them. Be careful before using the write command. GPT PMBR size mismatch (41943039 != 167772159) will be corrected by write. This disk is currently in use - repartitioning is probably a bad idea. It's recommended to umount all file systems, and swapoff all swap partitions on this disk. Command (m for help): n Partition number (4-128, default 4): First sector (41940992-167772126, default 41940992): Last sector, +/-sectors or +/-size{K,M,G,T,P} (41940992-167772126, default 167772126): Created a new partition 4 of type 'Linux filesystem' and of size 60 GiB. Command (m for help): p Disk /dev/sda: 80 GiB, 85899345920 bytes, 167772160 sectors Disk model: VMware Virtual S Units: sectors of 1 * 512 = 512 bytes Sector size (logical/physical): 512 bytes / 512 bytes I/O size (minimum/optimal): 512 bytes / 512 bytes Disklabel type: gpt Disk identifier: 209A5215-C303-4C38-802F-FADB733C53A6 Device Start End Sectors Size Type /dev/sda1 2048 4095 2048 1M BIOS boot /dev/sda2 4096 3719167 3715072 1.8G Linux filesystem /dev/sda3 3719168 41940991 38221824 18.2G Linux filesystem /dev/sda4 41940992 167772126 125831135 60G Linux filesystem Command (m for help): w The partition table has been altered. Syncing disks. \"]},\"31\":{\"title\":\"ubuntu\",\"header\":\"格式化分区\",\"text\":[\"对新分区/dev/sda4进行格式化，注意，不格式化不能对分区进行挂载\",\"lurj@lurj:~$ sudo mkfs -t ext4 /dev/sda4 mke2fs 1.46.5 (30-Dec-2021) Creating filesystem with 15728640 4k blocks and 3939840 inodes Filesystem UUID: 71fe7d8e-63cf-42c1-abe3-686063d202ce Superblock backups stored on blocks: 32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 4096000, 7962624, 11239424 Allocating group tables: done Writing inode tables: done Creating journal (65536 blocks): done Writing superblocks and filesystem accounting information: done \"]},\"32\":{\"title\":\"ubuntu\",\"header\":\"检测分区\",\"text\":[\"lurj@lurj:~$ sudo e2fsck -f /dev/sda4 e2fsck 1.46.5 (30-Dec-2021) Pass 1: Checking inodes, blocks, and sizes Pass 2: Checking directory structure Pass 3: Checking directory connectivity Pass 4: Checking reference counts Pass 5: Checking group summary information /dev/sda4: 11/3939840 files (0.0% non-contiguous), 326171/15728640 blocks \"]},\"33\":{\"title\":\"ubuntu\",\"header\":\"移动文件\",\"text\":[\"将需要挂载的目录中的文件先移动出去\",\"cd /home/lurj # 查看隐藏文件 ls -a # 移动文件包含隐藏文件 sudo mv *.[^.]* /opt/ \"]},\"34\":{\"title\":\"ubuntu\",\"header\":\"磁盘挂载\",\"text\":[\"# 此方法只能临时挂载，系统重启后就失效 sudo mount /dev/sda4 /home/lurj # 设置开机自动挂载，编辑/etc/fstab文件，添加如下内容 sudo vim /etc/fstab # /dev/sda4 /home/lurj ext4 defaults 0 0 # 取消挂载 sudo umount /home/lurj \"]},\"35\":{\"title\":\"ubuntu\",\"header\":\"查看挂载\",\"text\":[\"lurj@lurj:~$ df -h Filesystem Size Used Avail Use% Mounted on tmpfs 1.6G 1.6M 1.6G 1% /run /dev/mapper/ubuntu--vg-ubuntu--lv 9.8G 3.9G 5.5G 42% / tmpfs 7.8G 0 7.8G 0% /dev/shm tmpfs 5.0M 0 5.0M 0% /run/lock /dev/sda2 1.8G 253M 1.4G 16% /boot tmpfs 1.6G 4.0K 1.6G 1% /run/user/1000 /dev/sda4 59G 5.4G 51G 10% /home/lurj \"]},\"36\":{\"title\":\"人工智能\",\"header\":\"目录\",\"text\":[\"Stable Diffusion\"]},\"37\":{\"title\":\"cmake\",\"header\":\"一、准备知识\",\"text\":[]},\"38\":{\"title\":\"cmake\",\"header\":\"1.1 C++的编译过程\",\"text\":[\"使用g++等编译工具，从源码生成最终的可执行文件一般有这几步：预处理（Preprocess）、编译（Compile）、汇编（assemble）、链接（link）。\",\"imgcompile.jpg\",\"输入g++ --help可以看到对应命令：\",\"-E Preprocess only; do not compile, assemble or link. -S Compile only; do not assemble or link. -c Compile and assemble, but do not link. -o <file> Place the output into <file>. \",\"以下面程序为例：\",\"#include <iostream> int main() { std::cout << \\\"Hello World!\\\" << std::endl; return 0; } \",\"第一步：预处理 C++中预处理指令以 # 开头。在预处理阶段，会对#define进行宏展开，处理#if，#else等条件编译指令，递归处理#include。这一步需要我们添加所有头文件的引用路径。\",\"# 将xx.cpp源文件预处理成xx.i文件（文本文件） g++ -E main.cpp -o main.i \",\"第二步：编译\",\"检查代码的规范性和语法错误等，检查完毕后把代码翻译成汇编语言文件。\",\"# 将xx.i文件编译为xx.s的汇编文件（文本文件） g++ -S main.i -o main.s \",\"第三步：汇编 基于汇编语言文件生成二进制格式的目标文件。\",\"# 将xx.s文件汇编成xx.o的二进制目标文件 g++ -c main.s -o main.o \",\"第四步：链接\",\"将目标代码与所依赖的库文件进行关联或者组装，合成一个可执行文件\",\"# 将xx.o二进制文件进行链接，最终生成可执行程序 g++ main.o -o main \"]},\"39\":{\"title\":\"cmake\",\"header\":\"1.2 静态链接库和动态链接库\",\"text\":[\"所谓静态和动态，其区别是链接的阶段不一样。\",\"静态链接库名称一般是lib库名称.a（.a代表archive library），其链接发生在编译环节。一个工程如果依赖一个静态链接库，其输出的库或可执行文件会将静态链接库*.a打包到该工程的输出文件中（可执行文件或库），因此生成的文件比较大，但在运行时也就不再需要库文件了。\",\"而动态链接库的链接发生在程序的执行过程中，其在编译环节仅执行链接检查，而不进行真正的链接，这样可以节省系统的开销。动态库一般后缀名为*.so（.so代表shared object，Linux：lib库名称.so ，macOS：lib库名称.dylib）。动态链接库加载后，在内存中仅保存一份拷贝，多个程序依赖它时，不会重复加载和拷贝，这样也节省了内存的空间。\",\"以下图为例\",\"工程A和B依赖静态链接库 static library，A和B在运行时，内存中会有多份static library；\",\"工程A和B依赖动态链接库 shared library，A和B在运行时，内存中只有一份 shared library（shared：共享）。\",\"img20230122221807.jpg\",\"以上只是非常简单的一个解释以区分动态链接库和静态链接库。更多底层的知识需要单独进行深入讲解。\"]},\"40\":{\"title\":\"cmake\",\"header\":\"1.3 为什么需要CMake\",\"text\":[]},\"41\":{\"title\":\"cmake\",\"header\":\"1.3.1 g++ 命令行编译\",\"text\":[\"当我们编译附件中1.hello_world时，我们可以运行\",\"g++ main.cpp -o main \",\"当我们需要引入外部库时，如附件中的2.external_libs，需要引入gflags（Google开源的命令行参数处理库），我们则需要运行：\",\"# 安装gflags sudo apt-get install libgflags-dev libgflags2.2 // -lgflags表示链接gflags库，-o main表示输出文件名为main g++ main.cpp -lgflags -o main # 或者： # 安装pkg-config sudo apt-get install pkg-config // pkg-config是一个工具，用于查找和管理安装在系统上的库文件，--cflags --libs gflags表示查找gflags库的头文件和库文件的路径，-o main表示输出文件名为main g++ main.cpp `pkg-config --cflags --libs gflags` -o main # 测试输出 ./main --age 31 --name alice \",\"有些时候有一些常用库我们也不用手动添加头文件或链接库路径，通常g++能在默认查询路径中找到他们。当我们的项目文件变得多起来，引入的外部库也多起来时，命令行编译这种方式就会变得十分臃肿，也不方便调试和编辑。通常在测试单个文件时会使用命令行进行编译，但不推荐在一个实际项目中使用命令行编译。\"]},\"42\":{\"title\":\"cmake\",\"header\":\"1.3.2 CMake简介\",\"text\":[\"在实际工作中推荐使用CMake构建C++项目，CMake是用于构建、测试和软件打包的开源跨平台工具；\",\"特性：\",\"自动搜索可能需要的程序、库和头文件的能力；\",\"独立的构建目录（如build），可以安全清理\",\"支持复杂的自定义命令（下载、生成各种文件）\",\"自定义配置可选组件\",\"从简单的文本文件（CMakeLists.txt）自动生成工作区和项目的能力\",\"在主流平台上自动生成文件依赖项并支持并行构建\",\"几乎支持所有的IDE\"]},\"43\":{\"title\":\"cmake\",\"header\":\"二、CMake基础知识\",\"text\":[]},\"44\":{\"title\":\"cmake\",\"header\":\"2.1 安装\",\"text\":[\"ubuntu上请执行\",\"sudo apt install cmake -y \",\"或者编译安装：\",\"# 以v3.25.1版本为例 git clone -b v3.25.1 https://github.com/Kitware/CMake.git cd CMake # 你使用`--prefix`来指定安装路径，或者去掉`--prefix`,安装在默认路径。 ./bootstrap --prefix=<安装路径> && make && sudo make install # 验证 cmake --version \"]},\"45\":{\"title\":\"cmake\",\"header\":\"2.2 第一个CMake例子\",\"text\":[\"附件位置：3.first_cmake\",\"# 第一步：配置，-S 指定源码目录，-B 指定构建目录 cmake -S . -B build # 第二步：生成，--build 指定构建目录 cmake --build build # 运行 ./build/first_cmake \",\"vs code插件：\",\"安装twxs.cmake做代码提示；\",\"安装ms-vscode.cmake-tools界面操作。\"]},\"46\":{\"title\":\"cmake\",\"header\":\"2.3 语法基础\",\"text\":[]},\"47\":{\"title\":\"cmake\",\"header\":\"2.3.1 指定版本\",\"text\":[\"以附件：3.first_cmake/CMakeLists.txt为例：\",\"# CMake 最低版本号要求 cmake_minimum_required(VERSION 3.10) # first_cmake是项目名称，VERSION是版本号，DESCRIPTION是项目描述，LANGUAGES是项目语言 project(first_cmake VERSION 1.0.0 DESCRIPTION \\\"项目描述\\\" LANGUAGES CXX) # 添加一个可执行程序，first_cmake是可执行程序名称，main.cpp是源文件 add_executable(first_cmake main.cpp) \",\"命令cmake_minimum_required来指定当前工程所使用的CMake版本，不区分大小写的，通常用小写。VERSION是这个函数的一个特殊关键字，版本的值在关键字之后。CMake中的命令大多和cmake_minimum_required相似，不区分大小写，并有很多关键字来引导命令的参数输入（类似函数传参）。\"]},\"48\":{\"title\":\"cmake\",\"header\":\"2.3.2 设置项目\",\"text\":[\"以附件：3.first_cmake/CMakeLists.txt为例：\",\"project(ProjectName VERSION 1.0.0 DESCRIPTION \\\"项目描述\\\" LANGUAGES CXX) \",\"在CMakeLists.txt的开头，都会使用project来指定本项目的名称、版本、介绍、与使用的语言。在project中，第一个ProjectName（例子中用的是first_cmake）不需要参数，其他关键字都有参数。\"]},\"49\":{\"title\":\"cmake\",\"header\":\"2.3.3 添加可执行文件目标\",\"text\":[\"以附件：3.first_cmake/CMakeLists.txt为例：\",\"add_executable(first_cmake main.cpp) \",\"这里我们用到add_executable，其中第一个参数是最终生成的可执行文件名以及在CMake中定义的Target名。我们可以在CMake中继续使用Target的名字为Target的编译设置新的属性和行为。命令中第一个参数后面的参数都是编译目标所使用到的源文件。\"]},\"50\":{\"title\":\"cmake\",\"header\":\"2.3.4 生成静态库并链接\",\"text\":[\"附件位置：4.static_lib_test\",\"A.生成静态库\",\"#account_dir/CMakeLists.txt # 最低版本要求 cmake_minimum_required(VERSION 3.10) # 项目信息 project(Account) # 添加静态库，Linux下会生成libAccount.a add_library(Account STATIC Account.cpp Account.h) \",\"# 编译静态库后，会在build下生成 build/libAccount.a 静态库文件 account_dir/ ├── Account.cpp ├── Account.h ├── build │ └── libAccount.a └── CMakeLists.txt \",\"这里我们用到add_library, 和add_executable一样，Account为最终生成的库文件名（lib库名称.a），第二个参数是用于指定链接库为动态链接库（SHARED）还是静态链接库（STATIC），后面的参数是需要用到的源文件。\",\"B.链接\",\"# test_account/CMakeLists.txt # 最低版本要求 cmake_minimum_required(VERSION 3.10) # 项目名称 project(test_account) # 添加执行文件 add_executable(test_account test_account.cpp) # 添加头文件目录，如果不添加，找不到头文件 target_include_directories(test_account PUBLIC \\\"../account_dir\\\") # 添加库文件目录，如果不添加，找不到库文件 target_link_directories(test_account PUBLIC \\\"../account_dir/build\\\") # 添加目标链接库 target_link_libraries(test_account PRIVATE Account) \",\"# 编译后目录如下 4.static_lib_test/ ├── account_dir │ ├── Account.cpp │ ├── Account.h │ ├── build │ │ └── libAccount.a │ └── CMakeLists.txt └── test_account ├── build │ └── test_account ├── CMakeLists.txt └── test_account.cpp \",\"我们通过add_library和add_executable定义了Target，我们可以通过Target的名称为其添加属性，例如：\",\"# 指定目标包含的头文件目录 target_include_directories(test_account PUBLIC \\\"../account_dir\\\") # 添加库文件目录，如果不添加，找不到库文件 target_link_directories(test_account PUBLIC \\\"../account_dir/build\\\") # 指定目标链接的库 target_link_libraries(test_account PRIVATE Account) \",\"通过target_include_directories，我们给test_account添加了头文件引用路径\\\"../account_dir\\\"。上面的关键词PUBLIC,PRIVATE用于说明目标属性的作用范围，更多介绍参考下节。\",\"通过target_link_libraries，将前面生成的静态库libAccount.a链接给对象test_account，但此时还没指定库文件的目录，CMake无法定位库文件\",\"再通过target_link_directories，添加库文件的目录即可。\"]},\"51\":{\"title\":\"cmake\",\"header\":\"2.3.5 生成动态库并连接\",\"text\":[\"附件位置：5.dynamic_lib_test\",\"A.生成动态库\",\"#account_dir/CMakeLists.txt # 添加动态库，Linux下会生成libAccount.so add_library(Account SHARED Account.cpp Account.h) \",\"# 编译动态库后，会在build下生成 build/libAccount.so 动态库文件 account_dir/ ├── Account.cpp ├── Account.h ├── build │ └── libAccount.so └── CMakeLists.txt \",\"B.链接\",\"操作不变。\",\"# ldd查看依赖的动态库 ldd ./build/test_account libAccount.so => /home/enpei/Documents/course_cpp_tensorrt/course_5/src/5.dynamic_lib_test/test_account/../account_dir/build/libAccount.so (0x00007fb692cf1000) \",\"当然，也可以用一个CMakeLists.txt来一次性编译，参考附件6.build_together\",\"#6.build_together/CMakeLists.txt` # 最低版本要求 cmake_minimum_required(VERSION 3.10) # 项目信息 project(test_account) # 添加动态库 add_library(Account SHARED \\\"./account_dir/Account.cpp\\\" \\\"./account_dir/Account.h\\\") # 添加可执行文件 add_executable(test_account \\\"./test_account/test_account.cpp\\\") # 添加头文件 target_include_directories(test_account PUBLIC \\\"./account_dir\\\") # 添加链接库 target_link_libraries(test_account Account) \"]},\"52\":{\"title\":\"cmake\",\"header\":\"2.3.6 CMake 中的 PUBLIC、PRIVATE、INTERFACE\",\"text\":[\"CMake中经常使用target_...()类似的命令，一般这样的命令支持通过PUBLIC、PRIVATE、INTERFACE关键字来控制传播。\",\"以target_link_libraries(A B)为例，从理解的角度来看\",\"PRIVATE ：依赖项B仅链接到目标A，如果有C 链接了A，C不会链接B\",\"INTERFACE ：依赖项B并不链接到目标A，如果有C 链接了A，C会链接B\",\"PUBLIC ：依赖项B链接到目标A，如果有C 链接了A，C也会链接B\",\"其实就是对象属性的传递，打个散烟的比方：\",\"PRIVATE： 就是自己抽，不给别人抽\",\"INTERFACE ：就是自己不抽，给别人抽\",\"PUBLIC ：就是自己抽，也给别人抽\",\"从使用的角度来说，如果有C链接了目标A\",\"如果B仅用于A的实现，且不在头文件中提供给C使用，使用PRIVATE\",\"如果B不用于A的实现，仅在头文件中作为借口给C使用，使用INTERFACE\",\"如果B既用于A的实现，也在头文件中提供给C使用，使用PUBLIC\",\"举例：\",\"# 创建库 add_library(C c.cpp) add_library(D d.cpp) add_library(B b.cpp) # C是B的PUBLIC依赖项 target_link_libraries(B PUBLIC C) # D是B的PRIVATE依赖项 target_link_libraries(B PRIVATE D) # 添加可执行文件 add_executable(A a.cpp) # 将B链接到A target_link_libraries(A B) \",\"因为C是B的PUBLIC依赖项，所以C会传播到A\",\"因为D是B的PRIVATE依赖性，所以D不会传播到A\"]},\"53\":{\"title\":\"cmake\",\"header\":\"2.3.7 变量\",\"text\":[\"附件位置：7.message_var_demo\",\"像其他编程语言一样，我们应该将CMake理解为一门编程语言。我们也需要设定变量来储存我们的选项，信息。有时候我们通过变量来判断我们在什么平台上，通过变量来判断我们需要编译哪些Target，也通过变量来决定添加哪些依赖。\"]},\"54\":{\"title\":\"cmake\",\"header\":\"2.3.8 include引入其他代码\",\"text\":[\"附件位置：8.include_demo\"]},\"55\":{\"title\":\"cmake\",\"header\":\"2.3.9 条件控制\",\"text\":[\"附件位置：9.if_demo\",\"正如前面所讲，应该把CMake当成编程语言，除了可以设置变量以外，CMake还可以写条件控制。\",\"if(variable) # 为true的常量：ON、YES、TRUE、Y、1、非0数字 else() # 为false的常量：OFF、NO、FALSE、N、0、空字符串、NOTFOUND endif() \",\"可以和条件一起使用的关键词有\",\"NOT, TARGET, EXISTS (file), DEFINED等 STREQUAL, AND, OR, MATCHES (regular expression), VERSION_LESS, VERSION_LESS_EQUAL等 \"]},\"56\":{\"title\":\"cmake\",\"header\":\"2.3.10 CMake分步编译\",\"text\":[\"附件位置：10.steps_demo\",\"# 查看所有目标 $ cmake -S . -B build $ cd build $ cmake --build . --target help The following are some of the valid targets for this Makefile: ... all (the default if no target is provided) ... clean ... depend ... rebuild_cache ... edit_cache ... steps_demo ... main.o ... main.i ... main.s # 1.预处理 $ cmake --build . --target main.i # 输出：Preprocessing CXX source to CMakeFiles/steps_demo.dir/main.cpp.i # 可以打开滑到底部 # 2.编译 $ cmake --build . --target main.s # 输出汇编代码：Compiling CXX source to assembly CMakeFiles/steps_demo.dir/main.cpp.s # 3.汇编 $ cmake --build . --target main.o # 输出二进制文件：Building CXX object CMakeFiles/steps_demo.dir/main.cpp.o # 链接 $ cmake --build . Scanning dependencies of target steps_demo [ 50%] Linking CXX executable steps_demo [100%] Built target steps_demo # 运行 ./steps_demo \"]},\"57\":{\"title\":\"cmake\",\"header\":\"2.3.11 生成器表达式\",\"text\":[\"附件位置：11.generator_expression\",\"生成器表达式简单来说就是在CMake生成构建系统的时候根据不同配置动态生成特定的内容。有时用它可以让代码更加精简，我们介绍几种常用的。\",\"需要注意的是，生成表达式被展开是在生成构建系统的时候，所以不能通过解析配置CMakeLists.txt阶段的message命令打印，可以用类似file(GENERATE OUTPUT \\\"./generator_test.txt\\\" CONTENT \\\"$<$<BOOL:TRUE>:TEST>\\\")生成文件的方式间接测试。\",\"在其最一般的形式中，生成器表达式是$<...>，尖括号中间可以是如下几种类型：\",\"条件表达式\",\"变量查询（Variable-Query）\",\"目标查询（Target-Query）\",\"输出相关的表达式\",\"# 1.条件表达式：$<condition:true_string>，当condition为真时，返回true_string，否则返回空字符串 $<0:TEST> $<1:TEST> $<$<BOOL:TRUE>:TEST> # 2.变量查询（Variable-Query） $<TARGET_EXISTS:target>：判断目标是否存在 $<CONFIG:Debug>：判断当前构建类型是否为Debug # 3.目标查询（Target-Query） $<TARGET_FILE:target>：获取编译目标的文件路径 $<TARGET_FILE_NAME:target>：获取编译目标的文件名 \",\"4.输出相关表达式：用于在不同的环节使用不同参数，比如需要在install和build环节分别用不同的参数，我们可以这样写：\",\"add_library(Foo ...) target_include_directories(Foo PUBLIC $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}> $<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}> ) \",\"其中$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>仅在build环节生效;而$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>仅在install环节生效。通过设定不同阶段不同的参数，我们可以避免路径混乱的问题。\"]},\"58\":{\"title\":\"cmake\",\"header\":\"2.3.12 函数和宏\",\"text\":[\"附件位置：12.function_macro\",\"# 定义一个宏，宏名为my_macro，没有参数 macro(my_macro) message(\\\"宏内部的信息\\\") set(macro_var \\\"宏内部变量test\\\") endmacro(my_macro) # 定义一个函数，函数名为second_func，有两个参数 function(second_func arg1 arg2) message(\\\"第一个参数：${arg1}, 第二个参数：${arg2}\\\") endfunction(second_func) \"]},\"59\":{\"title\":\"cmake\",\"header\":\"2.3.13 设置安装\",\"text\":[\"附件位置：13.install_demo\",\"当需要发布项目时你需要指定项目文件的安装路径。下面的代码片段中，使用install安装demo_test，并分别将可执行文件安装在bin中，动态链接库和静态链接库都安装在lib，公共头文件安装在include。这里的路径都将添加${CMAKE_INSTALL_PREFIX}作为前缀（如果不设置CMAKE_INSTALL_PREFIX，则会安装到/usr/local 目录下）。实现安装的功能在你需要发布你项目给其他人使用时，非常有用。\",\"# 设置安装 install(TARGETS demo_test RUNTIME DESTINATION bin # 可执行文件 LIBRARY DESTINATION lib # 动态库 ARCHIVE DESTINATION lib # 静态库 PUBLIC_HEADER DESTINATION include # 公共头文件 ) \"]},\"60\":{\"title\":\"cmake\",\"header\":\"2.3.14 寻找依赖 find_package\",\"text\":[\"对于大部分支持了CMake的项目来说，均可以通过find_package找到对应的依赖库，参考附件：14.find_demo\",\"# 使用find_package寻找<LibaryName>库，如果找到，一般都会有以下变量（库作者设置） <LibaryName>_FOUND：表示是否找到 <LibaryName>_INCLUDE_DIR：表示头文件目录 <LibaryName>_LIBRARIES：表示库文件目录 \",\"假设我们编写了一个新的函数库，我们希望别的项目可以通过find_package对它进行引用，我们有两种办法：\",\"编写一个Find<LibraryName>.cmake，适用于导入非cmake安装的项目，参考附件：15.custom_find\",\"使用install安装，生成<LibraryName>Config.cmake文件，适用于导入自己开发的cmake项目，参考附件：16.custom_install_demo\"]},\"61\":{\"title\":\"cmake\",\"header\":\"三、opencv CMake示例\",\"text\":[\"附件位置：17.demo_opencv/\",\"安装OpenCV：sudo apt install libopencv-dev\",\"依赖和链接OpenCV与常规的添加依赖并没有太多不同，同时OpenCV提供了cmake find package的功能，因此我们可以通过find_package方便的定位opencv在系统中的位置和需要添加的依赖。\",\"find_package(OpenCV REQUIRED) message(\\\"OPENCV INCLUDE DIRS: ${OpenCV_INCLUDE_DIRS}\\\") message(\\\"OPENCV LINK LIBRARIES: ${OpenCV_LIBS}\\\") \",\"如果cmake找到了OpenCV，配置cmake后，命令行会有如下输出：\",\"OPENCV INCLUDE DIRS: /usr/include/opencv4 OPENCV LINK LIBRARIES: opencv_calib3d;opencv_core;opencv_dnn;opencv_features2d;opencv_flann;opencv_highgui;opencv_imgcodecs;opencv_imgproc;opencv_ml;opencv_objdetect;opencv_photo;opencv_stitching;opencv_video;opencv_videoio;opencv_aruco;opencv_bgsegm;opencv_bioinspired;opencv_ccalib;opencv_datasets;opencv_dnn_objdetect;opencv_dnn_superres;opencv_dpm;opencv_face;opencv_freetype;opencv_fuzzy;opencv_hdf;opencv_hfs;opencv_img_hash;opencv_line_descriptor;opencv_optflow;opencv_phase_unwrapping;opencv_plot;opencv_quality;opencv_reg;opencv_rgbd;opencv_saliency;opencv_shape;opencv_stereo;opencv_structured_light;opencv_superres;opencv_surface_matching;opencv_text;opencv_tracking;opencv_videostab;opencv_viz;opencv_ximgproc;opencv_xobjdetect;opencv_xphoto \"]},\"62\":{\"title\":\"c++环境配置\",\"header\":\"一、Visual Studio Code相关信息\",\"text\":[\"Visual Studio Code 下载地址：https://code.visualstudio.com/download\",\"VS Code建议安装插件列表： \",\"中文菜单： \",\"MS-CEINTL.vscode-language-pack-zh-hans\",\"SSH远程开发： \",\"ms-vscode-remote.remote-ssh\",\"ms-vscode-remote.remote-ssh-edit\",\"ms-vscode.remote-explorer\",\"C++开发 \",\"ms-vscode.cpptools\",\"python开发 \",\"ms-python.python\",\"代码补全 \",\"TabNine.tabnine-vscode\",\"GitHub.copilot\",\"VS Code SSH远程连接Ubuntu主机 \",\"本地Ubuntu示例\",\"autoDL示例： \",\"autoDL地址：https://www.autodl.com/home\",\"省钱妙招：无卡启动（不挂载GPU，￥0.1/h左右）\"]},\"63\":{\"title\":\"c++环境配置\",\"header\":\"二、Python开发环境配置\",\"text\":[\"建议conda虚拟环境\",\"测试代码demo.py：\",\"# python 代码测试 # 计算 1+2+3+4+5 的和 sum = 0; for i in range(5): sum += i # 打印结果 print(sum); \",\"debuger配置.vscode下launch.json添加\",\"{ // 使用 IntelliSense 了解相关属性。 // 悬停以查看现有属性的描述。 // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387 \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"Python: Current File\\\", \\\"type\\\": \\\"python\\\", \\\"request\\\": \\\"launch\\\", // \\\"program\\\": \\\"${file}\\\", // 当前文件 \\\"program\\\": \\\"demo.py\\\", // 指定文件 \\\"console\\\": \\\"integratedTerminal\\\", \\\"justMyCode\\\": true // false表示可以进入第三方库（如Pytorch）里进行调试 } ] } \"]},\"64\":{\"title\":\"c++环境配置\",\"header\":\"三、Ubuntu安装环境\",\"text\":[\"#安装gcc sudo apt-get install gcc #安装g++ sudo apt-get install g++ #安装cmake sudo apt-get install cmake #安装gdb sudo apt-get install gdb \"]},\"65\":{\"title\":\"c++环境配置\",\"header\":\"四、C++ 开发环境配置\",\"text\":[\"当前配置的环境主要为了演示C++基础知识教学，后面做项目时会有调整。\",\"测试代码main.cpp：\",\"#include <iostream> using namespace std; int main(){ // 计算 1+2+3+4+5 int sum {0}; for (int i {0}; i < 5; i++){ sum += i; } // 输出结果 cout << sum << endl; return 0; } \",\"先用g++ main.cpp -o main生成可执行文件\",\"再用VS Code 菜单：终端-运行生成任务生成可执行文件，需要在.vscode先添加tasks.json\",\"Linux中可以使用which g++确定g++的路径\",\"{ \\\"version\\\": \\\"2.0.0\\\", \\\"tasks\\\": [ { \\\"type\\\": \\\"cppbuild\\\", \\\"label\\\": \\\"C/C++: g++ 生成活动文件\\\", \\\"command\\\": \\\"/usr/bin/g++\\\", // g++的路径 \\\"args\\\": [ \\\"-fdiagnostics-color=always\\\", // 颜色 \\\"-g\\\", // 调试信息 \\\"-Wall\\\", // 开启所有警告 \\\"-std=c++14\\\", // c++14标准 \\\"${file}\\\", // 文件本身，仅适用于C++基础知识教学，无法同时编译所有文件 // \\\"${fileDirname}/*.cpp\\\", // 文件所在的文件夹路径下所有cpp文件 \\\"-o\\\", // 输出 \\\"${workspaceFolder}/release/${fileBasenameNoExtension}\\\" // 文件所在的文件夹路径/release/当前文件的文件名，不带后缀 ], \\\"options\\\": { \\\"cwd\\\": \\\"${fileDirname}\\\" // 文件所在的文件夹路径 }, \\\"problemMatcher\\\": [ \\\"$gcc\\\" ], \\\"group\\\": { \\\"kind\\\": \\\"build\\\", \\\"isDefault\\\": true }, \\\"detail\\\": \\\"编译器: /usr/bin/g++\\\" } ] } \",\"需要debuger，launch.json修改为：\",\"{ // 使用 IntelliSense 了解相关属性。 // 悬停以查看现有属性的描述。 // 欲了解更多信息，请访问: https://go.microsoft.com/fwlink/?linkid=830387 \\\"version\\\": \\\"0.2.0\\\", \\\"configurations\\\": [ { \\\"name\\\": \\\"(gdb) 启动\\\", \\\"type\\\": \\\"cppdbg\\\", // C++调试 \\\"request\\\": \\\"launch\\\", \\\"program\\\": \\\"${workspaceFolder}/release/${fileBasenameNoExtension}\\\", // 文件所在的文件夹路径/release/当前文件的文件名，不带后缀 \\\"args\\\": [], \\\"stopAtEntry\\\": false, \\\"cwd\\\": \\\"${fileDirname}\\\", // 文件所在的文件夹路径 \\\"environment\\\": [], \\\"externalConsole\\\": false, \\\"MIMode\\\": \\\"gdb\\\", \\\"setupCommands\\\": [ { \\\"description\\\": \\\"为 gdb 启用整齐打印\\\", \\\"text\\\": \\\"-enable-pretty-printing\\\", \\\"ignoreFailures\\\": true }, { \\\"description\\\": \\\"将反汇编风格设置为 Intel\\\", \\\"text\\\": \\\"-gdb-set disassembly-flavor intel\\\", \\\"ignoreFailures\\\": true } ], \\\"preLaunchTask\\\": \\\"C/C++: g++ 生成活动文件\\\" // tasks.json的label }, { \\\"name\\\": \\\"Python: Current File\\\", \\\"type\\\": \\\"python\\\", \\\"request\\\": \\\"launch\\\", \\\"program\\\": \\\"${file}\\\", // 当前文件 // \\\"program\\\": \\\"demo.py\\\", // 指定文件 \\\"console\\\": \\\"integratedTerminal\\\", \\\"justMyCode\\\": true // false表示可以进入第三方库（如Pytorch）里进行调试 } ] } \"]},\"66\":{\"title\":\"c++环境配置\",\"header\":\"五、第一个C++程序\",\"text\":[\"#include <iostream> int main(){ int favorites_num; std::cout << \\\"请输入0~10中你最喜欢的数字：\\\" ; std::cin >> favorites_num; std::cout << favorites_num << \\\"也是我喜欢的数字！\\\" << std::endl; return 0; } \"]},\"67\":{\"title\":\"c++环境配置\",\"header\":\"六、附录：vs code 中变量解释\",\"text\":[\"以：/home/Coding/Test/.vscode/tasks.json 为例 ${workspaceFolder}:表示当前workspace文件夹路径，也即/home/Coding/Test ${workspaceRootFolderName}:表示workspace的文件夹名，也即Test ${file}:文件自身的绝对路径，也即/home/Coding/Test/.vscode/tasks.json ${relativeFile}:文件在workspace中的路径，也即.vscode/tasks.json ${fileBasenameNoExtension}:当前文件的文件名，不带后缀，也即tasks ${fileBasename}:当前文件的文件名，tasks.json ${fileDirname}:文件所在的文件夹路径，也即/home/Coding/Test/.vscode ${fileExtname}:当前文件的后缀，也即.json ${lineNumber}:当前文件光标所在的行号 ${env:PATH}:系统中的环境变量 \"]},\"68\":{\"title\":\"opencv\",\"header\":\"Quick start\",\"text\":[]},\"69\":{\"title\":\"opencv\",\"header\":\"Build with ffmpeg support\",\"text\":[\"sudo apt install -y ffmpeg \"]},\"70\":{\"title\":\"opencv\",\"header\":\"Build core modules\",\"text\":[\"# Install minimal prerequisites (Ubuntu 18.04 as reference) sudo apt update && sudo apt install -y cmake g++ wget unzip # Download and unpack sources wget -O opencv.zip https://github.com/opencv/opencv/archive/4.x.zip unzip opencv.zip # Create build directory mkdir -p build && cd build # Configure cmake ../opencv-4.x # Build cmake --build . # Allow N jobs at once; infinite jobs with no arg. sudo make -j8 sudo make -j4 \"]},\"71\":{\"title\":\"opencv\",\"header\":\"Install\",\"text\":[\"Warning\",\"The installation process only copies files to predefined locations and does minor patching. Installing using this method does not integrate opencv into the system package registry and thus, for example, opencv can not be uninstalled automatically. We do not recommend system-wide installation to regular users due to possible conflicts with system packages.\",\"By default OpenCV will be installed to the /usr/local directory, all files will be copied to following locations:\",\"/usr/local/bin - executable files\",\"/usr/local/lib - libraries (.so)\",\"/usr/local/cmake/opencv4 - cmake package\",\"/usr/local/include/opencv4 - headers\",\"/usr/local/share/opencv4 - other files (e.g. trained cascades in XML format)\",\"Since /usr/local is owned by the root user, the installation should be performed with elevated privileges (sudo):\",\"sudo make install \",\"or\",\"sudo ninja install \",\"Installation root directory can be changed with CMAKE_INSTALL_PREFIX configuration parameter, e.g. -DCMAKE_INSTALL_PREFIX=$HOME/.local to install to current user's local directory. Installation layout can be changed with OPENCV_*_INSTALL_PATH parameters. See OpenCV configuration options reference for details.\"]},\"72\":{\"title\":\"opencv\",\"text\":[\"OpenCV (Open Source Computer Vision Library: http://opencv.org) is an open-source library that includes several hundreds of computer vision algorithms.\",\"See the OpenCV website for the latest news, downloads, documentation, and tutorials.\"]},\"73\":{\"title\":\"QSV文件\",\"header\":\"什么是qsv文件\",\"text\":[]},\"74\":{\"title\":\"QSV文件\",\"header\":\"头部信息\",\"text\":[]},\"75\":{\"title\":\"QSV文件\",\"header\":\"索引信息\",\"text\":[]},\"76\":{\"title\":\"QSV文件\",\"header\":\"json字符串\",\"text\":[]},\"77\":{\"title\":\"QSV文件\",\"header\":\"视频分段信息\",\"text\":[]},\"78\":{\"title\":\"QSV文件\",\"header\":\"总结\",\"text\":[]},\"79\":{\"title\":\"QSV文件\",\"header\":\"后记\",\"text\":[]},\"80\":{\"title\":\"QSV文件提取\",\"header\":\"创建类\",\"text\":[]},\"81\":{\"title\":\"QSV文件提取\",\"header\":\"通用方法\",\"text\":[]},\"82\":{\"title\":\"QSV文件提取\",\"header\":\"逐字节读取文件\",\"text\":[]},\"83\":{\"title\":\"QSV文件提取\",\"header\":\"字节数组转16进制字符串\",\"text\":[]},\"84\":{\"title\":\"QSV文件提取\",\"header\":\"字节数组转int\",\"text\":[]},\"85\":{\"title\":\"QSV文件提取\",\"header\":\"老版本解密算法\",\"text\":[]},\"86\":{\"title\":\"QSV文件提取\",\"header\":\"新版本解密算法\",\"text\":[]},\"87\":{\"title\":\"QSV文件提取\",\"header\":\"获取QSV头部信息\",\"text\":[]},\"88\":{\"title\":\"QSV文件提取\",\"header\":\"获取json数据\",\"text\":[]},\"89\":{\"title\":\"QSV文件提取\",\"header\":\"提取视频信息\",\"text\":[]},\"90\":{\"title\":\"QSV文件提取\",\"header\":\"参考资料\",\"text\":[]},\"91\":{\"title\":\"QSV文件提取\",\"header\":\"往期系列\",\"text\":[]},\"92\":{\"title\":\"npm\",\"header\":\"About npm\",\"text\":[\"npm is the world's largest software registry. Open source developers from every continent use npm to share and borrow packages, and many organizations use npm to manage private development as well.\",\"npm consists of three distinct components:\",\"the website\",\"the Command Line Interface (CLI)\",\"the registry\",\"Use the website to discover packages, set up profiles, and manage other aspects of your npm experience. For example, you can set up organizations to manage access to public or private packages.\",\"The CLI runs from a terminal, and is how most developers interact with npm.\",\"The registry is a large public database of JavaScript software and the meta-information surrounding it.\"]},\"93\":{\"title\":\"npm\",\"header\":\"Using npm\",\"text\":[\"set registry\",\"npm get registry npm config set registry http://registry.npm.taobao.org/ npm config set registry https://registry.npmjs.org/ \",\"install package\",\"npm install yarn -g \"]},\"94\":{\"title\":\"nvm\",\"header\":\"Intro\",\"text\":[\"nvm allows you to quickly install and use different versions of node via the command line.\",\"Example:\",\"$ nvm use 16 Now using node v16.9.1 (npm v7.21.1) $ node -v v16.9.1 $ nvm use 14 Now using node v14.18.0 (npm v6.14.15) $ node -v v14.18.0 $ nvm install 12 Now using node v12.22.6 (npm v6.14.5) $ node -v v12.22.6 \",\"Simple as that!\"]},\"95\":{\"title\":\"nvm\",\"header\":\"About\",\"text\":[\"nvm is a version manager for node.js, designed to be installed per-user, and invoked per-shell. nvm works on any POSIX-compliant shell (sh, dash, ksh, zsh, bash), in particular on these platforms: unix, macOS, and windows WSL.\"]},\"96\":{\"title\":\"nvm\",\"header\":\"Installing and Updating\",\"text\":[]},\"97\":{\"title\":\"nvm\",\"header\":\"Install & Update Script\",\"text\":[\"To install or update nvm, you should run the install script. To do that, you may either download and run the script manually, or use the following cURL or Wget command:\",\"curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash \",\"wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash \",\"Running either of the above commands downloads a script and runs it. The script clones the nvm repository to ~/.nvm, and attempts to add the source lines from the snippet below to the correct profile file (~/.bash_profile, ~/.zshrc, ~/.profile, or ~/.bashrc).\",\"export NVM_DIR=\\\"$([ -z \\\"${XDG_CONFIG_HOME-}\\\" ] && printf %s \\\"${HOME}/.nvm\\\" || printf %s \\\"${XDG_CONFIG_HOME}/nvm\\\")\\\" [ -s \\\"$NVM_DIR/nvm.sh\\\" ] && \\\\. \\\"$NVM_DIR/nvm.sh\\\" # This loads nvm \"]},\"98\":{\"title\":\"nvm\",\"header\":\"Troubleshooting on Linux\",\"text\":[\"On Linux, after running the install script, if you get nvm: command not found or see no feedback from your terminal after you type command -v nvm, simply close your current terminal, open a new terminal, and try verifying again. Alternatively, you can run the following commands for the different shells on the command line:\",\"bash: source ~/.bashrc\",\"zsh: source ~/.zshrc\",\"ksh: . ~/.profile\",\"These should pick up the nvm command.\"]},\"99\":{\"title\":\"nvm\",\"header\":\"Usage\",\"text\":[\"To download, compile, and install the latest release of node, do this:\",\"nvm install node # \\\"node\\\" is an alias for the latest version \",\"To install a specific version of node:\",\"nvm install 14.7.0 # or 16.3.0, 12.22.1, etc \",\"The first version installed becomes the default. New shells will start with the default version of node (e.g., nvm alias default).\",\"You can list available versions using ls-remote:\",\"nvm ls-remote \",\"And then in any new shell just use the installed version:\",\"nvm use node \",\"Or you can just run it:\",\"nvm run node --version \",\"Or, you can run any arbitrary command in a subshell with the desired version of node:\",\"nvm exec 4.2 node --version \",\"You can also get the path to the executable to where it was installed:\",\"nvm which 12.22 \",\"In place of a version pointer like \\\"14.7\\\" or \\\"16.3\\\" or \\\"12.22.1\\\", you can use the following special default aliases with nvm install, nvm use, nvm run, nvm exec, nvm which, etc:\",\"node: this installs the latest version of node\",\"iojs: this installs the latest version of io.js\",\"stable: this alias is deprecated, and only truly applies to nodev0.12 and earlier. Currently, this is an alias for node.\",\"unstable: this alias points to nodev0.11 - the last \\\"unstable\\\" node release, since post-1.0, all node versions are stable. (in SemVer, versions communicate breakage, not stability).\"]},\"100\":{\"title\":\"nvm\",\"header\":\"Use a mirror of node binaries\",\"text\":[\"To use a mirror of the node binaries, set $NVM_NODEJS_ORG_MIRROR:\",\"export NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node/ nvm install node NVM_NODEJS_ORG_MIRROR=https://npm.taobao.org/mirrors/node/ nvm install 4.2 \",\"To use a mirror of the io.js binaries, set $NVM_IOJS_ORG_MIRROR:\",\"export NVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3 NVM_IOJS_ORG_MIRROR=https://iojs.org/dist nvm install iojs-v1.0.3 \",\"nvm use will not, by default, create a \\\"current\\\" symlink. Set $NVM_SYMLINK_CURRENT to \\\"true\\\" to enable this behavior, which is sometimes useful for IDEs. Note that using nvm in multiple shell tabs with this environment variable enabled can cause race conditions.\"]},\"101\":{\"title\":\"yarn\",\"header\":\"Usage\",\"text\":[\"Install the project dependencies.\",\"yarn install \",\"Read a configuration settings.\",\"yarn config get registry yarn config set registry http://registry.npm.taobao.org/ yarn config set registry https://registry.yarnpkg.com \"]},\"102\":{\"title\":\"yarn\",\"text\":[\"Yarn is a package manager that doubles down as project manager. Whether you work on one-shot projects or large monorepos, as a hobbyist or an enterprise user, we've got you covered.\"]},\"103\":{\"title\":\"gitlab runner 介绍\",\"header\":\"注册\",\"text\":[\"sudo gitlab-runner register --url http://192.168.0.200/ --registration-token $REGISTRATION_TOKEN \"]},\"104\":{\"title\":\"gitlab runner 介绍\",\"header\":\"查看runner命令\",\"text\":[\"gitlab-runner list \"]},\"105\":{\"title\":\"gitlab runner 介绍\",\"header\":\"查看runner配置文件\",\"text\":[\"cat /etc/gitlab-runner/config.toml \"]},\"106\":{\"title\":\"gitlab runner 介绍\",\"header\":\"客户端构建路径\",\"text\":[\"cd /home/gitlab-runner/builds \"]},\"107\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"安装python环境\",\"text\":[]},\"108\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"安装git\",\"text\":[]},\"109\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"安装环境\",\"text\":[]},\"110\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"Installation and Running\",\"text\":[]},\"111\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"Automatic Installation on Windows\",\"text\":[]},\"112\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"Automatic Installation on Linux\",\"text\":[]},\"113\":{\"title\":\"Stable Diffusion安装教程\",\"header\":\"Installation on Apple Silicon\",\"text\":[]},\"114\":{\"title\":\"Prompt语法结构\",\"header\":\"反向词\",\"text\":[]},\"115\":{\"title\":\"Prompt语法结构\",\"text\":[\"Prompt语法结构分 \",\"前缀 \",\"画风词\",\"效果器\",\"主体 \",\"人物\",\"物体\",\"场景 \",\"大环境\",\"小细节\"]},\"116\":{\"title\":\"Stable Diffusion\",\"header\":\"目录\",\"text\":[\"安装教程\",\"操作说明\"]},\"117\":{\"title\":\"GC配置\",\"header\":\"参数详解\",\"text\":[\"参数名称\",\"参数说明\",\"-XX:+PrintGCDetails\",\"输出GC的详细日志\",\"-XX:+PrintGCTimeStamps\",\"输出GC的时间戳（以基准时间的形式）\",\"-Xloggc:../logs/gc.log\",\"此参数主要定义GC Log 的详细信息。\",\"-XX:UseGCLogFileRotation\",\"Enabled GC log rotation, requires -Xloggc.\",\"-XX:NumberOfGCLogFiles=5\",\"Set the number of files to use when rotating logs, must be >= 1.The rotated log files will use the following naming scheme, <filename>.0, <filename>.1, ..., <filename>.n-1.\",\"-XX:GCLogFileSize=100M\",\"The size of the log file at which point the log will be rotated, must be >= 8K.\"]},\"118\":{\"title\":\"GC配置\",\"header\":\"源码解析\",\"text\":[\"arguments.cpp\",\"// check if do gclog rotation // +UseGCLogFileRotation is a must, // no gc log rotation when log file not supplied or // NumberOfGCLogFiles is 0 void check_gclog_consistency() { if (UseGCLogFileRotation) { if ((Arguments::gc_log_filename() == NULL) || (NumberOfGCLogFiles == 0)) { jio_fprintf(defaultStream::output_stream(), \\\"To enable GC log rotation, use -Xloggc:<filename> -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=<num_of_files>\\\\n\\\" \\\"where num_of_file > 0\\\\n\\\" \\\"GC log rotation is turned off\\\\n\\\"); UseGCLogFileRotation = false; } } if (UseGCLogFileRotation && (GCLogFileSize != 0) && (GCLogFileSize < 8*K)) { FLAG_SET_CMDLINE(uintx, GCLogFileSize, 8*K); jio_fprintf(defaultStream::output_stream(), \\\"GCLogFileSize changed to minimum 8K\\\\n\\\"); } } \",\"ostream.cpp\",\"void gcLogFileStream::rotate_log_impl(bool force, outputStream* out) { if (NumberOfGCLogFiles == 1) { // rotate in same file rewind(); _bytes_written = 0L; jio_snprintf(time_msg, sizeof(time_msg), \\\"File %s rotated at %s\\\\n\\\", _file_name, os::local_time_string((char *)time_str, sizeof(time_str))); write(time_msg, strlen(time_msg)); if (out != NULL) { out->print(\\\"%s\\\", time_msg); } dump_loggc_header(); return; } // rotate file in names extended_filename.0, extended_filename.1, ..., // extended_filename.<NumberOfGCLogFiles - 1>. Current rotation file name will // have a form of extended_filename.<i>.current where i is the current rotation // file number. After it reaches max file size, the file will be saved and renamed // with .current removed from its tail. _cur_file_num++; if (_cur_file_num > NumberOfGCLogFiles - 1) _cur_file_num = 0; int result = jio_snprintf(current_file_name, JVM_MAXPATHLEN, \\\"%s.%d\\\" CURRENTAPPX, _file_name, _cur_file_num); if (result >= JVM_MAXPATHLEN) { warning(\\\"Cannot create new log file name: %s: file name is too long.\\\\n\\\", current_file_name); return; } } gcLogFileStream::gcLogFileStream(const char* file_name) : _file_lock(NULL) { _cur_file_num = 0; _bytes_written = 0L; _file_name = make_log_name(file_name, NULL); if (_file_name == NULL) { warning(\\\"Cannot open file %s: file name is too long.\\\\n\\\", file_name); _need_close = false; UseGCLogFileRotation = false; return; } // gc log file rotation if (UseGCLogFileRotation && NumberOfGCLogFiles > 1) { char tempbuf[JVM_MAXPATHLEN]; jio_snprintf(tempbuf, sizeof(tempbuf), \\\"%s.%d\\\" CURRENTAPPX, _file_name, _cur_file_num); _file = fopen(tempbuf, \\\"w\\\"); } else { _file = fopen(_file_name, \\\"w\\\"); } if (_file != NULL) { _need_close = true; dump_loggc_header(); if (UseGCLogFileRotation) { _file_lock = new Mutex(Mutex::leaf, \\\"GCLogFile\\\"); } } else { warning(\\\"Cannot open file %s due to %s\\\\n\\\", _file_name, strerror(errno)); _need_close = false; } } \"]},\"119\":{\"title\":\"GC配置\",\"header\":\"Try to avoid -XX:+UseGCLogFileRotation\",\"text\":[\"Developers take advantage of the JVM argument -XX:+UseGCLogFileRotation to rotate GC log files.\",\"Example:\",\"-XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:../logs/gc.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=5 -XX:GCLogFileSize=100M \",\"As shown above, the JVM will rotate the GC log file whenever its size reaches 20MB. It will generate up to five files, with extensions gc.log.0, gc.log.1, gc.log.2, gc.log.3, and gc.log.4.\",\"But this approach has a few challenges:\"]},\"120\":{\"title\":\"GC配置\",\"header\":\"a.Losing Old GC Logs\",\"text\":[\"Suppose you configured -XX:NumberOfGCLogFiles=5, then over a period of time, five GC log files will be created:\",\"gc.log.0 ← oldest GC Log content\",\"gc.log.1\",\"gc.log.2\",\"gc.log.3\",\"gc.log.4 ← latest GC Log content\",\"The most recent GC log contents will be written to gc.log.4 and old GC log contents will be present in gc.log.0.\",\"When the application starts to generate more GC logs than the configured -XX:NumberOfGCLogFiles, in this case, five, then old GC log contents in gc.log.0 will be deleted. New GC events will be written to gc.log.0. It means that you will end up not having all the generated GC logs. You will lose the visibility of all events.\"]},\"121\":{\"title\":\"GC配置\",\"header\":\"b.Mixed-Up GC Logs\",\"text\":[\"Suppose an application has created five GC log files, including:\",\"gc.log.0\",\"gc.log.1\",\"gc.log.2\",\"gc.log.3\",\"gc.log.4\",\"Then, let’s say you are restarting the application. Now, new GC logs will be written to gc.log.0 file and old GC log content will be present in gc.log.1, gc.log.2, gc.log.3, gc.log.4, etc.\",\"gc.log.0 ← GC log file content after restart\",\"gc.log.1 ← GC log file content before restart\",\"gc.log.2 ← GC log file content before restart\",\"gc.log.3 ← GC log file content before restart\",\"gc.log.4 ← GC log file content before restart\",\"So, your new GC log contents get mixed up with old GC logs. Thus, to mitigate this problem, you might have to move all the old GC logs to a different folder before you restart the application.\"]},\"122\":{\"title\":\"GC配置\",\"header\":\"c.Forwarding GC Logs to a Central Location\",\"text\":[\"In this approach, the current active file to which GC logs are written is marked with the extension .current. For example, if GC events are currently written to the file gc.log.3, it would be named as: gc.log.3.current.\",\"If you want to forward GC logs from each server to a central location, then most DevOps engineers use rsyslog. However, this file naming convention poses a significant challenge to use rsyslog, as described in this blog.\"]},\"123\":{\"title\":\"GC配置\",\"header\":\"d.Tooling\",\"text\":[\"Now, to analyze the GC log file using the GC tools such as (GCeasy, GCViewer, etc.), you will have to upload multiple GC log files instead of just one single GC Log file.\"]},\"124\":{\"title\":\"GC配置\",\"header\":\"Recommended Solution\",\"text\":[\"We can suffix the GC log file with the time stamp at which the JVM was restarted, then the GC Log file locations will become unique. Then, new GC logs will not override the old GC logs. It can be achieved by suffixing %t to the GC log file name, as shown below:\",\"-XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:../logs/gc-%t.log \",\"%t suffixes timestamp to the GC log file in the format: YYYY-MM-DD_HH-MM-SS. So, the generated GC log file name will start to look like: gc-2019-01-29_20-41-47.log.\",\"This simple solution addresses all the shortcomings of -XX:+UseGCLogFileRotation.\",\"参考原文\"]},\"125\":{\"title\":\"jacoco\",\"header\":\"配置\",\"text\":[]},\"126\":{\"title\":\"jacoco\",\"header\":\"原理\",\"text\":[]},\"127\":{\"title\":\"jacoco\",\"header\":\"AgentMojo\",\"text\":[]},\"128\":{\"title\":\"jacoco\",\"header\":\"FAQ\",\"text\":[]},\"129\":{\"title\":\"jacoco\",\"text\":[\"JaCoCo is a free code coverage library for Java, which has been created by the EclEmma team based on the lessons learned from using and integration existing libraries for many years.\"]},\"130\":{\"title\":\"lifecycle\",\"header\":\"default生命周期\",\"text\":[]},\"131\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for pom packaging\",\"text\":[]},\"132\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for jar packaging\",\"text\":[]},\"133\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for ejb packaging\",\"text\":[]},\"134\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for maven-plugin packaging\",\"text\":[]},\"135\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for war packaging\",\"text\":[]},\"136\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for ear packaging\",\"text\":[]},\"137\":{\"title\":\"lifecycle\",\"header\":\"Plugin bindings for rar packaging\",\"text\":[]},\"138\":{\"title\":\"lifecycle\",\"header\":\"clean生命周期\",\"text\":[]},\"139\":{\"title\":\"lifecycle\",\"header\":\"site生命周期\",\"text\":[]},\"140\":{\"title\":\"lifecycle\",\"text\":[\"Maven的生命周期就是为了对所有的构建过程进行抽象和统一。在大量项目的构建过程中，Maven总结出了一套高度完善的，易于扩展的生命周期，包括项目的清理，初始化，编译，测试，打包，集成测试，验证，部署和生成站点等构建步骤。在我们日常的maven使用中，一条条简单的命令，mvn clean, mvn package等都是在执行Maven的某个生命周期阶段。\"]},\"141\":{\"title\":\"surefire\",\"header\":\"About Apache Maven Surefire\",\"text\":[\"Surefire is a test framework project. This is the aggregator POM in Apache Maven Surefire project.\"]},\"142\":{\"title\":\"surefire\",\"header\":\"Project Documentation\",\"text\":[\"Usage of maven-surefire-plugin, maven-failsafe-plugin, maven-surefire-report-plugin\"]},\"143\":{\"title\":\"surefire\",\"header\":\"maven-surefire-plugin\",\"text\":[\"Best practice is to define the version of the Surefire Plugin that you want to use in either your pom.xml or a parent pom.xml:\",\"<project> [...] <build> <pluginManagement> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> <version>2.22.2</version> </plugin> </plugins> </pluginManagement> </build> [...] </project> \",\"The Surefire Plugin can be invoked by calling the test phase of the build lifecycle.\",\"mvn test \",\"And more parameters in SurefirePlugin.java\"]},\"144\":{\"title\":\"surefire\",\"header\":\"maven-failsafe-plugin\",\"text\":[\"To use the Failsafe Plugin, you need to add the following configuration to your pom.xml:\",\"<project> [...] <build> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-failsafe-plugin</artifactId> <version>2.22.2</version> <executions> <execution> <goals> <goal>integration-test</goal> <goal>verify</goal> </goals> </execution> </executions> </plugin> </plugins> </build> [...] </project> \",\"The Failsafe Plugin can be invoked by calling the verify phase of the build lifecycle.\",\"mvn verify \",\"And more parameters in VerifyMojo.java\"]},\"145\":{\"title\":\"surefire\",\"header\":\"maven-surefire-report-plugin\",\"text\":[\"To generate the Surefire report as part of the site generation, add the following in the <reporting> section of your POM:\",\"<project> ... <reporting> <plugins> <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-report-plugin</artifactId> <version>3.1.0</version> </plugin> </plugins> </reporting> ... </project> \",\"The plugin can also generate the report using its standalone goal:\",\"mvn surefire-report:report mvn surefire-report:report -DlinkXRef=false -Daggregate=true \",\"And more parameters in SurefireReportMojo.java\",\"A HTML report should be generated in ${basedir}/target/site/surefire-report.html.\"]},\"146\":{\"title\":\"surefire\",\"header\":\"FAQ\",\"text\":[\"Question：Why test is called during mvn surefire-report:report execution and test fails without interruption?\",\"Answer\",\"The maven-surefire-report-plugin define the test phase in lifecycle.xml, and set the parameter testFailureIgnore to \\\"true\\\" to ignore a failure during testing. Its use is NOT RECOMMENDED, but quite convenient onoccasion.\",\"<lifecycles> <lifecycle> <id>surefire</id> <phases> <phase> <id>test</id> <configuration> <testFailureIgnore>true</testFailureIgnore> </configuration> </phase> </phases> </lifecycle> </lifecycles> \",\"Question：crashed tests - unit tests with large logging output does not produce surefire report?\",\"Description\",\"Upon upgrading our maven-surefire-plugin from version 2.15 to version 2.21.0. We noticed that the number of tests being run by our jenkins test job changed. Upon further investigation we found a test class with 7 test cases that were not being reported at all (not as passed, failed, or skipped).\",\"When we ran just that test class from the command line it failed with\",\"[2023-06-06 10:17:14.877] [ERROR] There are test failures. [2023-06-06 10:17:14.877] [2023-06-06 10:17:14.877] Please refer to /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test/target/surefire-reports for the individual test results. [2023-06-06 10:17:14.877] Please refer to dump files (if any exist) [date].dump, [date]-jvmRun[N].dump and [date].dumpstream. [2023-06-06 10:17:14.877] The forked VM terminated without properly saying goodbye. VM crash or System.exit called? [2023-06-06 10:17:14.877] Command was /bin/sh -c cd /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test && /opt/jdk8u312-b07/jre/bin/java -jar /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test/target/surefire/surefirebooter7106199231689045505.jar /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test/target/surefire 2023-06-06T10-16-01_649-jvmRun1 surefire2911789998602964175tmp surefire_02965824114494373512tmp [2023-06-06 10:17:14.877] Process Exit Code: 0 [2023-06-06 10:17:14.877] org.apache.maven.surefire.booter.SurefireBooterForkException: The forked VM terminated without properly saying goodbye. VM crash or System.exit called? [2023-06-06 10:17:14.877] Command was /bin/sh -c cd /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test && /opt/jdk8u312-b07/jre/bin/java -jar /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test/target/surefire/surefirebooter7106199231689045505.jar /var/lib/jenkins/workspace/418dacbd-ef8f-4643-b85d-9164c014bf60/epoint-financeproduct-test/target/surefire 2023-06-06T10-16-01_649-jvmRun1 surefire2911789998602964175tmp surefire_02965824114494373512tmp [2023-06-06 10:17:14.877] Process Exit Code: 0 [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.booterclient.ForkStarter.fork(ForkStarter.java:669) [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.booterclient.ForkStarter.run(ForkStarter.java:282) [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.booterclient.ForkStarter.run(ForkStarter.java:245) [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeProvider(AbstractSurefireMojo.java:1183) [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:1011) [2023-06-06 10:17:14.877] at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:857) \",\"but did not produce any output in the target/surefire-reports directory explaining why the failures were not reported in the jobs test report. Trying different maven-surefire-plugin versions the tests pass successfully with version 2.19.1, but fail with every version tried between 2.20 and 3.0.0-M5. Note we run our tests with these options:\",\"<reuseForks>false</reuseForks>\",\"<forkCount>1</forkCount>\",\"<reportFormat>xml</reportFormat>\",\"I also noticed that the tests in question did produce a lot of logging output. I found that the tests would pass if I added the configuration option:\",\"<redirectTestOutputToFile>true</redirectTestOutputToFile>\",\"I have reproduced the problem with a simpler test module that is attached. Upon playing with the output in this module the issue appears to happen when the output is about 1.2MB or higher.\",\"Not sure what changed between version 2.19.1 and 2.20 with how output from the forked jvm is collected but it appear to have a problem if there is too much output. If the tests were being reported as failed then this issue would not be a huge problem, but having tests just not be reported because their output grows is a critical issue for us as we may not notice that the test has effectively been dropped from our test suite, unless we closely audit the ~30000 test cases we run every run to detect missing tests which is hard to do as new tests are constantly being added.\",\"Answer\",\"Here is an official issue for this problem.\",\"Solution\",\"Add the following configuration to your pom.xml:\",\"<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> <version>2.22.2</version> <configuration> <redirectTestOutputToFile>true</redirectTestOutputToFile> </configuration> </plugin> \",\"OR\",\"<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> <version>3.1.0</version> </plugin> \",\"Question：How to translate the Surefire report into another language?\",\"Answer\",\"@since 3.1.0@seeThe Surefire Report Plugin supports internationalization. The default language is English. To translate the report into another language, you need to create a custom resource bundle and configure the plugin to use it.\",\"<plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-report-plugin</artifactId> <version>3.1.0</version> <configuration> <customBundle>src/site/custom/surefire-report_cn.properties</customBundle> </configuration> </plugin> \",\"The Content of src/site/custom/surefire-report_cn.properties is as follows:\",\"report.surefire.name=\\\\u5355\\\\u5143\\\\u6d4b\\\\u8bd5 report.surefire.description=\\\\u62a5\\\\u544a\\\\u9879\\\\u76ee\\\\u7684\\\\u6d4b\\\\u8bd5\\\\u7ed3\\\\u679c\\\\u3002 report.surefire.title=\\\\u5355\\\\u5143\\\\u6d4b\\\\u8bd5\\\\u62a5\\\\u544a report.surefire.label.summary=\\\\u603b\\\\u7ed3 report.surefire.label.tests=\\\\u6d4b\\\\u8bd5\\\\u6570\\\\u91cf report.surefire.label.errors=\\\\u9519\\\\u8bef\\\\u6570\\\\u91cf report.surefire.label.failures=\\\\u5931\\\\u8d25\\\\u6570\\\\u91cf report.surefire.label.skipped=\\\\u8df3\\\\u8fc7\\\\u6570\\\\u91cf report.surefire.label.successrate=\\\\u6210\\\\u529f\\\\u7387 report.surefire.label.time=\\\\u8017\\\\u65f6 report.surefire.label.packagelist=\\\\u5305\\\\u540d\\\\u6e05\\\\u5355 report.surefire.label.package=\\\\u5305\\\\u540d report.surefire.label.class=\\\\u7c7b\\\\u540d report.surefire.label.testcases=\\\\u6d4b\\\\u8bd5\\\\u7528\\\\u4f8b report.surefire.label.failuredetails=\\\\u6545\\\\u969c\\\\u8be6\\\\u60c5 report.surefire.text.note1=\\\\u6ce8\\\\u610f\\\\uff1a\\\\u5931\\\\u8d25\\\\u662f\\\\u9884\\\\u671f\\\\u7684\\\\uff0c\\\\u5e76\\\\u4f7f\\\\u7528\\\\u65ad\\\\u8a00\\\\u8fdb\\\\u884c\\\\u68c0\\\\u67e5\\\\uff0c\\\\u800c\\\\u9519\\\\u8bef\\\\u662f\\\\u610f\\\\u5916\\\\u7684\\\\u3002 report.surefire.text.note2=\\\\u6ce8\\\\u610f\\\\uff1a\\\\u5305\\\\u7edf\\\\u8ba1\\\\u6570\\\\u636e\\\\u4e0d\\\\u662f\\\\u9012\\\\u5f52\\\\u8ba1\\\\u7b97\\\\u7684\\\\uff0c\\\\u5b83\\\\u4eec\\\\u53ea\\\\u662f\\\\u603b\\\\u7ed3\\\\u4e86\\\\u6240\\\\u6709\\\\u7684\\\\u6d4b\\\\u8bd5\\\\u5957\\\\u4ef6\\\\u6570\\\\u91cf\\\\u3002 report.failsafe.name=\\\\u6545\\\\u969c\\\\u4fdd\\\\u9669 report.failsafe.description=\\\\u62a5\\\\u544a\\\\u9879\\\\u76ee\\\\u7684\\\\u96c6\\\\u6210\\\\u6d4b\\\\u8bd5\\\\u7ed3\\\\u679c\\\\u3002 report.failsafe.title=\\\\u6545\\\\u969c\\\\u4fdd\\\\u9669\\\\u62a5\\\\u544a \"]},\"147\":{\"title\":\"tomcat embed\",\"header\":\"前言\",\"text\":[\"众所周知springboot通过Fatjar运行时内嵌了tomcat，那么tomcat是如何启动的，又是如何调整tomcat启动参数的，我们来一探究竟。\",\"内置Tomcat长什么样，它与原来的Tomcat有啥区别\",\"Springboot是如何使用的内置tomcat\",\"DispatcherServlet是如何加载到tomcat容器的\"]},\"148\":{\"title\":\"tomcat embed\",\"header\":\"一、原来的Tomcat启动流程\",\"text\":[\"1.运行catalina.shstart脚本最终会执行Bootstrap的mian方法\",\"eval exec \\\"\\\\\\\"$_RUNJDB\\\\\\\"\\\" \\\"\\\\\\\"$CATALINA_LOGGING_CONFIG\\\\\\\"\\\" $LOGGING_MANAGER \\\"$JAVA_OPTS\\\" \\\"$CATALINA_OPTS\\\" \\\\ -D$ENDORSED_PROP=\\\"$JAVA_ENDORSED_DIRS\\\" \\\\ -classpath \\\"$CLASSPATH\\\" \\\\ -sourcepath \\\"$CATALINA_HOME\\\"/../../java \\\\ -Dcatalina.base=\\\"$CATALINA_BASE\\\" \\\\ -Dcatalina.home=\\\"$CATALINA_HOME\\\" \\\\ -Djava.io.tmpdir=\\\"$CATALINA_TMPDIR\\\" \\\\ //这里会运行Bootstrap的main方法 并传入start参数 org.apache.catalina.startup.Bootstrap \\\"$@\\\" start fi \",\"2.执行Bootstrap的mian方法 构建Catalina对象 并执行其load和start方法\",\"//全局变量 用于保存Bootstrap实例 private static volatile Bootstrap daemon = null; //全局变量 用于保存Catalina对象 private Object catalinaDaemon = null; public static void main(String args[]) { synchronized (daemonLock) { if (daemon == null) { // Don't set daemon until init() has completed Bootstrap bootstrap = new Bootstrap(); try { //这里 构建Catalina对象并赋值给全局变量catalinaDaemon bootstrap.init(); } catch (Throwable t) { ... } //这里初始化了全局变量 daemon = bootstrap; } else { ... } try { ... if (command.equals(\\\"start\\\")) { daemon.setAwait(true); //本质是调用了Catalina对象的load方法 daemon.load(args); //本质上是调用了Catalina的start方法 daemon.start(); ... } } catch (Throwable t) { ... } ... } //构建Catalina对象并赋值给全局变量catalinaDaemon public void init() throws Exception { ... //通过反射构建Catalina对象 Class<?> startupClass = catalinaLoader.loadClass(\\\"org.apache.catalina.startup.Catalina\\\"); Object startupInstance = startupClass.getConstructor().newInstance(); ... //这里把Catalina对象赋予了全局变量catalinaDaemon catalinaDaemon = startupInstance; } //本质是调用了Catalina对象的load方法 private void load(String[] arguments) throws Exception { // Call the load() method String methodName = \\\"load\\\"; ... Method method = catalinaDaemon.getClass().getMethod(methodName, paramTypes); //这里就是调用了Catalina对象的load方法 method.invoke(catalinaDaemon, param); } //本质上是调用了Catalina的start方法 public void start() throws Exception { Method method = catalinaDaemon.getClass().getMethod(\\\"start\\\", (Class [])null); method.invoke(catalinaDaemon, (Object [])null); } \",\"3.Catalina的load方法\",\"//全局变量Server对象 该对象通过解析server.xml生成 protected Server server = null; public void load() { ... // Parse main server.xml // 解析server.xml文件 初始化server对象 parseServerXml(true); Server s = getServer() ... // Start the new server try { getServer().init(); } catch (LifecycleException e) { ... } ... } \",\"server.xml的结构是一个4层嵌套的树状结构。一层也就是根节点是server元素，二层是service元素，三层是Engine元素，四层是Host元素。最终其被解析Server对象。该对象内部包含一组service对象，每个service对象包含一个Engine对象，每个Engine对象包含一组Host对象。\",\"其实每个Host对象还对应一组Context对象也就是我们常说的Servlet容器，只是在server.xml文件中体现的比较隐晦。Host对象有一个属性叫做appBase，该属性的默认值是webapps，最终解析时会去Tomcat根目录下的webapps文件中找web.xml，找到一个就生成一个Context对象。\",\"4.Catalina的start方法\",\"//本质上就是调用server的start方法 public void start() { ... // Start the new server try { getServer().start(); } catch (LifecycleException e) { ... } ... } //返回全局变量server public Server getServer() { return server; } \",\"这里蕴含这一个设计模式值得一提,通过load方法可以知道Server内部有一组service，每个service内部有一个Engine，每个Engine内部有一组host，每个host内部有一组context。这里提到的每一个对象都有init方法和start方法，在server的start方法被调用后需要执行其下每个service对象的init方法和start方法，当service的start方法被调用后需要执行其下Engine的init方法和start方法以此类推一直到调用完Context的init方法和start方法。Tomcat使用抽象模板的设计模式完成了该流程的实现。 首先看看抽象模板类LifecycleBase，上述提到的所有对象都继承该类，该类有4个主要方法，其中start是模板类的核心方法。\",\"public abstract class LifecycleBase implements Lifecycle { //抽象模板类提供的公共方法 public final synchronized void init() throws LifecycleException { if (!state.equals(LifecycleState.NEW)) { invalidTransition(Lifecycle.BEFORE_INIT_EVENT); } try { setStateInternal(LifecycleState.INITIALIZING, null, false); //该方法是一个抽象方法由子类完成实现 //server类的实现方式 就是便利其内部的sercie对象 挨个调用其init方法 //service类的实现方法 就是调用engine的 init方法 //engine的实现方法 就是便利其内部的host对象 挨个调用其init方法 //以此类推。。。 initInternal(); //这里会发生状态变更 防止重复init用的 setStateInternal(LifecycleState.INITIALIZED, null, false); } catch (Throwable t) { handleSubClassException(t, \\\"lifecycleBase.initFail\\\", toString()); } } //抽象模板类提供的公共方法 public final synchronized void start() throws LifecycleException { if (state.equals(LifecycleState.NEW)) { //start方法中会先执行init方法 init(); } else if (state.equals(LifecycleState.FAILED)) { ... } else if (!state.equals(LifecycleState.INITIALIZED) && !state.equals(LifecycleState.STOPPED)) { ... } ... try { setStateInternal(LifecycleState.STARTING_PREP, null, false); //该方法是一个抽象方法由子类完成实现 //server类的实现方式 就是便利其内部的sercie对象 挨个调用其start方法 //service类的实现方法 就是调用engine的 start方法 //engine的实现方法 就是便利其内部的host对象 挨个调用其start方法 //以此类推。。。 startInternal(); ... } catch (Throwable t) { ... } } //子类实现 protected abstract void initInternal() throws LifecycleException; //子类实现 protected abstract void startInternal() throws LifecycleException; } \",\"基于对LifecycleBase的4个方法的分析，我们看看当server的start方法被调用时会发生什么\",\"server的start方法会调用其父类LifecycleBase的公共start方法\",\"接着会调用LifecycleBase的init方法\",\"接着会调用LifecycleBase的initInternal方法，该方法由子类server实现，便利其下的service对象挨个调用init方法\",\"service对象的init方法是由父类LifecycleBase实现的，所以会执行LifecycleBase的init方法。这里有一个状态变更即元素的state状态由LifecycleState.NEW变成了LifecycleState.INITIALIZING防止在start方法中再次执行init方法\",\"以此类推最终所有元素的init方法会被调用并且状态变成了LifecycleState.INITIALIZING，最终又回到了server的start方法此时init方法已经执行完了\",\"继续向下走执行startInternal方法，该方法由子类server实现，便利其下的service对象挨个调用start方法\",\"start方法由父类LifecycleBase实现的，所以会执行LifecycleBase的start方法，此时因为对象状态已经不是new状态了，init方法不会执行，继续执行startInternal方法，以此类推最终所有元素的start方法会被执行\",\"最终各个元素的init和start方法都被执行了一遍\"]},\"149\":{\"title\":\"tomcat embed\",\"header\":\"二、内嵌Tomcat\",\"text\":[\"阿帕奇提供了一个类，名字就叫Tomcat。该类和Catalina类十分相似，内部也有一个Server对象并且提供了start方法，本质也是调用的server.start。接下来看看这个类\",\"public class Tomcat { //全局变量 protected Server server; //启动方法 public void start() throws LifecycleException { getServer(); //本质是server的start方法 server.start(); } //重点在后边的这几个方法 //获取server public Server getServer() { ... if (server != null) { return server; } //这里直接new对象了 不像Catalina那样需要解析server.xml文件 server = new StandardServer(); initBaseDir(); ... //顺便为其创建了一个service对象 Service service = new StandardService(); service.setName(\\\"Tomcat\\\"); server.addService(service); return server; } //获取service 内部调用了getServer 一样的道理 没有就new public Service getService() { return getServer().findServices()[0]; } //获取引擎 一样的逻辑 没有就new public Engine getEngine() { Service service = getServer().findServices()[0]; if (service.getContainer() != null) { return service.getContainer(); } Engine engine = new StandardEngine(); engine.setName( \\\"Tomcat\\\" ); engine.setDefaultHost(hostname); engine.setRealm(createDefaultRealm()); service.setContainer(engine); return engine; } //获取host 同上没有就new public Host getHost() { Engine engine = getEngine(); if (engine.findChildren().length > 0) { return (Host) engine.findChildren()[0]; } Host host = new StandardHost(); host.setName(hostname); getEngine().addChild(host); return host; } } \",\"最终可以发现内嵌Tomcat本质上和Catalina对象一样，都是通过初始化一个Server对象然后调用Server对象的start方法完成tomcat启动的。区别就是初始化Server的过程不在需要解析server.xml文件了，各种get就能完成初始化。\"]},\"150\":{\"title\":\"tomcat embed\",\"header\":\"三、Springboot启动Tomcat的时机\",\"text\":[\"springboot启动类的mian方法中会执行SpringApplication.run方法，该方法会创建并启动一个容器AnnotationConfigServletWebServerApplicationContext,容器启动会执行祖先类AbstractApplicationContext的refresh方法，该方法中的onRefresh方法被AnnotationConfigServletWebServerApplicationContext的父类ServletWebServerApplicationContext重写了，内置Tomcat就在onRefresh方法中被启动了。\"]},\"151\":{\"title\":\"tomcat embed\",\"header\":\"3.1 ServletWebServerApplicationContext\",\"text\":[\"public class ServletWebServerApplicationContext extends GenericWebApplicationContext implements ConfigurableWebServerApplicationContext { @Override protected void onRefresh() { super.onRefresh(); try { createWebServer();//创建web服务 } catch (Throwable ex) { throw new ApplicationContextException(\\\"Unable to start web server\\\", ex); } } private void createWebServer() { WebServer webServer = this.webServer; ServletContext servletContext = getServletContext(); if (webServer == null && servletContext == null) { StartupStep createWebServer = this.getApplicationStartup().start(\\\"spring.boot.webserver.create\\\"); //从spring容器中获取TomcatServletWebServerFactory如果没注入则直接进行注入 ServletWebServerFactory factory = getWebServerFactory(); createWebServer.tag(\\\"factory\\\", factory.getClass().toString()); this.webServer = factory.getWebServer(getSelfInitializer());//获取WebServer createWebServer.end(); getBeanFactory().registerSingleton(\\\"webServerGracefulShutdown\\\", new WebServerGracefulShutdownLifecycle(this.webServer)); getBeanFactory().registerSingleton(\\\"webServerStartStop\\\", new WebServerStartStopLifecycle(this, this.webServer)); } else if (servletContext != null) { try { getSelfInitializer().onStartup(servletContext); } catch (ServletException ex) { throw new ApplicationContextException(\\\"Cannot initialize servlet context\\\", ex); } } initPropertySources(); } } \"]},\"152\":{\"title\":\"tomcat embed\",\"header\":\"3.2 TomcatServletWebServerFactory\",\"text\":[\"通过ServletWebServerFactoryConfiguration完成TomcatServletWebServerFactory注入，同时会注入一些个性化接口，这些接口会在TomcatServletWebServerFactory的构造器中被调用。个性化接口有：\",\"TomcatContextCustomizer\",\"TomcatConnectorCustomizer\",\"TomcatProtocolHandlerCustomizer\",\"最终会通过TomcatServletWebServerFactory工厂类构建WebServer对象，跟getWebServer方法\",\"public class TomcatServletWebServerFactory extends AbstractServletWebServerFactory implements ConfigurableTomcatWebServerFactory, ResourceLoaderAware { @Override public WebServer getWebServer(ServletContextInitializer... initializers) { ... prepareContext(tomcat.getHost(), initializers);//准备上下文 return getTomcatWebServer(tomcat); } protected void prepareContext(Host host, ServletContextInitializer[] initializers) { ... configureContext(context, initializersToUse);//配置上下文 ... } protected void configureContext(Context context, ServletContextInitializer[] initializers) { TomcatStarter starter = new TomcatStarter(initializers);//创建tomcat启动类 if (context instanceof TomcatEmbeddedContext) { TomcatEmbeddedContext embeddedContext = (TomcatEmbeddedContext) context; embeddedContext.setStarter(starter); embeddedContext.setFailCtxIfServletStartFails(true); } //此处的context是org.springframework.boot.web.embedded.tomcat.TomcatEmbeddedContext context.addServletContainerInitializer(starter, NO_CLASSES); ... } } \",\"工厂类中会创建Tomcat对象，并初始化其内部的Server对象。最终将Tomcat对象封装到TomcatWebServer中返回，接着看下TomcatWebServer的构造器\",\"public class TomcatWebServer implements WebServer { //用于封装Tomcat对象 private final Tomcat tomcat; public TomcatWebServer(Tomcat tomcat, boolean autoStart, Shutdown shutdown) { Assert.notNull(tomcat, \\\"Tomcat Server must not be null\\\"); //初始化Tomcat对象 this.tomcat = tomcat; this.autoStart = autoStart; this.gracefulShutdown = (shutdown == Shutdown.GRACEFUL) ? new GracefulShutdown(tomcat) : null; //重点看这里 这里启动了Tomcat initialize(); } //启动了Tomcat private void initialize() throws WebServerException { logger.info(\\\"Tomcat initialized with port(s): \\\" + getPortsDescription(false)); synchronized (this.monitor) { try { ... // Start the server to trigger initialization listeners this.tomcat.start(); ... } catch (Exception ex) { ... } } } } \",\"到这里可以知道工厂类在构造WebServer之后，Tomcat就被启动了，这里就是内嵌Tomcat的启动时机。和原来相比，原来的启动类是Tomcat，再由Tomcat启动触发容器的创建和启动，而现在的启动类是容器，由容器启动触发了Tomcat的启动。\"]},\"153\":{\"title\":\"tomcat embed\",\"header\":\"四、SpringBoot中的Tomcat如何加载Servlet\",\"text\":[]},\"154\":{\"title\":\"tomcat embed\",\"header\":\"4.1 Servlet3.0标准可以不使用web.xml完成Servlet的注册\",\"text\":[\"早期的项目一个web.xml文件最终被解析成一个Context对象【容器对象】，web.xml内部可以配置很多servlet，最终在解析完web.xml会将解析出来的servlet对象注册到容器中。而springboot项目中并没有web.xml文件，所以引发了一个问题。Servlet对象是如何被注册到Tomcat容器中的呢？ servlet3.0标准中提供了一个不用web.xml也能加载Servlet的方法。\",\"需要三步\",\"写一个类实现ServletContainerInitializer接口\",\"实现ServletContainerInitializer接口的onStartup方法\",\"在/META-INF/services目录下创建javax.servlet.ServletContainerInitializer文件，将实现类的全名称写入到配置文件中\",\"实现完以上步骤,Tomcat启动后会回调实现类的onStartup方法，并将Servlet容器的装饰类【ServletContext】当作入参传入onStartup方法。看下ServletContext这个类的方法。\",\"public interface ServletContext { public ServletRegistration.Dynamic addServlet(String servletName, String className); public ServletRegistration.Dynamic addServlet(String servletName, Servlet servlet); public ServletRegistration.Dynamic addServlet(String servletName, Class<? extends Servlet> servletClass); } \",\"这个类有很多方法,其中新增servlet的就有3个重载方法。也就是说我们写的实现类在实现onStartup的方法中就可以调用ServletContext的addServlet方法完成Servlet的注册了。\"]},\"155\":{\"title\":\"tomcat embed\",\"header\":\"4.2 SpringBoot中的ServletContainerInitializer的实现类\",\"text\":[\"那么SpringBoot中的Tomcat就是用这个方式加载的Servlet吗？是也不全是。springboot确实搞了一个实现类TomcatStarter来实现ServletContainerInitializer接口并实现了onStartup方法。但是和web.xml文件一样javax.servlet.ServletContainerInitializer文件在springboot项目中也没有。其实与写javax.servlet.ServletContainerInitializer文件的方式相比还有一种更加简单粗暴的方式，在Context对象创建好后直接调用其addServletContainerInitializer方法将ServletContainerInitializer的实现类传进去。再次看下创建Context对象的地方。\",\"public class TomcatServletWebServerFactory extends AbstractServletWebServerFactory implements ConfigurableTomcatWebServerFactory, ResourceLoaderAware { //创建Servlet容器 protected void prepareContext(Host host, ServletContextInitializer[] initializers) { File documentRoot = getValidDocumentRoot(); //直接new了一个容器 该类是StandardContext的子类 TomcatEmbeddedContext context = new TomcatEmbeddedContext(); if (documentRoot != null) { context.setResources(new LoaderHidingResourceRoot(context)); } ... ServletContextInitializer[] initializersToUse = mergeInitializers(initializers); //将容器放入host对象中 host.addChild(context); //这个方法之前没根 这次下这个方法 configureContext(context, initializersToUse); postProcessContext(context); } protected void configureContext(Context context, ServletContextInitializer[] initializers) { //创建了ServletContainerInitializer的实现类 TomcatStarter starter = new TomcatStarter(initializers); ... //这里直接将其放入到了容器中 context.addServletContainerInitializer(starter, NO_CLASSES); ... } } \"]},\"156\":{\"title\":\"tomcat embed\",\"header\":\"4.3 ServletContainerInitializer的实现类执行onStartup方法的时机\",\"text\":[\"之前分析过server.start方法执行后各个元素的init、start、initInternal、startInternal都会被调用，Context对象也不例外。接着看下Context的startInternal方法。虽然我们的Context对象类型是TomcatEmbeddedContext，但是startInternal方法是由其父类StandardContext实现的。所以看下StandardContext类\",\"public class StandardContext extends ContainerBase implements Context, NotificationEmitter { //内部有一个集合 用于保存所有ServletContainerInitializer的实现类 private Map<ServletContainerInitializer,Set<Class<?>>> initializers = new LinkedHashMap<>(); //还记得这个方法吗TomcatEmbeddedContext就是通过该方法将TomcatStarter添加进来的 public void addServletContainerInitializer( ServletContainerInitializer sci, Set<Class<?>> classes) { initializers.put(sci, classes); } //Tomcat启动时会执行该方法 这个方法巨长无比 我只把关键的保留了 protected synchronized void startInternal() throws LifecycleException { //便利集合 for (Map.Entry<ServletContainerInitializer, Set<Class<?>>> entry : initializers.entrySet()) { try { //集合中的key就是ServletContainerInitializer的实现类 这里调用了onStartup方法 entry.getKey().onStartup(entry.getValue(), //最后看下getServletContext方法，看看容器的装饰类到底是什么 getServletContext()); } catch (ServletException e) { log.error(sm.getString(\\\"standardContext.sciFail\\\"), e); ok = false; break; } } } //这里可以知道容器最终把自己封装到了ApplicationContext对象中， //最终将ApplicationContext对象暴露给ServletContainerInitializer实现类 public ServletContext getServletContext() { if (context == null) { context = new ApplicationContext(this); if (altDDName != null) context.setAttribute(Globals.ALT_DD_ATTR,altDDName); } return context.getFacade(); } } \",\"也就是容器对象启动后，在执行其startInternal方法是会调用ServletContainerInitializer的实现类的onStartup方法并将容器对象的装饰类ApplicationContext当作入参传入onStartup方法。\"]},\"157\":{\"title\":\"tomcat embed\",\"header\":\"4.4 分析TomcatStarter的onStartup方法\",\"text\":[\"铺垫了那么多，我们看下TomcatStarter的onStartup方法\",\"class TomcatStarter implements ServletContainerInitializer { //一堆ServletContextInitializer接口的实现类 private final ServletContextInitializer[] initializers; //构造器 初始化内部的initializers属性 TomcatStarter(ServletContextInitializer[] initializers) { this.initializers = initializers; } //这个方法里没有任何servlet的添加操作，而是便利了initializers，并执行initializers每一个实例的onStartup方法，将servletContext当入参传入其中 @Override public void onStartup(Set<Class<?>> classes, ServletContext servletContext) throws ServletException { try { for (ServletContextInitializer initializer : this.initializers) { initializer.onStartup(servletContext); } } catch (Exception ex) { .... } } } \",\"和想象中的不一样，onStartup方法中并没有添加servlet，而是将ServletContext对象再次传给了ServletContextInitializer的实现类去完成后续工作。为什么要这样做呢？其实原因很简单，到目前为止要想拿到ServletContext对象就必须实现ServletContainerInitializer接口。而ServletContainerInitializer接口并不是spring的类。所以spring搞了一个自己的接口ServletContextInitializer并且内部也有一个待实现的方法onStartup。spring想实现的目标是所有实现了ServletContextInitializer接口的bean都能拿到ServletContext对象。最终借助TomcatStarter类中的onStartup完成了实现。 大致看下实现过程，起点在ServletWebServerApplicationContext类中\",\"public class ServletWebServerApplicationContext extends GenericWebApplicationContext implements ConfigurableWebServerApplicationContext { //最终这个私有方法会被调用，可以看出如果TomcatStarter中的onStartup方法能调用到该方法，上述说的spirng目的就达成了 private void selfInitialize(ServletContext servletContext) throws ServletException { prepareWebApplicationContext(servletContext); registerApplicationScope(servletContext); WebApplicationContextUtils.registerEnvironmentBeans(getBeanFactory(), servletContext); //这里拿到容器中所有实现了ServletContextInitializer接口的bean并依次执行其onStartup方法 入参是servletContext for (ServletContextInitializer beans : getServletContextInitializerBeans()) { beans.onStartup(servletContext); } } //ServletContextInitializer本身是一个@FunctionalInterface //这里将上述的私有方法封装成了一个ServletContextInitializer实例 很感慨既然还能这样干 private org.springframework.boot.web.servlet.ServletContextInitializer getSelfInitializer() { return this::selfInitialize; } //还记得这个方法吗，这里通过factory完成了WebServer的创建，也就是tomcat启动的位置 private void createWebServer() { WebServer webServer = this.webServer; ServletContext servletContext = getServletContext(); if (webServer == null && servletContext == null) { ServletWebServerFactory factory = getWebServerFactory(); //这里将ServletContextInitializer实例传入到了TomcatServletWebServerFactory中 this.webServer = factory.getWebServer(getSelfInitializer()); ... } .... } } \",\"上述可以看到spring用一种很诡异的方式将一个私有方法封装成了ServletContextInitializer实例并传给了TomcatServletWebServerFactory的getWebServer方法中，再次根下TomcatServletWebServerFactory类。这次主要看ServletContextInitializer实例的传递过程\",\"public class TomcatServletWebServerFactory extends AbstractServletWebServerFactory implements ConfigurableTomcatWebServerFactory, ResourceLoaderAware { //这里ServletContextInitializer实例被传入 public WebServer getWebServer(ServletContextInitializer... initializers) { ... //被传入到该方法 prepareContext(tomcat.getHost(), initializers); return getTomcatWebServer(tomcat); } protected void prepareContext(Host host, ServletContextInitializer[] initializers) { //这里做了依次封装 之前的ServletContextInitializer实例就在其中 ServletContextInitializer[] initializersToUse = mergeInitializers(initializers); //根这里 configureContext(context, initializersToUse); postProcessContext(context); } //做了一层扩展 protected final ServletContextInitializer[] mergeInitializers(ServletContextInitializer... initializers) { List<ServletContextInitializer> mergedInitializers = new ArrayList<>(); mergedInitializers.add((servletContext) -> this.initParameters.forEach(servletContext::setInitParameter)); mergedInitializers.add(new SessionConfiguringInitializer(this.session)); //被传入到mergedInitializers集合中 mergedInitializers.addAll(Arrays.asList(initializers)); mergedInitializers.addAll(this.initializers); //集合转数组 return mergedInitializers.toArray(new ServletContextInitializer[0]); } //最终会将ServletContextInitializer传入TomcatStarter的构造函数，和之前说的完全对应上了 protected void configureContext(Context context, ServletContextInitializer[] initializers) { TomcatStarter starter = new TomcatStarter(initializers); ... } } \",\"通过对TomcatStarter的onStartup方法的分析可以知道，所有实现了ServletContextInitializer接口的bean都能拿到ServletContext对象，完成servlet对象的添加\"]},\"158\":{\"title\":\"tomcat embed\",\"header\":\"4.5 DispatcherServlet如何加载到Tomcat容器\",\"text\":[\"springboot会自动装配springmvc，而springmvc的核心类就是DispatcherServlet。上边铺垫了那么多最终看看DispatcherServlet是如何加载到tomcat中的 首先看下自动装配类DispatcherServletAutoConfiguration\",\"...省略注解 public class DispatcherServletAutoConfiguration { ...省略注解 protected static class DispatcherServletConfiguration { //这里创建了DispatcherServlet类 @Bean(name = DEFAULT_DISPATCHER_SERVLET_BEAN_NAME) public DispatcherServlet dispatcherServlet(WebMvcProperties webMvcProperties) { ...省略DispatcherServlet构造内容 return dispatcherServlet; } ... ...省略注解 protected static class DispatcherServletRegistrationConfiguration { ...省略注解 //重点是这个类，上边的DispatcherServlet会被传入到该类中，最终由该类完成DispatcherServlet向Tomcat容器的注册 public DispatcherServletRegistrationBean dispatcherServletRegistration(DispatcherServlet dispatcherServlet, WebMvcProperties webMvcProperties, ObjectProvider<MultipartConfigElement> multipartConfig) { DispatcherServletRegistrationBean registration = new DispatcherServletRegistrationBean(dispatcherServlet, webMvcProperties.getServlet().getPath()); registration.setName(DEFAULT_DISPATCHER_SERVLET_BEAN_NAME); registration.setLoadOnStartup(webMvcProperties.getServlet().getLoadOnStartup()); multipartConfig.ifAvailable(registration::setMultipartConfig); return registration; } } } } \",\"可以看到自动装配时向spring容器中注册了DispatcherServletRegistrationBean类，该类构造器中包含DispatcherServlet对象。看下DispatcherServletRegistrationBean类的家谱\",\"可以看到该类实现了ServletContextInitializer接口也就是其能拿到Tomcat容器对象。看下其祖先类RegistrationBean的onStartup方法\",\"public abstract class RegistrationBean implements ServletContextInitializer, Ordered { public final void onStartup(ServletContext servletContext) throws ServletException { String description = getDescription(); if (!isEnabled()) { logger.info(StringUtils.capitalize(description) + \\\" was not registered (disabled)\\\"); return; } //根这个方法 该方法由子类DynamicRegistrationBean实现 register(description, servletContext); } } \",\"看下DynamicRegistrationBean类的register方法\",\"public abstract class DynamicRegistrationBean<D extends Registration.Dynamic> extends RegistrationBean { protected final void register(String description, ServletContext servletContext) { //servlet注册在这里完成 该方法由子类ServletRegistrationBean实现 //servlet注册完后会返回一个registration对象，用于完成servlet-mapping的配置 D registration = addRegistration(description, servletContext); if (registration == null) { logger.info(StringUtils.capitalize(description) + \\\" was not registered (possibly already registered?)\\\"); return; } //servlet的mapping配置在这里完成 该方法由子类ServletRegistrationBean实现 configure(registration); } } \",\"看下ServletRegistrationBean类的addRegistration方法\",\"public class ServletRegistrationBean<T extends Servlet> extends DynamicRegistrationBean<ServletRegistration.Dynamic> { //这里可以看到servletContext.addServlet方法终于被调用了 @Override protected ServletRegistration.Dynamic addRegistration(String description, ServletContext servletContext) { String name = getServletName(); //this.servlet就是DispatcherServlet return servletContext.addServlet(name, this.servlet); } //这里来配置servlet-mapping @Override protected void configure(ServletRegistration.Dynamic registration) { super.configure(registration); String[] urlMapping = StringUtils.toStringArray(this.urlMappings); if (urlMapping.length == 0 && this.alwaysMapUrl) { urlMapping = DEFAULT_MAPPINGS; } if (!ObjectUtils.isEmpty(urlMapping)) { registration.addMapping(urlMapping); } registration.setLoadOnStartup(this.loadOnStartup); if (this.multipartConfig != null) { registration.setMultipartConfig(this.multipartConfig); } } } \"]},\"159\":{\"title\":\"tomcat embed\",\"header\":\"总结\",\"text\":[\"springboot使用内嵌Tomcat完成了tomcat的启动。内嵌Tomcat本质上和正常Tomcat的Catalina对象一样都是通过初始化内部的server对象，最终调用server对象的start方法来完成启动的。区别就是server对象的创建构成，前者直接new后者解析server.xml文件\",\"springboot中tomcat的启动时机是在容器启动时，执行onRefresh方法中。创建webServer对象时启动的。\",\"springboot基于servlet3.0标准。创建了ServletContainerInitializer的实现类TomcatStarter最终拿到Tomcat容器对象\",\"springboot基于TomcatStarter拿到的tomcat容器对象做了进一步优化。最终实现了所有实现ServletContextInitializer接口的bean都能拿到tomcat容器\",\"ServletContextInitializer的实现类之一DispatcherServletRegistrationBean完成了DispatcherServlet向tomcat容器的注册\"]},\"160\":{\"title\":\"tomcat embed\",\"header\":\"个性化实现\",\"text\":[\"通过ServletWebServerFactoryAutoConfiguration导入BeanPostProcessorsRegistrar，该类会注册一个WebServerFactoryCustomizerBeanPostProcessor，该类会调用WebServerFactoryCustomizer的customize方法，通过实现WebServerFactoryCustomizer接口来可以个性化tomcat配置。\"]},\"161\":{\"title\":\"tomcat embed\",\"header\":\"FAQ\",\"text\":[\"Question: The valid characters are defined in RFC 7230 and RFC 3986\",\"java.lang.IllegalArgumentException: Invalid character found in the request target [/officeweb_cs?fname=[%E6%A0%87%E6%AE%B5%E7%BC%96%E5%8F%B7202306260101-001]9A062601-001.XZZF ]. The valid characters are defined in RFC 7230 and RFC 3986 at org.apache.coyote.http11.Http11InputBuffer.parseRequestLine(Http11InputBuffer.java:509) ~[tomcat-coyote.jar:8.5.76] at org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:513) ~[tomcat-coyote.jar:8.5.76] at org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:65) [tomcat-coyote.jar:8.5.76] at org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:881) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.Nio2Endpoint$SocketProcessor.doRun(Nio2Endpoint.java:1708) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:49) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.AbstractEndpoint.processSocket(AbstractEndpoint.java:1184) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.Nio2Endpoint.setSocketOptions(Nio2Endpoint.java:340) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor.completed(Nio2Endpoint.java:474) [tomcat-coyote.jar:8.5.76] at org.apache.tomcat.util.net.Nio2Endpoint$Nio2Acceptor.completed(Nio2Endpoint.java:410) [tomcat-coyote.jar:8.5.76] at sun.nio.ch.Invoker.invokeUnchecked(Invoker.java:126) [na:1.8.0_312] at sun.nio.ch.Invoker$2.run(Invoker.java:218) [na:1.8.0_312] at sun.nio.ch.AsynchronousChannelGroupImpl$1.run(AsynchronousChannelGroupImpl.java:112) [na:1.8.0_312] at org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191) [tomcat-util.jar:8.5.76] at org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659) [tomcat-util.jar:8.5.76] at org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:61) [tomcat-util.jar:8.5.76] at java.lang.Thread.run(Thread.java:748) [na:1.8.0_312] \",\"tomcat8自带的非法字符拦截机制，异常抛出详见ErrorReportValve\",\"方案一：外置tomcat可以通过配置指定error处理页面(对tomcat版本有要求),公司的tomcat8不支持配置errorCode，详见catalina.jar中ErrorReportValve\",\"<Engine name=\\\"Catalina\\\" defaultHost=\\\"localhost\\\"> <Valve className=\\\"org.apache.catalina.valves.ErrorReportValve\\\" errorCode.400=\\\"400.html\\\" errorCode.404=\\\"404.html\\\" errorCode.500=\\\"500.html\\\" showReport=\\\"false\\\" showServerInfo=\\\"false\\\" /> </Engine> \",\"方案二：springboot可以通过配置关闭异常显示\",\"server.error.include-stacktrace=never server.error.include-message=never server.error.include-binding-errors=never server.error.include-exception=false \",\"方案三：springboot可以通过实现WebServerFactoryCustomizer接口对ErrorReportValve进行配置\",\"@Component public class MyTomcatWebServerFactoryCustomizer implements WebServerFactoryCustomizer<ConfigurableTomcatWebServerFactory>, Ordered { protected final ResourceLoader resourceLoader; public MyTomcatWebServerFactoryCustomizer(ResourceLoader resourceLoader) { this.resourceLoader = resourceLoader; } @Override public void customize(ConfigurableTomcatWebServerFactory factory) { factory.addContextCustomizers((context) -> { ErrorReportValve valve = new ErrorReportValve(); valve.setShowServerInfo(true); valve.setShowReport(true); valve.setProperty(\\\"errorCode.0\\\", \\\"error.html\\\"); try { File error = new File(context.getCatalinaHome(), \\\"error.html\\\"); log.info(error.getCanonicalPath()); //File file2 = ResourceUtils.getFile(\\\"classpath:templates/error.ftl\\\"); Resource path = resourceLoader.getResource(\\\"classpath:templates/error.ftl\\\"); //File file = path.getFile(); // will fail if not resolvable in the file system if (!error.exists()) { log.debug(String.valueOf(error.createNewFile())); } try (OutputStream os = Files.newOutputStream(error.toPath()); InputStream is = path.getInputStream()) { IOTools.flow(is, os); } catch (IOException e) { log.error(e.getMessage(), e); } } catch (IOException e) { log.error(e.getMessage(), e); } context.getParent().getPipeline().addValve(valve); }); } @Override public int getOrder() { return 1; } } \",\"方案四：springboot也可以通过实现TomcatConnectorCustomizer接口进行配置。\",\"@Component public class MyTomcatConnectorCustomizer implements TomcatConnectorCustomizer { @Override public void customize(Connector connector) { connector.setProperty(\\\"relaxedPathChars\\\", \\\"\\\\\\\"<>[\\\\\\\\]^`{|}\\\"); connector.setProperty(\\\"relaxedQueryChars\\\", \\\"\\\\\\\"<>[\\\\\\\\]^`{|}\\\"); } } \",\"方案五：外置tomcat可以通过配置server.xml进行配置\",\"<Conection port=\\\"8080\\\" protocol=\\\"HTTP/1.1\\\" connectionTimeout=\\\"20000\\\" redirectPort=\\\"8443\\\" relaxedPathChars=\\\"\\\\,[]^`{|}%\\\" relaxedQueryChars=\\\"\\\\,[]^`{|,}%\\\"/> \"]}},\"dirtCount\":0,\"index\":[[\"外置tomcat可以通过配置server\",{\"3\":{\"161\":1}}],[\"外置tomcat可以通过配置指定error处理页面\",{\"3\":{\"161\":1}}],[\"方案五\",{\"3\":{\"161\":1}}],[\"方案四\",{\"3\":{\"161\":1}}],[\"方案三\",{\"3\":{\"161\":1}}],[\"方案二\",{\"3\":{\"161\":1}}],[\"方案一\",{\"3\":{\"161\":1}}],[\"详见catalina\",{\"3\":{\"161\":1}}],[\"详细等级\",{\"3\":{\"17\":1}}],[\"异常抛出详见errorreportvalve\",{\"3\":{\"161\":1}}],[\"执行onrefresh方法中\",{\"3\":{\"159\":1}}],[\"执行bootstrap的mian方法\",{\"3\":{\"148\":1}}],[\"区别就是server对象的创建构成\",{\"3\":{\"159\":1}}],[\"区别就是初始化server的过程不在需要解析server\",{\"3\":{\"149\":1}}],[\"省略dispatcherservlet构造内容\",{\"3\":{\"158\":1}}],[\"省略注解\",{\"3\":{\"158\":4}}],[\"省钱妙招\",{\"3\":{\"62\":1}}],[\"首先看下自动装配类dispatcherservletautoconfiguration\",{\"3\":{\"158\":1}}],[\"首先看看抽象模板类lifecyclebase\",{\"3\":{\"148\":1}}],[\"完成servlet对象的添加\",{\"3\":{\"157\":1}}],[\"被传入到mergedinitializers集合中\",{\"3\":{\"157\":1}}],[\"被传入到该方法\",{\"3\":{\"157\":1}}],[\"做了一层扩展\",{\"3\":{\"157\":1}}],[\"根这个方法\",{\"3\":{\"158\":1}}],[\"根这里\",{\"3\":{\"157\":1}}],[\"根据指令设置磁盘大小\",{\"3\":{\"30\":1}}],[\"之前的servletcontextinitializer实例就在其中\",{\"3\":{\"157\":1}}],[\"之前分析过server\",{\"3\":{\"156\":1}}],[\"很感慨既然还能这样干\",{\"3\":{\"157\":1}}],[\"入参是servletcontext\",{\"3\":{\"157\":1}}],[\"起点在servletwebserverapplicationcontext类中\",{\"3\":{\"157\":1}}],[\"大致看下实现过程\",{\"3\":{\"157\":1}}],[\"大环境\",{\"3\":{\"115\":1}}],[\"到目前为止要想拿到servletcontext对象就必须实现servletcontainerinitializer接口\",{\"3\":{\"157\":1}}],[\"到这里可以知道工厂类在构造webserver之后\",{\"3\":{\"152\":1}}],[\"构造器\",{\"3\":{\"157\":1}}],[\"构建catalina对象并赋值给全局变量catalinadaemon\",{\"3\":{\"148\":2}}],[\"构建catalina对象\",{\"3\":{\"148\":1}}],[\"铺垫了那么多\",{\"3\":{\"157\":1}}],[\"分析tomcatstarter的onstartup方法\",{\"0\":{\"157\":1},\"2\":{\"157\":1}}],[\"看下servletregistrationbean类的addregistration方法\",{\"3\":{\"158\":1}}],[\"看下servletcontext这个类的方法\",{\"3\":{\"154\":1}}],[\"看下dynamicregistrationbean类的register方法\",{\"3\":{\"158\":1}}],[\"看下dispatcherservletregistrationbean类的家谱\",{\"3\":{\"158\":1}}],[\"看下其祖先类registrationbean的onstartup方法\",{\"3\":{\"158\":1}}],[\"看看容器的装饰类到底是什么\",{\"3\":{\"156\":1}}],[\"集合转数组\",{\"3\":{\"157\":1}}],[\"集合中的key就是servletcontainerinitializer的实现类\",{\"3\":{\"156\":1}}],[\"集成测试\",{\"3\":{\"140\":1}}],[\"便利集合\",{\"3\":{\"156\":1}}],[\"便利其下的service对象挨个调用start方法\",{\"3\":{\"148\":1}}],[\"便利其下的service对象挨个调用init方法\",{\"3\":{\"148\":1}}],[\"我只把关键的保留了\",{\"3\":{\"156\":1}}],[\"我们看下tomcatstarter的onstartup方法\",{\"3\":{\"157\":1}}],[\"我们看看当server的start方法被调用时会发生什么\",{\"3\":{\"148\":1}}],[\"我们来一探究竟\",{\"3\":{\"147\":1}}],[\"我们有两种办法\",{\"3\":{\"60\":1}}],[\"我们希望别的项目可以通过find\",{\"3\":{\"60\":1}}],[\"我们介绍几种常用的\",{\"3\":{\"57\":1}}],[\"我们也需要设定变量来储存我们的选项\",{\"3\":{\"53\":1}}],[\"我们应该将cmake理解为一门编程语言\",{\"3\":{\"53\":1}}],[\"我们给test\",{\"3\":{\"50\":1}}],[\"我们通过add\",{\"3\":{\"50\":1}}],[\"我们可以避免路径混乱的问题\",{\"3\":{\"57\":1}}],[\"我们可以这样写\",{\"3\":{\"57\":1}}],[\"我们可以通过target的名称为其添加属性\",{\"3\":{\"50\":1}}],[\"我们可以在cmake中继续使用target的名字为target的编译设置新的属性和行为\",{\"3\":{\"49\":1}}],[\"我们可以运行\",{\"3\":{\"41\":1}}],[\"我们则需要运行\",{\"3\":{\"41\":1}}],[\"还记得这个方法吗\",{\"3\":{\"157\":1}}],[\"还记得这个方法吗tomcatembeddedcontext就是通过该方法将tomcatstarter添加进来的\",{\"3\":{\"156\":1}}],[\"还是静态链接库\",{\"3\":{\"50\":1}}],[\"虽然我们的context对象类型是tomcatembeddedcontext\",{\"3\":{\"156\":1}}],[\"直接new了一个容器\",{\"3\":{\"155\":1}}],[\"是也不全是\",{\"3\":{\"155\":1}}],[\"那么springboot中的tomcat就是用这个方式加载的servlet吗\",{\"3\":{\"155\":1}}],[\"那么tomcat是如何启动的\",{\"3\":{\"147\":1}}],[\"写一个类实现servletcontainerinitializer接口\",{\"3\":{\"154\":1}}],[\"容器对象\",{\"3\":{\"154\":1}}],[\"容器启动会执行祖先类abstractapplicationcontext的refresh方法\",{\"3\":{\"150\":1}}],[\"早期的项目一个web\",{\"3\":{\"154\":1}}],[\"由容器启动触发了tomcat的启动\",{\"3\":{\"152\":1}}],[\"和之前说的完全对应上了\",{\"3\":{\"157\":1}}],[\"和想象中的不一样\",{\"3\":{\"157\":1}}],[\"和原来相比\",{\"3\":{\"152\":1}}],[\"和add\",{\"3\":{\"50\":1}}],[\"重点是这个类\",{\"3\":{\"158\":1}}],[\"重点看这里\",{\"3\":{\"152\":1}}],[\"重点在后边的这几个方法\",{\"3\":{\"149\":1}}],[\"准备上下文\",{\"3\":{\"152\":1}}],[\"准备知识\",{\"0\":{\"37\":1},\"2\":{\"37\":1}}],[\"跟getwebserver方法\",{\"3\":{\"152\":1}}],[\"个性化实现\",{\"0\":{\"160\":1},\"2\":{\"160\":1}}],[\"个性化接口有\",{\"3\":{\"152\":1}}],[\"个人简介\",{\"1\":{\"0\":1,\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1}}],[\"个人优势\",{\"0\":{\"0\":1},\"2\":{\"0\":1}}],[\"各种get就能完成初始化\",{\"3\":{\"149\":1}}],[\"都是通过初始化一个server对象然后调用server对象的start方法完成tomcat启动的\",{\"3\":{\"149\":1}}],[\"都会使用project来指定本项目的名称\",{\"3\":{\"48\":1}}],[\"同时会注入一些个性化接口\",{\"3\":{\"152\":1}}],[\"同时opencv提供了cmake\",{\"3\":{\"61\":1}}],[\"同上没有就new\",{\"3\":{\"149\":1}}],[\"没有就new\",{\"3\":{\"149\":2}}],[\"没有参数\",{\"3\":{\"58\":1}}],[\"顺便为其创建了一个service对象\",{\"3\":{\"149\":1}}],[\"接着看下context的startinternal方法\",{\"3\":{\"156\":1}}],[\"接着看下tomcatwebserver的构造器\",{\"3\":{\"152\":1}}],[\"接着会调用lifecyclebase的initinternal方法\",{\"3\":{\"148\":1}}],[\"接着会调用lifecyclebase的init方法\",{\"3\":{\"148\":1}}],[\"接下来看看这个类\",{\"3\":{\"149\":1}}],[\"名字就叫tomcat\",{\"3\":{\"149\":1}}],[\"阿帕奇提供了一个类\",{\"3\":{\"149\":1}}],[\"继续执行startinternal方法\",{\"3\":{\"148\":1}}],[\"继续向下走执行startinternal方法\",{\"3\":{\"148\":1}}],[\"基于对lifecyclebase的4个方法的分析\",{\"3\":{\"148\":1}}],[\"基于汇编语言文件生成二进制格式的目标文件\",{\"3\":{\"38\":1}}],[\"子类实现\",{\"3\":{\"148\":2}}],[\"挨个调用其start方法\",{\"3\":{\"148\":2}}],[\"挨个调用其init方法\",{\"3\":{\"148\":2}}],[\"防止重复init用的\",{\"3\":{\"148\":1}}],[\"就是便利其内部的host对象\",{\"3\":{\"148\":2}}],[\"就是便利其内部的sercie对象\",{\"3\":{\"148\":2}}],[\"就是调用engine的\",{\"3\":{\"148\":2}}],[\"就是自己不抽\",{\"3\":{\"52\":1}}],[\"就是自己抽\",{\"3\":{\"52\":2}}],[\"抽象模板类提供的公共方法\",{\"3\":{\"148\":2}}],[\"上边的dispatcherservlet会被传入到该类中\",{\"3\":{\"158\":1}}],[\"上边铺垫了那么多最终看看dispatcherservlet是如何加载到tomcat中的\",{\"3\":{\"158\":1}}],[\"上述可以看到spring用一种很诡异的方式将一个私有方法封装成了servletcontextinitializer实例并传给了tomcatservletwebserverfactory的getwebserver方法中\",{\"3\":{\"157\":1}}],[\"上述说的spirng目的就达成了\",{\"3\":{\"157\":1}}],[\"上述提到的所有对象都继承该类\",{\"3\":{\"148\":1}}],[\"上面的关键词public\",{\"3\":{\"50\":1}}],[\"返回全局变量server\",{\"3\":{\"148\":1}}],[\"返回true\",{\"3\":{\"57\":1}}],[\"找到一个就生成一个context对象\",{\"3\":{\"148\":1}}],[\"找不到库文件\",{\"3\":{\"50\":2}}],[\"找不到头文件\",{\"3\":{\"50\":1}}],[\"该类会调用webserverfactorycustomizer的customize方法\",{\"3\":{\"160\":1}}],[\"该类会注册一个webserverfactorycustomizerbeanpostprocessor\",{\"3\":{\"160\":1}}],[\"该类构造器中包含dispatcherservlet对象\",{\"3\":{\"158\":1}}],[\"该类是standardcontext的子类\",{\"3\":{\"155\":1}}],[\"该类和catalina类十分相似\",{\"3\":{\"149\":1}}],[\"该类有4个主要方法\",{\"3\":{\"148\":1}}],[\"该方法由子类servletregistrationbean实现\",{\"3\":{\"158\":2}}],[\"该方法由子类server实现\",{\"3\":{\"148\":2}}],[\"该方法由子类dynamicregistrationbean实现\",{\"3\":{\"158\":1}}],[\"该方法中的onrefresh方法被annotationconfigservletwebserverapplicationcontext的父类servletwebserverapplicationcontext重写了\",{\"3\":{\"150\":1}}],[\"该方法会创建并启动一个容器annotationconfigservletwebserverapplicationcontext\",{\"3\":{\"150\":1}}],[\"该方法是一个抽象方法由子类完成实现\",{\"3\":{\"148\":2}}],[\"该属性的默认值是webapps\",{\"3\":{\"148\":1}}],[\"该对象内部包含一组service对象\",{\"3\":{\"148\":1}}],[\"该对象通过解析server\",{\"3\":{\"148\":1}}],[\"只是在server\",{\"3\":{\"148\":1}}],[\"每个host内部有一组context\",{\"3\":{\"148\":1}}],[\"每个engine内部有一组host\",{\"3\":{\"148\":1}}],[\"每个engine对象包含一组host对象\",{\"3\":{\"148\":1}}],[\"每个service内部有一个engine\",{\"3\":{\"148\":1}}],[\"每个service对象包含一个engine对象\",{\"3\":{\"148\":1}}],[\"解析server\",{\"3\":{\"148\":1}}],[\"本质是server的start方法\",{\"3\":{\"149\":1}}],[\"本质是调用了catalina对象的load方法\",{\"3\":{\"148\":2}}],[\"本质也是调用的server\",{\"3\":{\"149\":1}}],[\"本质上就是调用server的start方法\",{\"3\":{\"148\":1}}],[\"本质上是调用了catalina的start方法\",{\"3\":{\"148\":2}}],[\"本地ubuntu示例\",{\"3\":{\"62\":1}}],[\"全局变量server对象\",{\"3\":{\"148\":1}}],[\"全局变量\",{\"3\":{\"148\":2,\"149\":1}}],[\"原来的启动类是tomcat\",{\"3\":{\"152\":1}}],[\"原来的tomcat启动流程\",{\"0\":{\"148\":1},\"2\":{\"148\":1}}],[\"原理\",{\"0\":{\"126\":1},\"2\":{\"126\":1}}],[\"它与原来的tomcat有啥区别\",{\"3\":{\"147\":1}}],[\"内置tomcat就在onrefresh方法中被启动了\",{\"3\":{\"150\":1}}],[\"内置tomcat长什么样\",{\"3\":{\"147\":1}}],[\"内部有一个集合\",{\"3\":{\"156\":1}}],[\"内部调用了getserver\",{\"3\":{\"149\":1}}],[\"内部也有一个server对象并且提供了start方法\",{\"3\":{\"149\":1}}],[\"内嵌tomcat本质上和正常tomcat的catalina对象一样都是通过初始化内部的server对象\",{\"3\":{\"159\":1}}],[\"内嵌tomcat\",{\"0\":{\"149\":1},\"2\":{\"149\":1}}],[\"内存中只有一份\",{\"3\":{\"39\":1}}],[\"内存中会有多份static\",{\"3\":{\"39\":1}}],[\"又是如何调整tomcat启动参数的\",{\"3\":{\"147\":1}}],[\"众所周知springboot通过fatjar运行时内嵌了tomcat\",{\"3\":{\"147\":1}}],[\"初始化内部的initializers属性\",{\"3\":{\"157\":1}}],[\"初始化tomcat对象\",{\"3\":{\"152\":1}}],[\"初始化server对象\",{\"3\":{\"148\":1}}],[\"初始化\",{\"3\":{\"140\":1}}],[\"包括项目的清理\",{\"3\":{\"140\":1}}],[\"包含目标ip地址的文件\",{\"3\":{\"17\":1}}],[\"易于扩展的生命周期\",{\"3\":{\"140\":1}}],[\"←\",{\"3\":{\"120\":2,\"121\":5}}],[\"源码解析\",{\"0\":{\"118\":1},\"2\":{\"118\":1}}],[\"此处的context是org\",{\"3\":{\"152\":1}}],[\"此时因为对象状态已经不是new状态了\",{\"3\":{\"148\":1}}],[\"此参数主要定义gc\",{\"3\":{\"117\":1}}],[\"此方法只能临时挂载\",{\"3\":{\"34\":1}}],[\"参数说明\",{\"3\":{\"117\":1}}],[\"参数名称\",{\"3\":{\"117\":1}}],[\"参数详解\",{\"0\":{\"117\":1},\"2\":{\"117\":1}}],[\"参考原文\",{\"3\":{\"124\":1}}],[\"参考资料\",{\"0\":{\"90\":1},\"2\":{\"90\":1}}],[\"参考附件\",{\"3\":{\"60\":3}}],[\"参考附件6\",{\"3\":{\"51\":1}}],[\"参考链接\",{\"3\":{\"28\":1}}],[\"操作说明\",{\"3\":{\"116\":1}}],[\"操作不变\",{\"3\":{\"51\":1}}],[\"小细节\",{\"3\":{\"115\":1}}],[\"场景\",{\"3\":{\"115\":1}}],[\"物体\",{\"3\":{\"115\":1}}],[\"人物\",{\"3\":{\"115\":1}}],[\"人工智能\",{\"1\":{\"36\":1},\"3\":{\"8\":1}}],[\"主体\",{\"3\":{\"115\":1}}],[\"效果器\",{\"3\":{\"115\":1}}],[\"画风词\",{\"3\":{\"115\":1}}],[\"前者直接new后者解析server\",{\"3\":{\"159\":1}}],[\"前言\",{\"0\":{\"147\":1},\"2\":{\"147\":1}}],[\"前缀\",{\"3\":{\"115\":1}}],[\"前沿技术\",{\"1\":{\"8\":1}}],[\"反向词\",{\"0\":{\"114\":1},\"2\":{\"114\":1}}],[\"反之如果ssh使用用户名密码登录遇到上述错误\",{\"3\":{\"26\":1}}],[\"客户端构建路径\",{\"0\":{\"106\":1},\"2\":{\"106\":1}}],[\"注册\",{\"0\":{\"103\":1},\"2\":{\"103\":1}}],[\"注意\",{\"3\":{\"15\":1,\"31\":1}}],[\"||\",{\"3\":{\"97\":1,\"118\":1}}],[\"|\",{\"3\":{\"97\":2,\"161\":4}}],[\"往期系列\",{\"0\":{\"91\":1},\"2\":{\"91\":1}}],[\"提取视频信息\",{\"0\":{\"89\":1},\"2\":{\"89\":1}}],[\"获取webserver\",{\"3\":{\"151\":1}}],[\"获取host\",{\"3\":{\"149\":1}}],[\"获取引擎\",{\"3\":{\"149\":1}}],[\"获取service\",{\"3\":{\"149\":1}}],[\"获取server\",{\"3\":{\"149\":1}}],[\"获取json数据\",{\"0\":{\"88\":1},\"2\":{\"88\":1}}],[\"获取qsv头部信息\",{\"0\":{\"87\":1},\"2\":{\"87\":1}}],[\"获取编译目标的文件名\",{\"3\":{\"57\":1}}],[\"获取编译目标的文件路径\",{\"3\":{\"57\":1}}],[\"老版本解密算法\",{\"0\":{\"85\":1},\"2\":{\"85\":1}}],[\"字节数组转int\",{\"0\":{\"84\":1},\"2\":{\"84\":1}}],[\"字节数组转16进制字符串\",{\"0\":{\"83\":1},\"2\":{\"83\":1}}],[\"逐字节读取文件\",{\"0\":{\"82\":1},\"2\":{\"82\":1}}],[\"后记\",{\"0\":{\"79\":1},\"2\":{\"79\":1}}],[\"后面做项目时会有调整\",{\"3\":{\"65\":1}}],[\"后面的参数是需要用到的源文件\",{\"3\":{\"50\":1}}],[\"总结\",{\"0\":{\"78\":1,\"159\":1},\"2\":{\"78\":1,\"159\":1}}],[\"视频分段信息\",{\"0\":{\"77\":1},\"2\":{\"77\":1}}],[\"索引信息\",{\"0\":{\"75\":1},\"2\":{\"75\":1}}],[\"头部信息\",{\"0\":{\"74\":1},\"2\":{\"74\":1}}],[\"什么是qsv文件\",{\"0\":{\"73\":1},\"2\":{\"73\":1}}],[\"系统中的环境变量\",{\"3\":{\"67\":1}}],[\"系统重启后就失效\",{\"3\":{\"34\":1}}],[\"附录\",{\"0\":{\"67\":1},\"2\":{\"67\":1}}],[\"附件位置\",{\"3\":{\"45\":1,\"50\":1,\"51\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"61\":1}}],[\"六\",{\"0\":{\"67\":1},\"2\":{\"67\":1}}],[\"请输入0~10中你最喜欢的数字\",{\"3\":{\"66\":1}}],[\"请访问\",{\"3\":{\"63\":1,\"65\":1}}],[\"程序\",{\"0\":{\"66\":1}}],[\"五\",{\"0\":{\"66\":1},\"2\":{\"66\":1}}],[\"启用整齐打印\",{\"3\":{\"65\":1}}],[\"启动了tomcat\",{\"3\":{\"152\":1}}],[\"启动方法\",{\"3\":{\"149\":1}}],[\"启动\",{\"3\":{\"65\":1}}],[\"启动ssl\",{\"3\":{\"17\":1}}],[\"无法同时编译所有文件\",{\"3\":{\"65\":1}}],[\"无卡启动\",{\"3\":{\"62\":1}}],[\"仅适用于c++基础知识教学\",{\"3\":{\"65\":1}}],[\"仅在头文件中作为借口给c使用\",{\"3\":{\"52\":1}}],[\"文件在workspace中的路径\",{\"3\":{\"67\":1}}],[\"文件自身的绝对路径\",{\"3\":{\"67\":1}}],[\"文件所在的文件夹路径\",{\"3\":{\"65\":4,\"67\":1}}],[\"文件所在的文件夹路径下所有cpp文件\",{\"3\":{\"65\":1}}],[\"文件本身\",{\"3\":{\"65\":1}}],[\"文本文件\",{\"3\":{\"38\":2}}],[\"调试信息\",{\"3\":{\"65\":1}}],[\"颜色\",{\"3\":{\"65\":1}}],[\"终端\",{\"3\":{\"65\":1}}],[\"菜单\",{\"3\":{\"65\":1}}],[\"再次根下tomcatservletwebserverfactory类\",{\"3\":{\"157\":1}}],[\"再次看下创建context对象的地方\",{\"3\":{\"155\":1}}],[\"再由tomcat启动触发容器的创建和启动\",{\"3\":{\"152\":1}}],[\"再用vs\",{\"3\":{\"65\":1}}],[\"再通过target\",{\"3\":{\"50\":1}}],[\"先用g++\",{\"3\":{\"65\":1}}],[\"开启所有警告\",{\"3\":{\"65\":1}}],[\"开发环境配置\",{\"0\":{\"65\":1},\"2\":{\"65\":1}}],[\"开头\",{\"3\":{\"38\":1}}],[\"四层是host元素\",{\"3\":{\"148\":1}}],[\"四\",{\"0\":{\"65\":1,\"153\":1},\"2\":{\"65\":1,\"153\":1}}],[\"里进行调试\",{\"3\":{\"63\":1,\"65\":1}}],[\"欲了解更多信息\",{\"3\":{\"63\":1,\"65\":1}}],[\"悬停以查看现有属性的描述\",{\"3\":{\"63\":1,\"65\":1}}],[\"了解相关属性\",{\"3\":{\"63\":1,\"65\":1}}],[\"打包\",{\"3\":{\"140\":1}}],[\"打印结果\",{\"3\":{\"63\":1}}],[\"打个散烟的比方\",{\"3\":{\"52\":1}}],[\"的详细信息\",{\"3\":{\"117\":1}}],[\"的和\",{\"3\":{\"63\":1}}],[\"的编译过程\",{\"0\":{\"38\":1}}],[\"计算\",{\"3\":{\"63\":1,\"65\":1}}],[\"代码测试\",{\"3\":{\"63\":1}}],[\"代码补全\",{\"3\":{\"62\":1}}],[\"建议conda虚拟环境\",{\"3\":{\"63\":1}}],[\"￥0\",{\"3\":{\"62\":1}}],[\"中变量解释\",{\"0\":{\"67\":1},\"2\":{\"67\":1}}],[\"中文菜单\",{\"3\":{\"62\":1}}],[\"中的\",{\"0\":{\"52\":1},\"2\":{\"52\":1}}],[\"依赖和链接opencv与常规的添加依赖并没有太多不同\",{\"3\":{\"61\":1}}],[\"依赖项b链接到目标a\",{\"3\":{\"52\":1}}],[\"依赖项b并不链接到目标a\",{\"3\":{\"52\":1}}],[\"依赖项b仅链接到目标a\",{\"3\":{\"52\":1}}],[\"三层是engine元素\",{\"3\":{\"148\":1}}],[\"三\",{\"0\":{\"61\":1,\"64\":1,\"150\":1},\"2\":{\"61\":1,\"64\":1,\"150\":1}}],[\"适用于导入自己开发的cmake项目\",{\"3\":{\"60\":1}}],[\"适用于导入非cmake安装的项目\",{\"3\":{\"60\":1}}],[\"假设我们编写了一个新的函数库\",{\"3\":{\"60\":1}}],[\"表示workspace的文件夹名\",{\"3\":{\"67\":1}}],[\"表示当前workspace文件夹路径\",{\"3\":{\"67\":1}}],[\"表示库文件目录\",{\"3\":{\"60\":1}}],[\"表示头文件目录\",{\"3\":{\"60\":1}}],[\"表示是否找到\",{\"3\":{\"60\":1}}],[\"库作者设置\",{\"3\":{\"60\":1}}],[\"库和头文件的能力\",{\"3\":{\"42\":1}}],[\"均可以通过find\",{\"3\":{\"60\":1}}],[\"对tomcat版本有要求\",{\"3\":{\"161\":1}}],[\"对于大部分支持了cmake的项目来说\",{\"3\":{\"60\":1}}],[\"对新分区\",{\"3\":{\"31\":1}}],[\"寻找依赖\",{\"0\":{\"60\":1},\"2\":{\"60\":1}}],[\"非常有用\",{\"3\":{\"59\":1}}],[\"非0数字\",{\"3\":{\"55\":1}}],[\"实现完以上步骤\",{\"3\":{\"154\":1}}],[\"实现servletcontainerinitializer接口的onstartup方法\",{\"3\":{\"154\":1}}],[\"实现安装的功能在你需要发布你项目给其他人使用时\",{\"3\":{\"59\":1}}],[\"实现通过vpn访问github\",{\"3\":{\"10\":1}}],[\"作为前缀\",{\"3\":{\"59\":1}}],[\"公司的tomcat8不支持配置errorcode\",{\"3\":{\"161\":1}}],[\"公司devops体系搭建\",{\"0\":{\"5\":1},\"2\":{\"5\":1}}],[\"公共头文件\",{\"3\":{\"59\":1}}],[\"公共头文件安装在include\",{\"3\":{\"59\":1}}],[\"并执行initializers每一个实例的onstartup方法\",{\"3\":{\"157\":1}}],[\"并执行其load和start方法\",{\"3\":{\"148\":1}}],[\"并将servlet容器的装饰类\",{\"3\":{\"154\":1}}],[\"并初始化其内部的server对象\",{\"3\":{\"152\":1}}],[\"并传入start参数\",{\"3\":{\"148\":1}}],[\"并分别将可执行文件安装在bin中\",{\"3\":{\"59\":1}}],[\"并有很多关键字来引导命令的参数输入\",{\"3\":{\"47\":1}}],[\"下面的代码片段中\",{\"3\":{\"59\":1}}],[\"下载\",{\"3\":{\"42\":1}}],[\"下载地址\",{\"3\":{\"19\":1,\"62\":1}}],[\"函数名为second\",{\"3\":{\"58\":1}}],[\"函数和宏\",{\"0\":{\"58\":1},\"2\":{\"58\":1}}],[\"定义一个函数\",{\"3\":{\"58\":1}}],[\"定义一个宏\",{\"3\":{\"58\":1}}],[\"宏内部变量test\",{\"3\":{\"58\":1}}],[\"宏内部的信息\",{\"3\":{\"58\":1}}],[\"宏名为my\",{\"3\":{\"58\":1}}],[\"比如需要在install和build环节分别用不同的参数\",{\"3\":{\"57\":1}}],[\"判断当前构建类型是否为debug\",{\"3\":{\"57\":1}}],[\"判断目标是否存在\",{\"3\":{\"57\":1}}],[\"否则返回空字符串\",{\"3\":{\"57\":1}}],[\"条件表达式\",{\"3\":{\"57\":2}}],[\"条件控制\",{\"0\":{\"55\":1},\"2\":{\"55\":1}}],[\"尖括号中间可以是如下几种类型\",{\"3\":{\"57\":1}}],[\">print\",{\"3\":{\"118\":1}}],[\">=\",{\"3\":{\"117\":2,\"118\":1}}],[\">>>\",{\"3\":{\"156\":2}}],[\">>\",{\"3\":{\"66\":1,\"156\":1,\"157\":1}}],[\">仅在install环节生效\",{\"3\":{\"57\":1}}],[\">仅在build环节生效\",{\"3\":{\"57\":1}}],[\">\",{\"3\":{\"57\":3,\"118\":3,\"148\":1,\"149\":1,\"157\":1,\"161\":4}}],[\">log\",{\"3\":{\"12\":1}}],[\"输出gc的时间戳\",{\"3\":{\"117\":1}}],[\"输出gc的详细日志\",{\"3\":{\"117\":1}}],[\"输出结果\",{\"3\":{\"65\":1}}],[\"输出相关表达式\",{\"3\":{\"57\":1}}],[\"输出相关的表达式\",{\"3\":{\"57\":1}}],[\"输出二进制文件\",{\"3\":{\"56\":1}}],[\"输出汇编代码\",{\"3\":{\"56\":1}}],[\"输出\",{\"3\":{\"56\":1,\"65\":1}}],[\"输入g++\",{\"3\":{\"38\":1}}],[\"空字符串\",{\"3\":{\"55\":1}}],[\"空密码\",{\"3\":{\"17\":1}}],[\"除了可以设置变量以外\",{\"3\":{\"55\":1}}],[\"应该把cmake当成编程语言\",{\"3\":{\"55\":1}}],[\"正如前面所讲\",{\"3\":{\"55\":1}}],[\"有两个参数\",{\"3\":{\"58\":1}}],[\"有时用它可以让代码更加精简\",{\"3\":{\"57\":1}}],[\"有时候我们通过变量来判断我们在什么平台上\",{\"3\":{\"53\":1}}],[\"有些时候有一些常用库我们也不用手动添加头文件或链接库路径\",{\"3\":{\"41\":1}}],[\"信息\",{\"3\":{\"53\":1}}],[\"像其他编程语言一样\",{\"3\":{\"53\":1}}],[\"变量查询\",{\"3\":{\"57\":2}}],[\"变量\",{\"0\":{\"53\":1},\"2\":{\"53\":1}}],[\"所有实现了servletcontextinitializer接口的bean都能拿到servletcontext对象\",{\"3\":{\"157\":1}}],[\"所以spring搞了一个自己的接口servletcontextinitializer并且内部也有一个待实现的方法onstartup\",{\"3\":{\"157\":1}}],[\"所以看下standardcontext类\",{\"3\":{\"156\":1}}],[\"所以引发了一个问题\",{\"3\":{\"154\":1}}],[\"所以会执行lifecyclebase的start方法\",{\"3\":{\"148\":1}}],[\"所以会执行lifecyclebase的init方法\",{\"3\":{\"148\":1}}],[\"所以不能通过解析配置cmakelists\",{\"3\":{\"57\":1}}],[\"所以d不会传播到a\",{\"3\":{\"52\":1}}],[\"所以c会传播到a\",{\"3\":{\"52\":1}}],[\"所谓静态和动态\",{\"3\":{\"39\":1}}],[\"因此我们可以通过find\",{\"3\":{\"61\":1}}],[\"因此生成的文件比较大\",{\"3\":{\"39\":1}}],[\"因为d是b的private依赖性\",{\"3\":{\"52\":1}}],[\"因为c是b的public依赖项\",{\"3\":{\"52\":1}}],[\"创建webserver对象时启动的\",{\"3\":{\"159\":1}}],[\"创建web服务\",{\"3\":{\"151\":1}}],[\"创建了servletcontainerinitializer的实现类tomcatstarter最终拿到tomcat容器对象\",{\"3\":{\"159\":1}}],[\"创建了servletcontainerinitializer的实现类\",{\"3\":{\"155\":1}}],[\"创建servlet容器\",{\"3\":{\"155\":1}}],[\"创建tomcat启动类\",{\"3\":{\"152\":1}}],[\"创建类\",{\"0\":{\"80\":1},\"2\":{\"80\":1}}],[\"创建库\",{\"3\":{\"52\":1}}],[\"创建一个名为main的新分支\",{\"3\":{\"9\":1}}],[\"举例\",{\"3\":{\"52\":1}}],[\"使用\",{\"3\":{\"63\":1,\"65\":1}}],[\"使用find\",{\"3\":{\"60\":1}}],[\"使用install安装\",{\"3\":{\"60\":1}}],[\"使用install安装demo\",{\"3\":{\"59\":1}}],[\"使用interface\",{\"3\":{\"52\":1}}],[\"使用public\",{\"3\":{\"52\":1}}],[\"使用private\",{\"3\":{\"52\":1}}],[\"使用g++等编译工具\",{\"3\":{\"38\":1}}],[\"且不在头文件中提供给c使用\",{\"3\":{\"52\":1}}],[\"给别人抽\",{\"3\":{\"52\":1}}],[\"为什么要这样做呢\",{\"3\":{\"157\":1}}],[\"为什么需要cmake\",{\"0\":{\"40\":1},\"2\":{\"40\":1}}],[\"为\",{\"3\":{\"65\":1}}],[\"为false的常量\",{\"3\":{\"55\":1}}],[\"为true的常量\",{\"3\":{\"55\":1}}],[\"为例\",{\"3\":{\"52\":1,\"67\":1}}],[\"类似的命令\",{\"3\":{\"52\":1}}],[\"类似函数传参\",{\"3\":{\"47\":1}}],[\"也就是tomcat启动的位置\",{\"3\":{\"157\":1}}],[\"也就是容器对象启动后\",{\"3\":{\"156\":1}}],[\"也就是说我们写的实现类在实现onstartup的方法中就可以调用servletcontext的addservlet方法完成servlet的注册了\",{\"3\":{\"154\":1}}],[\"也即tasks\",{\"3\":{\"67\":1}}],[\"也即test\",{\"3\":{\"67\":1}}],[\"也即\",{\"3\":{\"67\":5}}],[\"也是我喜欢的数字\",{\"3\":{\"66\":1}}],[\"也通过变量来决定添加哪些依赖\",{\"3\":{\"53\":1}}],[\"也在头文件中提供给c使用\",{\"3\":{\"52\":1}}],[\"也给别人抽\",{\"3\":{\"52\":1}}],[\"也可以用一个cmakelists\",{\"3\":{\"51\":1}}],[\"也不方便调试和编辑\",{\"3\":{\"41\":1}}],[\"当作入参传入onstartup方法\",{\"3\":{\"154\":1}}],[\"当service的start方法被调用后需要执行其下engine的init方法和start方法以此类推一直到调用完context的init方法和start方法\",{\"3\":{\"148\":1}}],[\"当前配置的环境主要为了演示c++基础知识教学\",{\"3\":{\"65\":1}}],[\"当前文件光标所在的行号\",{\"3\":{\"67\":1}}],[\"当前文件的后缀\",{\"3\":{\"67\":1}}],[\"当前文件的文件名\",{\"3\":{\"65\":2,\"67\":2}}],[\"当前文件\",{\"3\":{\"63\":1,\"65\":1}}],[\"当需要发布项目时你需要指定项目文件的安装路径\",{\"3\":{\"59\":1}}],[\"当condition为真时\",{\"3\":{\"57\":1}}],[\"当然\",{\"3\":{\"51\":1}}],[\"当我们的项目文件变得多起来\",{\"3\":{\"41\":1}}],[\"当我们需要引入外部库时\",{\"3\":{\"41\":1}}],[\"当我们编译附件中1\",{\"3\":{\"41\":1}}],[\"更多介绍参考下节\",{\"3\":{\"50\":1}}],[\"更多底层的知识需要单独进行深入讲解\",{\"3\":{\"39\":1}}],[\"通用方法\",{\"0\":{\"81\":1},\"2\":{\"81\":1}}],[\"通过实现webserverfactorycustomizer接口来可以个性化tomcat配置\",{\"3\":{\"160\":1}}],[\"通过servletwebserverfactoryautoconfiguration导入beanpostprocessorsregistrar\",{\"3\":{\"160\":1}}],[\"通过servletwebserverfactoryconfiguration完成tomcatservletwebserverfactory注入\",{\"3\":{\"152\":1}}],[\"通过对tomcatstarter的onstartup方法的分析可以知道\",{\"3\":{\"157\":1}}],[\"通过load方法可以知道server内部有一组service\",{\"3\":{\"148\":1}}],[\"通过反射构建catalina对象\",{\"3\":{\"148\":1}}],[\"通过设定不同阶段不同的参数\",{\"3\":{\"57\":1}}],[\"通过变量来判断我们需要编译哪些target\",{\"3\":{\"53\":1}}],[\"通过target\",{\"3\":{\"50\":2}}],[\"通常用小写\",{\"3\":{\"47\":1}}],[\"通常在测试单个文件时会使用命令行进行编译\",{\"3\":{\"41\":1}}],[\"通常g++能在默认查询路径中找到他们\",{\"3\":{\"41\":1}}],[\"通常禁止了用户名密码登录之后\",{\"3\":{\"26\":1}}],[\"例如\",{\"3\":{\"50\":1}}],[\"例子中用的是first\",{\"3\":{\"48\":1}}],[\"└──\",{\"3\":{\"50\":7,\"51\":2}}],[\"│\",{\"3\":{\"50\":8,\"51\":1}}],[\"├──\",{\"3\":{\"50\":9,\"51\":3}}],[\"静态库\",{\"3\":{\"59\":1}}],[\"静态库文件\",{\"3\":{\"50\":1}}],[\"静态链接库名称一般是lib库名称\",{\"3\":{\"39\":1}}],[\"静态链接库和动态链接库\",{\"0\":{\"39\":1},\"2\":{\"39\":1}}],[\"会在build下生成\",{\"3\":{\"50\":1,\"51\":1}}],[\"会对\",{\"3\":{\"38\":1}}],[\"与使用的语言\",{\"3\":{\"48\":1}}],[\"介绍\",{\"1\":{\"103\":1,\"104\":1,\"105\":1,\"106\":1},\"3\":{\"48\":1}}],[\"版本\",{\"3\":{\"48\":1}}],[\"版本的值在关键字之后\",{\"3\":{\"47\":1}}],[\"命令行会有如下输出\",{\"3\":{\"61\":1}}],[\"命令行编译这种方式就会变得十分臃肿\",{\"3\":{\"41\":1}}],[\"命令行编译\",{\"0\":{\"41\":1},\"2\":{\"41\":1}}],[\"命令中第一个参数后面的参数都是编译目标所使用到的源文件\",{\"3\":{\"49\":1}}],[\"命令cmake\",{\"3\":{\"47\":1}}],[\"添加链接库\",{\"3\":{\"51\":1}}],[\"添加头文件\",{\"3\":{\"51\":1}}],[\"添加头文件目录\",{\"3\":{\"50\":1}}],[\"添加可执行文件\",{\"3\":{\"51\":1,\"52\":1}}],[\"添加可执行文件目标\",{\"0\":{\"49\":1},\"2\":{\"49\":1}}],[\"添加动态库\",{\"3\":{\"51\":2}}],[\"添加库文件的目录即可\",{\"3\":{\"50\":1}}],[\"添加库文件目录\",{\"3\":{\"50\":2}}],[\"添加目标链接库\",{\"3\":{\"50\":1}}],[\"添加执行文件\",{\"3\":{\"50\":1}}],[\"添加静态库\",{\"3\":{\"50\":1}}],[\"添加一个可执行程序\",{\"3\":{\"47\":1}}],[\"添加如下内容\",{\"3\":{\"34\":1}}],[\"项目名称\",{\"3\":{\"50\":1}}],[\"项目信息\",{\"3\":{\"50\":1,\"51\":1}}],[\"项目描述\",{\"3\":{\"47\":1,\"48\":1}}],[\"项目经历\",{\"0\":{\"4\":1},\"2\":{\"4\":1}}],[\"最后看下getservletcontext方法\",{\"3\":{\"156\":1}}],[\"最终实现了所有实现servletcontextinitializer接口的bean都能拿到tomcat容器\",{\"3\":{\"159\":1}}],[\"最终调用server对象的start方法来完成启动的\",{\"3\":{\"159\":1}}],[\"最终由该类完成dispatcherservlet向tomcat容器的注册\",{\"3\":{\"158\":1}}],[\"最终会将servletcontextinitializer传入tomcatstarter的构造函数\",{\"3\":{\"157\":1}}],[\"最终会通过tomcatservletwebserverfactory工厂类构建webserver对象\",{\"3\":{\"152\":1}}],[\"最终这个私有方法会被调用\",{\"3\":{\"157\":1}}],[\"最终借助tomcatstarter类中的onstartup完成了实现\",{\"3\":{\"157\":1}}],[\"最终将applicationcontext对象暴露给servletcontainerinitializer实现类\",{\"3\":{\"156\":1}}],[\"最终将tomcat对象封装到tomcatwebserver中返回\",{\"3\":{\"152\":1}}],[\"最终在解析完web\",{\"3\":{\"154\":1}}],[\"最终可以发现内嵌tomcat本质上和catalina对象一样\",{\"3\":{\"149\":1}}],[\"最终各个元素的init和start方法都被执行了一遍\",{\"3\":{\"148\":1}}],[\"最终又回到了server的start方法此时init方法已经执行完了\",{\"3\":{\"148\":1}}],[\"最终解析时会去tomcat根目录下的webapps文件中找web\",{\"3\":{\"148\":1}}],[\"最终其被解析server对象\",{\"3\":{\"148\":1}}],[\"最终生成可执行程序\",{\"3\":{\"38\":1}}],[\"最低版本要求\",{\"3\":{\"50\":2,\"51\":1}}],[\"最低版本号要求\",{\"3\":{\"47\":1}}],[\"语法基础\",{\"0\":{\"46\":1},\"2\":{\"46\":1}}],[\"运行catalina\",{\"3\":{\"148\":1}}],[\"运行生成任务生成可执行文件\",{\"3\":{\"65\":1}}],[\"运行\",{\"3\":{\"45\":1,\"56\":1}}],[\"配置上下文\",{\"3\":{\"152\":1}}],[\"配置cmake后\",{\"3\":{\"61\":1}}],[\"配置\",{\"0\":{\"125\":1},\"2\":{\"125\":1},\"3\":{\"45\":1}}],[\"验证\",{\"3\":{\"44\":1,\"140\":1}}],[\"你使用`\",{\"3\":{\"44\":1}}],[\"二层是service元素\",{\"3\":{\"148\":1}}],[\"二\",{\"0\":{\"43\":1,\"63\":1,\"149\":1},\"2\":{\"43\":1,\"63\":1,\"149\":1}}],[\"几乎支持所有的ide\",{\"3\":{\"42\":1}}],[\"从spring容器中获取tomcatservletwebserverfactory如果没注入则直接进行注入\",{\"3\":{\"151\":1}}],[\"从使用的角度来说\",{\"3\":{\"52\":1}}],[\"从理解的角度来看\",{\"3\":{\"52\":1}}],[\"从简单的文本文件\",{\"3\":{\"42\":1}}],[\"从源码生成最终的可执行文件一般有这几步\",{\"3\":{\"38\":1}}],[\"自动生成工作区和项目的能力\",{\"3\":{\"42\":1}}],[\"自动搜索可能需要的程序\",{\"3\":{\"42\":1}}],[\"自定义配置可选组件\",{\"3\":{\"42\":1}}],[\"生成活动文件\",{\"3\":{\"65\":2}}],[\"生成<libraryname>config\",{\"3\":{\"60\":1}}],[\"生成文件的方式间接测试\",{\"3\":{\"57\":1}}],[\"生成表达式被展开是在生成构建系统的时候\",{\"3\":{\"57\":1}}],[\"生成器表达式是$<\",{\"3\":{\"57\":1}}],[\"生成器表达式简单来说就是在cmake生成构建系统的时候根据不同配置动态生成特定的内容\",{\"3\":{\"57\":1}}],[\"生成器表达式\",{\"0\":{\"57\":1},\"2\":{\"57\":1}}],[\"生成动态库\",{\"3\":{\"51\":1}}],[\"生成动态库并连接\",{\"0\":{\"51\":1},\"2\":{\"51\":1}}],[\"生成静态库\",{\"3\":{\"50\":1}}],[\"生成静态库并链接\",{\"0\":{\"50\":1},\"2\":{\"50\":1}}],[\"生成\",{\"3\":{\"45\":1}}],[\"生成各种文件\",{\"3\":{\"42\":1}}],[\"生产目录位于c\",{\"3\":{\"23\":1}}],[\"支持复杂的自定义命令\",{\"3\":{\"42\":1}}],[\"可执行文件\",{\"3\":{\"59\":1}}],[\"可执行文件或库\",{\"3\":{\"39\":1}}],[\"可以看到该类实现了servletcontextinitializer接口也就是其能拿到tomcat容器对象\",{\"3\":{\"158\":1}}],[\"可以看到自动装配时向spring容器中注册了dispatcherservletregistrationbean类\",{\"3\":{\"158\":1}}],[\"可以看出如果tomcatstarter中的onstartup方法能调用到该方法\",{\"3\":{\"157\":1}}],[\"可以用类似file\",{\"3\":{\"57\":1}}],[\"可以打开滑到底部\",{\"3\":{\"56\":1}}],[\"可以和条件一起使用的关键词有\",{\"3\":{\"55\":1}}],[\"可以安全清理\",{\"3\":{\"42\":1}}],[\"如pytorch\",{\"3\":{\"63\":1,\"65\":1}}],[\"如果cmake找到了opencv\",{\"3\":{\"61\":1}}],[\"如果找到\",{\"3\":{\"60\":1}}],[\"如果不设置cmake\",{\"3\":{\"59\":1}}],[\"如果不添加\",{\"3\":{\"50\":3}}],[\"如果b既用于a的实现\",{\"3\":{\"52\":1}}],[\"如果b不用于a的实现\",{\"3\":{\"52\":1}}],[\"如果b仅用于a的实现\",{\"3\":{\"52\":1}}],[\"如果有c链接了目标a\",{\"3\":{\"52\":1}}],[\"如果有c\",{\"3\":{\"52\":3}}],[\"如build\",{\"3\":{\"42\":1}}],[\"如附件中的2\",{\"3\":{\"41\":1}}],[\"独立的构建目录\",{\"3\":{\"42\":1}}],[\"特性\",{\"3\":{\"42\":1}}],[\"测试\",{\"3\":{\"140\":1}}],[\"测试代码main\",{\"3\":{\"65\":1}}],[\"测试代码demo\",{\"3\":{\"63\":1}}],[\"测试和软件打包的开源跨平台工具\",{\"3\":{\"42\":1}}],[\"测试输出\",{\"3\":{\"41\":1}}],[\"但是startinternal方法是由其父类standardcontext实现的\",{\"3\":{\"156\":1}}],[\"但是和web\",{\"3\":{\"155\":1}}],[\"但此时还没指定库文件的目录\",{\"3\":{\"50\":1}}],[\"但不推荐在一个实际项目中使用命令行编译\",{\"3\":{\"41\":1}}],[\"但在运行时也就不再需要库文件了\",{\"3\":{\"39\":1}}],[\"引入的外部库也多起来时\",{\"3\":{\"41\":1}}],[\"用于完成servlet\",{\"3\":{\"158\":1}}],[\"用于封装tomcat对象\",{\"3\":{\"152\":1}}],[\"用于保存所有servletcontainerinitializer的实现类\",{\"3\":{\"156\":1}}],[\"用于保存catalina对象\",{\"3\":{\"148\":1}}],[\"用于保存bootstrap实例\",{\"3\":{\"148\":1}}],[\"用于在不同的环节使用不同参数\",{\"3\":{\"57\":1}}],[\"用于查找和管理安装在系统上的库文件\",{\"3\":{\"41\":1}}],[\"用户名=密码\",{\"3\":{\"17\":1}}],[\"或者去掉`\",{\"3\":{\"44\":1}}],[\"或者编译安装\",{\"3\":{\"44\":1}}],[\"或者\",{\"3\":{\"41\":1}}],[\"安装教程\",{\"3\":{\"116\":1}}],[\"安装环境\",{\"0\":{\"109\":1},\"2\":{\"109\":1}}],[\"安装python环境\",{\"0\":{\"107\":1},\"2\":{\"107\":1}}],[\"安装pkg\",{\"3\":{\"41\":1}}],[\"安装cmake\",{\"3\":{\"64\":1}}],[\"安装git\",{\"0\":{\"108\":1},\"2\":{\"108\":1}}],[\"安装gdb\",{\"3\":{\"64\":1}}],[\"安装g++\",{\"3\":{\"64\":1}}],[\"安装gcc\",{\"3\":{\"64\":1}}],[\"安装gflags\",{\"3\":{\"41\":1}}],[\"安装opencv\",{\"3\":{\"61\":1}}],[\"安装ms\",{\"3\":{\"45\":1}}],[\"安装twxs\",{\"3\":{\"45\":1}}],[\"安装在默认路径\",{\"3\":{\"44\":1}}],[\"安装\",{\"0\":{\"44\":1},\"2\":{\"44\":1}}],[\"安装包github下载地址https\",{\"3\":{\"12\":1,\"14\":1}}],[\"以此类推最终所有元素的start方法会被执行\",{\"3\":{\"148\":1}}],[\"以此类推最终所有元素的init方法会被调用并且状态变成了lifecyclestate\",{\"3\":{\"148\":1}}],[\"以此类推\",{\"3\":{\"148\":2}}],[\"以基准时间的形式\",{\"3\":{\"117\":1}}],[\"以\",{\"3\":{\"67\":1}}],[\"以target\",{\"3\":{\"52\":1}}],[\"以附件\",{\"3\":{\"47\":1,\"48\":1,\"49\":1}}],[\"以v3\",{\"3\":{\"44\":1}}],[\"以上只是非常简单的一个解释以区分动态链接库和静态链接库\",{\"3\":{\"39\":1}}],[\"以下图为例\",{\"3\":{\"39\":1}}],[\"以下面程序为例\",{\"3\":{\"38\":1}}],[\"共享\",{\"3\":{\"39\":1}}],[\"工厂类中会创建tomcat对象\",{\"3\":{\"152\":1}}],[\"工程a和b依赖动态链接库\",{\"3\":{\"39\":1}}],[\"工程a和b依赖静态链接库\",{\"3\":{\"39\":1}}],[\"工作内容\",{\"0\":{\"6\":1},\"2\":{\"6\":1}}],[\"工作业绩\",{\"0\":{\"2\":1,\"7\":1},\"2\":{\"2\":1,\"7\":1}}],[\"工作经历\",{\"0\":{\"1\":1},\"2\":{\"1\":1}}],[\"多个程序依赖它时\",{\"3\":{\"39\":1}}],[\"动态链接库和静态链接库都安装在lib\",{\"3\":{\"59\":1}}],[\"动态链接库加载后\",{\"3\":{\"39\":1}}],[\"动态库\",{\"3\":{\"59\":1}}],[\"动态库文件\",{\"3\":{\"51\":1}}],[\"动态库一般后缀名为\",{\"3\":{\"39\":1}}],[\"这次主要看servletcontextinitializer实例的传递过程\",{\"3\":{\"157\":1}}],[\"这次下这个方法\",{\"3\":{\"155\":1}}],[\"这个方法里没有任何servlet的添加操作\",{\"3\":{\"157\":1}}],[\"这个方法巨长无比\",{\"3\":{\"156\":1}}],[\"这个方法之前没根\",{\"3\":{\"155\":1}}],[\"这个类有很多方法\",{\"3\":{\"154\":1}}],[\"这些接口会在tomcatservletwebserverfactory的构造器中被调用\",{\"3\":{\"152\":1}}],[\"这里来配置servlet\",{\"3\":{\"158\":1}}],[\"这里可以看到servletcontext\",{\"3\":{\"158\":1}}],[\"这里可以知道容器最终把自己封装到了applicationcontext对象中\",{\"3\":{\"156\":1}}],[\"这里创建了dispatcherservlet类\",{\"3\":{\"158\":1}}],[\"这里做了依次封装\",{\"3\":{\"157\":1}}],[\"这里servletcontextinitializer实例被传入\",{\"3\":{\"157\":1}}],[\"这里将servletcontextinitializer实例传入到了tomcatservletwebserverfactory中\",{\"3\":{\"157\":1}}],[\"这里将上述的私有方法封装成了一个servletcontextinitializer实例\",{\"3\":{\"157\":1}}],[\"这里通过factory完成了webserver的创建\",{\"3\":{\"157\":1}}],[\"这里拿到容器中所有实现了servletcontextinitializer接口的bean并依次执行其onstartup方法\",{\"3\":{\"157\":1}}],[\"这里调用了onstartup方法\",{\"3\":{\"156\":1}}],[\"这里直接将其放入到了容器中\",{\"3\":{\"155\":1}}],[\"这里直接new对象了\",{\"3\":{\"149\":1}}],[\"这里就是内嵌tomcat的启动时机\",{\"3\":{\"152\":1}}],[\"这里就是调用了catalina对象的load方法\",{\"3\":{\"148\":1}}],[\"这里启动了tomcat\",{\"3\":{\"152\":1}}],[\"这里有一个状态变更即元素的state状态由lifecyclestate\",{\"3\":{\"148\":1}}],[\"这里会发生状态变更\",{\"3\":{\"148\":1}}],[\"这里会运行bootstrap的main方法\",{\"3\":{\"148\":1}}],[\"这里提到的每一个对象都有init方法和start方法\",{\"3\":{\"148\":1}}],[\"这里蕴含这一个设计模式值得一提\",{\"3\":{\"148\":1}}],[\"这里把catalina对象赋予了全局变量catalinadaemon\",{\"3\":{\"148\":1}}],[\"这里初始化了全局变量\",{\"3\":{\"148\":1}}],[\"这里\",{\"3\":{\"148\":1}}],[\"这里的路径都将添加$\",{\"3\":{\"59\":1}}],[\"这里我们用到add\",{\"3\":{\"49\":1,\"50\":1}}],[\"这样也节省了内存的空间\",{\"3\":{\"39\":1}}],[\"这样可以节省系统的开销\",{\"3\":{\"39\":1}}],[\"这一步需要我们添加所有头文件的引用路径\",{\"3\":{\"38\":1}}],[\"而springmvc的核心类就是dispatcherservlet\",{\"3\":{\"158\":1}}],[\"而springboot项目中并没有web\",{\"3\":{\"154\":1}}],[\"而servletcontainerinitializer接口并不是spring的类\",{\"3\":{\"157\":1}}],[\"而是将servletcontext对象再次传给了servletcontextinitializer的实现类去完成后续工作\",{\"3\":{\"157\":1}}],[\"而是便利了initializers\",{\"3\":{\"157\":1}}],[\"而现在的启动类是容器\",{\"3\":{\"152\":1}}],[\"而$<install\",{\"3\":{\"57\":1}}],[\"而不进行真正的链接\",{\"3\":{\"39\":1}}],[\"而动态链接库的链接发生在程序的执行过程中\",{\"3\":{\"39\":1}}],[\"其实原因很简单\",{\"3\":{\"157\":1}}],[\"其实与写javax\",{\"3\":{\"155\":1}}],[\"其实每个host对象还对应一组context对象也就是我们常说的servlet容器\",{\"3\":{\"148\":1}}],[\"其实就是对象属性的传递\",{\"3\":{\"52\":1}}],[\"其中新增servlet的就有3个重载方法\",{\"3\":{\"154\":1}}],[\"其中start是模板类的核心方法\",{\"3\":{\"148\":1}}],[\"其中$<build\",{\"3\":{\"57\":1}}],[\"其中第一个参数是最终生成的可执行文件名以及在cmake中定义的target名\",{\"3\":{\"49\":1}}],[\"其中id\",{\"3\":{\"23\":1}}],[\"其他关键字都有参数\",{\"3\":{\"48\":1}}],[\"其在编译环节仅执行链接检查\",{\"3\":{\"39\":1}}],[\"其输出的库或可执行文件会将静态链接库\",{\"3\":{\"39\":1}}],[\"其链接发生在编译环节\",{\"3\":{\"39\":1}}],[\"其区别是链接的阶段不一样\",{\"3\":{\"39\":1}}],[\"合成一个可执行文件\",{\"3\":{\"38\":1}}],[\"检查完毕后把代码翻译成汇编语言文件\",{\"3\":{\"38\":1}}],[\"检查代码的规范性和语法错误等\",{\"3\":{\"38\":1}}],[\"检测分区\",{\"0\":{\"32\":1},\"2\":{\"32\":1}}],[\"第二个参数\",{\"3\":{\"58\":1}}],[\"第二个参数是用于指定链接库为动态链接库\",{\"3\":{\"50\":1}}],[\"第二步\",{\"3\":{\"38\":1,\"45\":1}}],[\"第一个c++程序\",{\"2\":{\"66\":1}}],[\"第一个c\",{\"0\":{\"66\":1}}],[\"第一个cmake例子\",{\"0\":{\"45\":1},\"2\":{\"45\":1}}],[\"第一个参数\",{\"3\":{\"58\":1}}],[\"第一个projectname\",{\"3\":{\"48\":1}}],[\"第一步\",{\"3\":{\"38\":1,\"45\":1}}],[\"第四步\",{\"3\":{\"38\":1}}],[\"第三步\",{\"3\":{\"38\":1}}],[\"递归处理\",{\"3\":{\"38\":1}}],[\"处理\",{\"3\":{\"38\":1}}],[\"<>\",{\"3\":{\"161\":2}}],[\"<valve\",{\"3\":{\"161\":1}}],[\"<version>3\",{\"3\":{\"145\":1,\"146\":2}}],[\"<version>2\",{\"3\":{\"143\":1,\"144\":1,\"146\":1}}],[\"<engine\",{\"3\":{\"161\":1}}],[\"<execution>\",{\"3\":{\"144\":1}}],[\"<executions>\",{\"3\":{\"144\":1}}],[\"<conection\",{\"3\":{\"161\":1}}],[\"<configuration>\",{\"3\":{\"146\":3}}],[\"<custombundle>src\",{\"3\":{\"146\":1}}],[\"<forkcount>1<\",{\"3\":{\"146\":1}}],[\"<filename>\",{\"3\":{\"117\":3,\"118\":1}}],[\"<file>\",{\"3\":{\"38\":2}}],[\"<redirecttestoutputtofile>true<\",{\"3\":{\"146\":2}}],[\"<reportformat>xml<\",{\"3\":{\"146\":1}}],[\"<reporting>\",{\"3\":{\"145\":2}}],[\"<reuseforks>false<\",{\"3\":{\"146\":1}}],[\"<testfailureignore>true<\",{\"3\":{\"146\":1}}],[\"<lifecycle>\",{\"3\":{\"146\":1}}],[\"<lifecycles>\",{\"3\":{\"146\":1}}],[\"<libaryname>\",{\"3\":{\"60\":3}}],[\"<goal>verify<\",{\"3\":{\"144\":1}}],[\"<goal>integration\",{\"3\":{\"144\":1}}],[\"<goals>\",{\"3\":{\"144\":1}}],[\"<groupid>org\",{\"3\":{\"143\":1,\"144\":1,\"145\":1,\"146\":3}}],[\"<artifactid>maven\",{\"3\":{\"143\":1,\"144\":1,\"145\":1,\"146\":3}}],[\"<phase>\",{\"3\":{\"146\":1}}],[\"<phases>\",{\"3\":{\"146\":1}}],[\"<plugin>\",{\"3\":{\"143\":1,\"144\":1,\"145\":1,\"146\":3}}],[\"<plugins>\",{\"3\":{\"143\":1,\"144\":1,\"145\":1}}],[\"<pluginmanagement>\",{\"3\":{\"143\":1}}],[\"<project>\",{\"3\":{\"143\":1,\"144\":1,\"145\":1}}],[\"<build>\",{\"3\":{\"143\":1,\"144\":1}}],[\"<id>test<\",{\"3\":{\"146\":1}}],[\"<id>surefire<\",{\"3\":{\"146\":1}}],[\"<i>\",{\"3\":{\"118\":1}}],[\"<iostream>\",{\"3\":{\"38\":1,\"65\":1,\"66\":1}}],[\"<numberofgclogfiles\",{\"3\":{\"118\":1}}],[\"<\",{\"3\":{\"65\":1,\"118\":1,\"143\":5,\"144\":7,\"145\":4,\"146\":10,\"161\":1}}],[\"<<\",{\"3\":{\"38\":2,\"65\":2,\"66\":4}}],[\"链接了a\",{\"3\":{\"52\":3}}],[\"链接\",{\"3\":{\"38\":2,\"50\":1,\"51\":1,\"56\":1}}],[\"汇编\",{\"3\":{\"38\":2,\"56\":1}}],[\"预处理\",{\"3\":{\"38\":2,\"56\":1}}],[\"一堆servletcontextinitializer接口的实现类\",{\"3\":{\"157\":1}}],[\"一样的逻辑\",{\"3\":{\"149\":1}}],[\"一样的道理\",{\"3\":{\"149\":1}}],[\"一层也就是根节点是server元素\",{\"3\":{\"148\":1}}],[\"一条条简单的命令\",{\"3\":{\"140\":1}}],[\"一般都会有以下变量\",{\"3\":{\"60\":1}}],[\"一般这样的命令支持通过public\",{\"3\":{\"52\":1}}],[\"一个工程如果依赖一个静态链接库\",{\"3\":{\"39\":1}}],[\"一\",{\"0\":{\"37\":1,\"62\":1,\"148\":1},\"2\":{\"37\":1,\"62\":1,\"148\":1}}],[\"取消挂载\",{\"3\":{\"34\":1}}],[\"编写一个find<libraryname>\",{\"3\":{\"60\":1}}],[\"编辑\",{\"3\":{\"34\":1}}],[\"编译器\",{\"3\":{\"65\":1}}],[\"编译动态库后\",{\"3\":{\"51\":1}}],[\"编译后目录如下\",{\"3\":{\"50\":1}}],[\"编译静态库后\",{\"3\":{\"50\":1}}],[\"编译\",{\"0\":{\"19\":1},\"2\":{\"19\":1},\"3\":{\"38\":2,\"56\":1,\"140\":1}}],[\"磁盘挂载\",{\"0\":{\"34\":1},\"2\":{\"34\":1}}],[\"磁盘分区与挂载\",{\"0\":{\"28\":1},\"2\":{\"28\":1}}],[\"^`\",{\"3\":{\"161\":4}}],[\"^\",{\"3\":{\"33\":1}}],[\"移动文件包含隐藏文件\",{\"3\":{\"33\":1}}],[\"移动文件\",{\"0\":{\"33\":1},\"2\":{\"33\":1}}],[\"格式化分区\",{\"0\":{\"31\":1},\"2\":{\"31\":1}}],[\"ksh\",{\"3\":{\"95\":1,\"98\":1}}],[\"kind\",{\"3\":{\"65\":1}}],[\"kitware\",{\"3\":{\"44\":1}}],[\"k\",{\"3\":{\"30\":1,\"118\":2}}],[\"key文件登录\",{\"3\":{\"26\":1}}],[\"key\",{\"3\":{\"26\":2}}],[\"keys\",{\"3\":{\"24\":2}}],[\"keys文件中\",{\"3\":{\"24\":1}}],[\"keygen\",{\"3\":{\"23\":1}}],[\"+usegclogfilerotation\",{\"2\":{\"119\":1},\"3\":{\"118\":2,\"119\":2,\"124\":1}}],[\"+printgcdatestamps\",{\"3\":{\"119\":1,\"124\":1}}],[\"+printgcdetails\",{\"3\":{\"117\":1,\"119\":1,\"124\":1}}],[\"+printgctimestamps\",{\"3\":{\"117\":1}}],[\"+=\",{\"3\":{\"63\":1,\"65\":1}}],[\"+\",{\"3\":{\"30\":2,\"152\":1,\"158\":2}}],[\"选择q指令退出不保存配置\",{\"3\":{\"30\":1}}],[\"选择w指令保存配置\",{\"3\":{\"30\":1}}],[\"选择p指令查看分区是否添加成功\",{\"3\":{\"30\":1}}],[\"选择默认分区号\",{\"3\":{\"30\":1}}],[\"选择n指令进去新建分区模式\",{\"3\":{\"30\":1}}],[\"新版本解密算法\",{\"0\":{\"86\":1},\"2\":{\"86\":1}}],[\"新建分区\",{\"0\":{\"30\":1},\"2\":{\"30\":1}}],[\"新增远程仓库\",{\"3\":{\"9\":1}}],[\"5d439e64\",{\"0\":{\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1}}],[\"500\",{\"3\":{\"161\":1}}],[\"500=\",{\"3\":{\"161\":1}}],[\"509\",{\"3\":{\"161\":1}}],[\"50\",{\"3\":{\"56\":1}}],[\"513\",{\"3\":{\"161\":1}}],[\"51g\",{\"3\":{\"35\":1}}],[\"512\",{\"3\":{\"29\":4,\"30\":6}}],[\"59g\",{\"3\":{\"35\":1}}],[\"5g\",{\"3\":{\"35\":1}}],[\"5\",{\"0\":{\"51\":1,\"158\":1},\"2\":{\"51\":1,\"158\":1},\"3\":{\"31\":1,\"32\":2,\"35\":4,\"51\":3,\"63\":1,\"65\":1,\"94\":1,\"161\":13}}],[\"56155b0b\",{\"0\":{\"11\":1,\"12\":1,\"13\":1,\"14\":1}}],[\"进入以后\",{\"3\":{\"29\":1}}],[\"学术加速\",{\"0\":{\"27\":1},\"2\":{\"27\":1}}],[\"340\",{\"3\":{\"161\":1}}],[\"3e0e47ea\",{\"0\":{\"116\":1}}],[\"3986\",{\"3\":{\"161\":2}}],[\"39\",{\"3\":{\"97\":2}}],[\"3939840\",{\"3\":{\"31\":1,\"32\":1}}],[\"312\",{\"3\":{\"161\":4}}],[\"31\",{\"3\":{\"41\":1}}],[\"31936b48\",{\"0\":{\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1}}],[\"326171\",{\"3\":{\"32\":1}}],[\"32768\",{\"3\":{\"31\":1}}],[\"3\",{\"0\":{\"40\":1,\"41\":1,\"42\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":2,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"151\":1,\"152\":1,\"156\":1},\"2\":{\"40\":1,\"41\":1,\"42\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":2,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"151\":1,\"152\":1,\"156\":1},\"3\":{\"32\":1,\"35\":1,\"45\":1,\"47\":2,\"48\":1,\"49\":1,\"50\":2,\"51\":1,\"56\":1,\"57\":1,\"97\":2,\"99\":2,\"100\":2,\"119\":1,\"120\":1,\"121\":3,\"122\":2,\"146\":2,\"148\":1}}],[\"30\",{\"3\":{\"31\":1,\"32\":1}}],[\"3000\",{\"3\":{\"11\":1}}],[\"38221824\",{\"3\":{\"30\":1}}],[\"3719168\",{\"3\":{\"30\":1}}],[\"3719167\",{\"3\":{\"30\":1}}],[\"3715072\",{\"3\":{\"30\":1}}],[\"37\",{\"3\":{\"29\":1,\"30\":1}}],[\"则会安装到\",{\"3\":{\"59\":1}}],[\"则需要把\",{\"3\":{\"26\":1}}],[\"则ssh再发起登录的时候就会提示如下错误\",{\"3\":{\"26\":1}}],[\"即ssh使用\",{\"3\":{\"26\":1}}],[\"需要三步\",{\"3\":{\"154\":1}}],[\"需要debuger\",{\"3\":{\"65\":1}}],[\"需要在\",{\"3\":{\"65\":1}}],[\"需要注意的是\",{\"3\":{\"57\":1}}],[\"需要引入gflags\",{\"3\":{\"41\":1}}],[\"需要配置public\",{\"3\":{\"26\":1}}],[\"需要加上参数否则会报下面的错\",{\"3\":{\"15\":1}}],[\"把passwordauthentication改成no\",{\"3\":{\"26\":1}}],[\"$classpath\",{\"3\":{\"148\":1}}],[\"$catalina\",{\"3\":{\"148\":6}}],[\"$java\",{\"3\":{\"148\":2}}],[\"$logging\",{\"3\":{\"148\":1}}],[\"$registration\",{\"3\":{\"103\":1}}],[\"$nvm\",{\"3\":{\"97\":2,\"100\":3}}],[\"$gcc\",{\"3\":{\"65\":1}}],[\"$<install\",{\"3\":{\"57\":1}}],[\"$<build\",{\"3\":{\"57\":1}}],[\"$<config\",{\"3\":{\"57\":1}}],[\"$<condition\",{\"3\":{\"57\":1}}],[\"$<target\",{\"3\":{\"57\":3}}],[\"$<1\",{\"3\":{\"57\":1}}],[\"$<0\",{\"3\":{\"57\":1}}],[\"$<$<bool\",{\"3\":{\"57\":2}}],[\"$\",{\"3\":{\"26\":1,\"56\":7,\"57\":4,\"58\":2,\"61\":2,\"63\":1,\"65\":9,\"67\":10,\"94\":6,\"97\":4,\"145\":1,\"148\":2}}],[\"修改\",{\"3\":{\"26\":1}}],[\"禁止ssh用户名密码登录\",{\"0\":{\"26\":1},\"2\":{\"26\":1}}],[\"~30000\",{\"3\":{\"146\":1}}],[\"~$\",{\"3\":{\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"35\":1}}],[\"~\",{\"3\":{\"24\":1,\"97\":5,\"98\":3,\"161\":2}}],[\"将servletcontext当入参传入其中\",{\"3\":{\"157\":1}}],[\"将容器放入host对象中\",{\"3\":{\"155\":1}}],[\"将实现类的全名称写入到配置文件中\",{\"3\":{\"154\":1}}],[\"将反汇编风格设置为\",{\"3\":{\"65\":1}}],[\"将b链接到a\",{\"3\":{\"52\":1}}],[\"将前面生成的静态库libaccount\",{\"3\":{\"50\":1}}],[\"将目标代码与所依赖的库文件进行关联或者组装\",{\"3\":{\"38\":1}}],[\"将xx\",{\"3\":{\"38\":4}}],[\"将需要挂载的目录中的文件先移动出去\",{\"3\":{\"33\":1}}],[\"将公钥中的内容添加到linux用户目录下的\",{\"3\":{\"24\":1}}],[\"将公钥放入linux服务器\",{\"0\":{\"24\":1},\"2\":{\"24\":1}}],[\"将输出结果保存在指定的文件\",{\"3\":{\"17\":1}}],[\"xzzf\",{\"3\":{\"161\":1}}],[\"xloggc\",{\"3\":{\"117\":2,\"118\":1,\"119\":1,\"124\":1}}],[\"xx\",{\"0\":{\"119\":1},\"2\":{\"119\":1},\"3\":{\"117\":5,\"118\":2,\"119\":6,\"120\":2,\"124\":3}}],[\"xdg\",{\"3\":{\"97\":2}}],[\"xml进行配置\",{\"3\":{\"161\":1}}],[\"xml也能加载servlet的方法\",{\"3\":{\"154\":1}}],[\"xml会将解析出来的servlet对象注册到容器中\",{\"3\":{\"154\":1}}],[\"xml内部可以配置很多servlet\",{\"3\":{\"154\":1}}],[\"xml完成servlet的注册\",{\"0\":{\"154\":1},\"2\":{\"154\":1}}],[\"xml的结构是一个4层嵌套的树状结构\",{\"3\":{\"148\":1}}],[\"xml文件一样javax\",{\"3\":{\"155\":1}}],[\"xml文件最终被解析成一个context对象\",{\"3\":{\"154\":1}}],[\"xml文件了\",{\"3\":{\"149\":1}}],[\"xml文件中体现的比较隐晦\",{\"3\":{\"148\":1}}],[\"xml文件\",{\"3\":{\"148\":1,\"149\":1,\"154\":1,\"159\":1}}],[\"xml生成\",{\"3\":{\"148\":1}}],[\"xml\",{\"3\":{\"71\":1,\"143\":2,\"144\":1,\"146\":2,\"148\":2}}],[\"x\",{\"3\":{\"70\":2}}],[\"xphoto\",{\"3\":{\"61\":1}}],[\"xobjdetect\",{\"3\":{\"61\":1}}],[\"ximgproc\",{\"3\":{\"61\":1}}],[\"xvf\",{\"3\":{\"19\":1}}],[\"x86\",{\"3\":{\"15\":1}}],[\"years\",{\"3\":{\"129\":1}}],[\"yes\",{\"3\":{\"26\":2,\"55\":1}}],[\"yyyy\",{\"3\":{\"124\":1}}],[\"yarnpkg\",{\"3\":{\"101\":1}}],[\"yarn\",{\"1\":{\"101\":1,\"102\":1},\"3\":{\"93\":1,\"101\":4,\"102\":1}}],[\"your\",{\"3\":{\"92\":1,\"98\":2,\"121\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1}}],[\"you\",{\"3\":{\"29\":2,\"30\":1,\"92\":1,\"94\":1,\"97\":2,\"98\":3,\"99\":5,\"102\":2,\"120\":3,\"121\":3,\"122\":1,\"123\":1,\"143\":1,\"144\":1,\"146\":1}}],[\"y\",{\"3\":{\"19\":2,\"21\":1,\"29\":1,\"44\":1,\"55\":1,\"69\":1,\"70\":1}}],[\"yum\",{\"3\":{\"19\":2}}],[\"yml\",{\"3\":{\"11\":2,\"13\":2}}],[\"恢复之前终端的扫描\",{\"3\":{\"17\":1}}],[\"zshrc\",{\"3\":{\"97\":1,\"98\":1}}],[\"zsh\",{\"3\":{\"95\":1,\"98\":1}}],[\"zip\",{\"3\":{\"70\":3}}],[\"zh\",{\"3\":{\"62\":1}}],[\"z\",{\"3\":{\"17\":1,\"97\":1}}],[\"错误调试等级\",{\"3\":{\"17\":1}}],[\"would\",{\"3\":{\"122\":1,\"146\":2}}],[\"work\",{\"3\":{\"102\":1}}],[\"works\",{\"3\":{\"95\":1}}],[\"workspace\",{\"3\":{\"146\":7}}],[\"workspacerootfoldername\",{\"3\":{\"67\":1}}],[\"workspacefolder\",{\"3\":{\"65\":2,\"67\":1}}],[\"world时\",{\"3\":{\"41\":1}}],[\"world\",{\"3\":{\"38\":1,\"92\":1}}],[\"what\",{\"3\":{\"146\":1}}],[\"why\",{\"3\":{\"146\":2}}],[\"whenever\",{\"3\":{\"119\":1}}],[\"when\",{\"3\":{\"117\":1,\"118\":1,\"120\":1,\"146\":2}}],[\"whether\",{\"3\":{\"102\":1}}],[\"where\",{\"3\":{\"99\":1,\"118\":2}}],[\"which\",{\"3\":{\"99\":2,\"100\":1,\"117\":1,\"122\":1,\"124\":1,\"129\":1,\"146\":1}}],[\"wsl\",{\"3\":{\"95\":1}}],[\"webmvcproperties\",{\"3\":{\"158\":6}}],[\"webapplicationcontextutils\",{\"3\":{\"157\":1}}],[\"webserverfactorycustomizer<configurabletomcatwebserverfactory>\",{\"3\":{\"161\":1}}],[\"webserverexception\",{\"3\":{\"152\":1}}],[\"webserverstartstoplifecycle\",{\"3\":{\"151\":1}}],[\"webserverstartstop\",{\"3\":{\"151\":1}}],[\"webservergracefulshutdownlifecycle\",{\"3\":{\"151\":1}}],[\"webservergracefulshutdown\",{\"3\":{\"151\":1}}],[\"webserver\",{\"3\":{\"151\":8,\"152\":2,\"157\":6}}],[\"website\",{\"3\":{\"72\":1,\"92\":2}}],[\"web\",{\"3\":{\"151\":1,\"152\":1,\"154\":1,\"157\":1}}],[\"were\",{\"3\":{\"146\":3}}],[\"well\",{\"3\":{\"92\":1}}],[\"welcome\",{\"3\":{\"29\":1,\"30\":1}}],[\"we\",{\"3\":{\"71\":1,\"102\":1,\"124\":1,\"146\":7}}],[\"wget\",{\"3\":{\"70\":2,\"97\":2}}],[\"war\",{\"0\":{\"135\":1},\"2\":{\"135\":1}}],[\"warning\",{\"3\":{\"71\":1,\"118\":3}}],[\"was\",{\"3\":{\"99\":1,\"124\":1,\"146\":2,\"158\":2}}],[\"wall\",{\"3\":{\"65\":1}}],[\"want\",{\"3\":{\"29\":1,\"122\":1,\"143\":1}}],[\"www\",{\"3\":{\"62\":1}}],[\"written\",{\"3\":{\"118\":2,\"120\":2,\"121\":1,\"122\":2}}],[\"writing\",{\"3\":{\"31\":2}}],[\"write\",{\"3\":{\"29\":3,\"30\":3,\"118\":1}}],[\"windows\",{\"0\":{\"111\":1},\"2\":{\"111\":1},\"3\":{\"95\":1}}],[\"wide\",{\"3\":{\"71\":1}}],[\"will\",{\"3\":{\"29\":3,\"30\":2,\"71\":2,\"99\":1,\"100\":1,\"117\":2,\"118\":2,\"119\":2,\"120\":7,\"121\":2,\"123\":1,\"124\":3,\"161\":1}}],[\"without\",{\"3\":{\"146\":3}}],[\"with\",{\"0\":{\"69\":1},\"2\":{\"69\":1},\"3\":{\"26\":1,\"31\":1,\"70\":1,\"71\":4,\"92\":1,\"99\":3,\"100\":1,\"118\":1,\"119\":1,\"121\":1,\"122\":1,\"124\":1,\"146\":9,\"152\":1}}],[\"w表示保存配置等\",{\"3\":{\"29\":1}}],[\"w\",{\"3\":{\"17\":1,\"30\":1,\"118\":2}}],[\"显示版本信息\",{\"3\":{\"17\":1}}],[\"显示模块的使用信息\",{\"3\":{\"17\":1}}],[\"显示所有本地仓库\",{\"3\":{\"9\":1}}],[\"显示所有远程仓库\",{\"3\":{\"9\":1}}],[\"qo\",{\"3\":{\"97\":1}}],[\"qsv文件提取\",{\"1\":{\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1}}],[\"qsv文件\",{\"1\":{\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1}}],[\"question\",{\"3\":{\"146\":4,\"161\":1}}],[\"query\",{\"3\":{\"57\":4}}],[\"quickly\",{\"3\":{\"94\":1}}],[\"quick\",{\"0\":{\"68\":1},\"2\":{\"68\":1}}],[\"quite\",{\"3\":{\"146\":1}}],[\"quit\",{\"3\":{\"29\":1}}],[\"quality\",{\"3\":{\"61\":1}}],[\"q表示退出\",{\"3\":{\"29\":1}}],[\"q\",{\"3\":{\"17\":1}}],[\"不像catalina那样需要解析server\",{\"3\":{\"149\":1}}],[\"不挂载gpu\",{\"3\":{\"62\":1}}],[\"不给别人抽\",{\"3\":{\"52\":1}}],[\"不需要参数\",{\"3\":{\"48\":1}}],[\"不区分大小写\",{\"3\":{\"47\":1}}],[\"不区分大小写的\",{\"3\":{\"47\":1}}],[\"不会重复加载和拷贝\",{\"3\":{\"39\":1}}],[\"不格式化不能对分区进行挂载\",{\"3\":{\"31\":1}}],[\"不显示软件启动时候的版本信息\",{\"3\":{\"17\":1}}],[\"不带后缀\",{\"3\":{\"65\":2,\"67\":1}}],[\"不带\",{\"3\":{\"17\":1}}],[\"在执行其startinternal方法是会调用servletcontainerinitializer的实现类的onstartup方法并将容器对象的装饰类applicationcontext当作入参传入onstartup方法\",{\"3\":{\"156\":1}}],[\"在context对象创建好后直接调用其addservletcontainerinitializer方法将servletcontainerinitializer的实现类传进去\",{\"3\":{\"155\":1}}],[\"在cmakelists\",{\"3\":{\"48\":1}}],[\"在\",{\"3\":{\"154\":1}}],[\"在server的start方法被调用后需要执行其下每个service对象的init方法和start方法\",{\"3\":{\"148\":1}}],[\"在我们日常的maven使用中\",{\"3\":{\"140\":1}}],[\"在大量项目的构建过程中\",{\"3\":{\"140\":1}}],[\"在其最一般的形式中\",{\"3\":{\"57\":1}}],[\"在project中\",{\"3\":{\"48\":1}}],[\"在主流平台上自动生成文件依赖项并支持并行构建\",{\"3\":{\"42\":1}}],[\"在实际工作中推荐使用cmake构建c++项目\",{\"3\":{\"42\":1}}],[\"在内存中仅保存一份拷贝\",{\"3\":{\"39\":1}}],[\"在预处理阶段\",{\"3\":{\"38\":1}}],[\"在本地windows上生成公钥私钥对\",{\"0\":{\"23\":1},\"2\":{\"23\":1}}],[\"在任何竹主机上面破解得到第一个用户名或面后停止扫描\",{\"3\":{\"17\":1}}],[\"在破解得到第一个用户名或者密码后停止扫描主机\",{\"3\":{\"17\":1}}],[\"默认值3\",{\"3\":{\"17\":2}}],[\"默认密码admin\",{\"3\":{\"11\":1}}],[\"设置安装\",{\"0\":{\"59\":1},\"2\":{\"59\":1},\"3\":{\"59\":1}}],[\"设置项目\",{\"0\":{\"48\":1},\"2\":{\"48\":1}}],[\"设置开机自动挂载\",{\"3\":{\"34\":1}}],[\"设置同时测试的主机总数\",{\"3\":{\"17\":1}}],[\"设置同时测试的登陆总数\",{\"3\":{\"17\":1}}],[\"设置重试的次数\",{\"3\":{\"17\":1}}],[\"设置连接超时时间\",{\"3\":{\"17\":1}}],[\"设置远程仓库地址\",{\"3\":{\"9\":1}}],[\"查看runner配置文件\",{\"0\":{\"105\":1},\"2\":{\"105\":1}}],[\"查看runner命令\",{\"0\":{\"104\":1},\"2\":{\"104\":1}}],[\"查看所有目标\",{\"3\":{\"56\":1}}],[\"查看所有分支\",{\"3\":{\"9\":1}}],[\"查看挂载\",{\"0\":{\"35\":1},\"2\":{\"35\":1}}],[\"查看隐藏文件\",{\"3\":{\"33\":1}}],[\"查看空闲磁盘空间\",{\"0\":{\"29\":1},\"2\":{\"29\":1}}],[\"查看支持破解的模块\",{\"3\":{\"17\":1}}],[\"指定文件\",{\"3\":{\"63\":1,\"65\":1}}],[\"指定目标链接的库\",{\"3\":{\"50\":1}}],[\"指定目标包含的头文件目录\",{\"3\":{\"50\":1}}],[\"指定版本\",{\"0\":{\"47\":1},\"2\":{\"47\":1}}],[\"指定构建目录\",{\"3\":{\"45\":2}}],[\"指定源码目录\",{\"3\":{\"45\":1}}],[\"指定传递给模块的参数\",{\"3\":{\"17\":1}}],[\"指定测试格式为user\",{\"3\":{\"17\":1}}],[\"指定测试的密码字典\",{\"3\":{\"17\":1}}],[\"指定测试的密码\",{\"3\":{\"17\":1}}],[\"指定测试的用户名字典\",{\"3\":{\"17\":1}}],[\"指定测试的用户名\",{\"3\":{\"17\":1}}],[\"制定执行的模块\",{\"3\":{\"17\":1}}],[\"额外的密码检测\",{\"3\":{\"17\":1}}],[\"目标查询\",{\"3\":{\"57\":2}}],[\"目标ip地址\",{\"3\":{\"17\":1}}],[\"目录下\",{\"3\":{\"59\":1}}],[\"目录\",{\"0\":{\"8\":1,\"36\":1,\"116\":1},\"2\":{\"8\":1,\"36\":1,\"116\":1}}],[\"61\",{\"3\":{\"161\":1}}],[\"659\",{\"3\":{\"161\":1}}],[\"65\",{\"3\":{\"161\":1}}],[\"65536\",{\"3\":{\"31\":1}}],[\"669\",{\"3\":{\"146\":1}}],[\"6e2ab9da\",{\"0\":{\"36\":1}}],[\"6m\",{\"3\":{\"35\":1}}],[\"6g\",{\"3\":{\"35\":4}}],[\"686063d202ce\",{\"3\":{\"31\":1}}],[\"63cf\",{\"3\":{\"31\":1}}],[\"638c1d18\",{\"0\":{\"8\":1}}],[\"60g\",{\"3\":{\"29\":1,\"30\":1}}],[\"60\",{\"3\":{\"29\":1,\"30\":1}}],[\"6\",{\"0\":{\"52\":1},\"2\":{\"52\":1},\"3\":{\"17\":1,\"51\":1,\"94\":2}}],[\"649\",{\"3\":{\"146\":2}}],[\"64425541120\",{\"3\":{\"29\":1}}],[\"64\",{\"3\":{\"15\":1}}],[\"`pkg\",{\"3\":{\"41\":1}}],[\"`config\",{\"3\":{\"15\":1}}],[\"`job=<job\",{\"3\":{\"13\":1}}],[\"404\",{\"3\":{\"161\":1}}],[\"404=\",{\"3\":{\"161\":1}}],[\"400\",{\"3\":{\"161\":1}}],[\"400=\",{\"3\":{\"161\":1}}],[\"4096000\",{\"3\":{\"31\":1}}],[\"4096\",{\"3\":{\"30\":1}}],[\"4095\",{\"3\":{\"30\":1}}],[\"49\",{\"3\":{\"161\":1}}],[\"474\",{\"3\":{\"161\":1}}],[\"47\",{\"3\":{\"124\":1}}],[\"410\",{\"3\":{\"161\":1}}],[\"418dacbd\",{\"3\":{\"146\":7}}],[\"41\",{\"3\":{\"124\":1}}],[\"41940991\",{\"3\":{\"30\":1}}],[\"41940992\",{\"3\":{\"29\":1,\"30\":4}}],[\"41943039\",{\"3\":{\"29\":1,\"30\":1}}],[\"4g\",{\"3\":{\"35\":2}}],[\"42\",{\"3\":{\"35\":1}}],[\"42c1\",{\"3\":{\"31\":1}}],[\"4k\",{\"3\":{\"31\":1}}],[\"4643\",{\"3\":{\"146\":7}}],[\"46\",{\"3\":{\"31\":1,\"32\":1}}],[\"4c38\",{\"3\":{\"30\":1}}],[\"4\",{\"0\":{\"50\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":2,\"158\":1},\"2\":{\"50\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":2,\"158\":1},\"3\":{\"15\":1,\"19\":1,\"30\":3,\"32\":1,\"35\":1,\"50\":2,\"57\":1,\"70\":2,\"99\":1,\"100\":1,\"119\":1,\"120\":2,\"121\":3,\"148\":1}}],[\"4bd1b706\",{\"0\":{\"9\":1,\"10\":1}}],[\"jre\",{\"3\":{\"146\":2}}],[\"jdk8u312\",{\"3\":{\"146\":2}}],[\"jenkins\",{\"3\":{\"146\":8}}],[\"jar中errorreportvalve\",{\"3\":{\"161\":1}}],[\"jar\",{\"0\":{\"132\":1},\"2\":{\"132\":1},\"3\":{\"146\":4,\"161\":13}}],[\"java\",{\"3\":{\"129\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":8,\"148\":1,\"161\":19}}],[\"javascript\",{\"3\":{\"92\":1}}],[\"jacoco\",{\"1\":{\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1},\"3\":{\"129\":1}}],[\"jvmrun1\",{\"3\":{\"146\":2}}],[\"jvmrun\",{\"3\":{\"146\":1}}],[\"jvm\",{\"3\":{\"118\":3,\"119\":2,\"124\":1,\"146\":1}}],[\"jio\",{\"3\":{\"118\":5}}],[\"just\",{\"3\":{\"99\":2,\"123\":1,\"146\":2}}],[\"justmycode\",{\"3\":{\"63\":1,\"65\":1}}],[\"js\",{\"3\":{\"95\":1,\"99\":1,\"100\":1}}],[\"json字符串\",{\"0\":{\"76\":1},\"2\":{\"76\":1}}],[\"json的label\",{\"3\":{\"65\":1}}],[\"json修改为\",{\"3\":{\"65\":1}}],[\"json\",{\"3\":{\"65\":1,\"67\":5}}],[\"json添加\",{\"3\":{\"63\":1}}],[\"j4\",{\"3\":{\"70\":1}}],[\"j8\",{\"3\":{\"70\":1}}],[\"jpg\",{\"3\":{\"38\":1,\"39\":1}}],[\"journal\",{\"3\":{\"31\":1}}],[\"jobs\",{\"3\":{\"70\":2,\"146\":1}}],[\"job\",{\"3\":{\"13\":4,\"146\":1}}],[\"j\",{\"3\":{\"15\":1,\"19\":1}}],[\"748\",{\"3\":{\"161\":1}}],[\"7420a911\",{\"0\":{\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1}}],[\"7230\",{\"3\":{\"161\":2}}],[\"727d1ccd\",{\"0\":{\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1}}],[\"76\",{\"3\":{\"161\":13}}],[\"76945eec\",{\"0\":{\"130\":1,\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1}}],[\"76fa89e8\",{\"0\":{\"15\":1,\"16\":1,\"17\":1,\"18\":1}}],[\"7bb63861\",{\"0\":{\"92\":1,\"93\":1}}],[\"7962624\",{\"3\":{\"31\":1}}],[\"71fe7d8e\",{\"3\":{\"31\":1}}],[\"7\",{\"0\":{\"53\":1},\"2\":{\"53\":1},\"3\":{\"19\":1,\"35\":2,\"53\":1,\"99\":2,\"146\":1}}],[\"7890\",{\"3\":{\"10\":2,\"27\":2}}],[\"监控mysql\",{\"0\":{\"14\":1},\"2\":{\"14\":1}}],[\"监控linux\",{\"0\":{\"12\":1},\"2\":{\"12\":1}}],[\"illegalargumentexception\",{\"3\":{\"161\":1}}],[\"ignore\",{\"3\":{\"146\":1}}],[\"ignorefailures\",{\"3\":{\"65\":2}}],[\"implements\",{\"3\":{\"148\":1,\"151\":1,\"152\":2,\"155\":1,\"156\":1,\"157\":3,\"158\":1,\"161\":2}}],[\"impl\",{\"3\":{\"118\":1}}],[\"img\",{\"3\":{\"61\":1}}],[\"imgproc\",{\"3\":{\"61\":1}}],[\"imgcodecs\",{\"3\":{\"61\":1}}],[\"imgcompile\",{\"3\":{\"38\":1}}],[\"img20230122221807\",{\"3\":{\"39\":1}}],[\"ioexception\",{\"3\":{\"161\":2}}],[\"iotools\",{\"3\":{\"161\":1}}],[\"io\",{\"3\":{\"99\":1,\"100\":1,\"148\":1}}],[\"iojs\",{\"3\":{\"99\":1,\"100\":7}}],[\"i++\",{\"3\":{\"65\":1}}],[\"i文件编译为xx\",{\"3\":{\"38\":1}}],[\"i文件\",{\"3\":{\"38\":1}}],[\"ifavailable\",{\"3\":{\"158\":1}}],[\"if\",{\"3\":{\"38\":1,\"55\":2,\"56\":1,\"98\":1,\"118\":12,\"122\":2,\"146\":4,\"148\":6,\"149\":3,\"151\":2,\"152\":1,\"155\":1,\"156\":2,\"157\":1,\"158\":5,\"161\":2}}],[\"i\",{\"3\":{\"30\":1,\"38\":2,\"56\":3,\"63\":2,\"65\":3,\"118\":1,\"146\":4}}],[\"i参数指定private\",{\"3\":{\"26\":1}}],[\"id>\",{\"3\":{\"146\":2}}],[\"ides\",{\"3\":{\"100\":1}}],[\"idea\",{\"3\":{\"29\":1,\"30\":1}}],[\"identifier\",{\"3\":{\"30\":1}}],[\"identified\",{\"3\":{\"14\":1}}],[\"identityfile\",{\"3\":{\"25\":1}}],[\"id\",{\"3\":{\"23\":1,\"25\":1}}],[\"inputstream\",{\"3\":{\"161\":1}}],[\"initparameters\",{\"3\":{\"157\":1}}],[\"initpropertysources\",{\"3\":{\"151\":1}}],[\"initbasedir\",{\"3\":{\"149\":1}}],[\"initfail\",{\"3\":{\"148\":1}}],[\"initialization\",{\"3\":{\"152\":1}}],[\"initializer\",{\"3\":{\"157\":2}}],[\"initializerstouse\",{\"3\":{\"152\":1,\"155\":2,\"157\":2}}],[\"initializers\",{\"3\":{\"152\":5,\"155\":4,\"156\":3,\"157\":14}}],[\"initialize\",{\"3\":{\"151\":1,\"152\":2}}],[\"initialized\",{\"3\":{\"148\":2,\"152\":1}}],[\"initializing防止在start方法中再次执行init方法\",{\"3\":{\"148\":1}}],[\"initializing\",{\"3\":{\"148\":2}}],[\"initinternal\",{\"3\":{\"148\":2,\"156\":1}}],[\"init方法不会执行\",{\"3\":{\"148\":1}}],[\"init方法\",{\"3\":{\"148\":1}}],[\"init\",{\"3\":{\"148\":7}}],[\"individual\",{\"3\":{\"146\":1}}],[\"invalid\",{\"3\":{\"161\":1}}],[\"invalidtransition\",{\"3\":{\"148\":1}}],[\"invokeunchecked\",{\"3\":{\"161\":1}}],[\"invoker$2\",{\"3\":{\"161\":1}}],[\"invoker\",{\"3\":{\"161\":3}}],[\"invoke\",{\"3\":{\"148\":2}}],[\"invoked\",{\"3\":{\"95\":1,\"143\":1,\"144\":1}}],[\"investigation\",{\"3\":{\"146\":1}}],[\"instanceof\",{\"3\":{\"152\":1}}],[\"installs\",{\"3\":{\"99\":2}}],[\"installed\",{\"3\":{\"71\":1,\"95\":1,\"99\":3}}],[\"installing\",{\"0\":{\"96\":1},\"2\":{\"96\":1},\"3\":{\"71\":1}}],[\"installation\",{\"0\":{\"110\":1,\"111\":1,\"112\":1,\"113\":1},\"2\":{\"110\":1,\"111\":1,\"112\":1,\"113\":1},\"3\":{\"71\":5}}],[\"install\",{\"0\":{\"71\":1,\"97\":1},\"2\":{\"71\":1,\"97\":1},\"3\":{\"15\":1,\"19\":3,\"21\":1,\"41\":2,\"44\":2,\"57\":2,\"59\":4,\"60\":1,\"61\":1,\"64\":4,\"69\":1,\"70\":2,\"71\":6,\"93\":2,\"94\":2,\"97\":4,\"98\":1,\"99\":5,\"100\":4,\"101\":2}}],[\"instead\",{\"3\":{\"123\":1}}],[\"including\",{\"3\":{\"121\":1}}],[\"includes\",{\"3\":{\"72\":1}}],[\"includedir\",{\"3\":{\"57\":2}}],[\"include引入其他代码\",{\"0\":{\"54\":1},\"2\":{\"54\":1}}],[\"include\",{\"3\":{\"38\":2,\"50\":3,\"51\":1,\"54\":1,\"57\":1,\"59\":1,\"60\":1,\"61\":4,\"65\":1,\"66\":1,\"71\":1,\"161\":4}}],[\"inf\",{\"3\":{\"154\":1}}],[\"info\",{\"3\":{\"152\":1,\"158\":2,\"161\":1}}],[\"information\",{\"3\":{\"15\":1,\"31\":1,\"32\":1,\"92\":1}}],[\"infinite\",{\"3\":{\"70\":1}}],[\"intro\",{\"0\":{\"94\":1},\"2\":{\"94\":1}}],[\"integration\",{\"3\":{\"129\":1}}],[\"integrate\",{\"3\":{\"71\":1}}],[\"integratedterminal\",{\"3\":{\"63\":1,\"65\":1}}],[\"intel\",{\"3\":{\"65\":2}}],[\"intellisense\",{\"3\":{\"63\":1,\"65\":1}}],[\"internationalization\",{\"3\":{\"146\":1}}],[\"interruption\",{\"3\":{\"146\":1}}],[\"interact\",{\"3\":{\"92\":1}}],[\"interface关键字来控制传播\",{\"3\":{\"52\":1}}],[\"interface\",{\"0\":{\"52\":1},\"2\":{\"52\":1},\"3\":{\"52\":2,\"57\":4,\"92\":1,\"154\":1}}],[\"interval\",{\"3\":{\"13\":4}}],[\"int\",{\"3\":{\"38\":1,\"65\":3,\"66\":2,\"118\":1,\"161\":1}}],[\"into\",{\"3\":{\"38\":1,\"71\":1,\"146\":2}}],[\"inode\",{\"3\":{\"31\":1}}],[\"inodes\",{\"3\":{\"31\":1,\"32\":1}}],[\"in\",{\"3\":{\"29\":2,\"30\":2,\"63\":1,\"71\":1,\"95\":1,\"99\":4,\"100\":1,\"118\":2,\"120\":3,\"121\":1,\"122\":2,\"124\":1,\"141\":1,\"143\":2,\"144\":1,\"145\":3,\"146\":5,\"161\":4}}],[\"its\",{\"3\":{\"118\":1,\"119\":1,\"145\":1,\"146\":1}}],[\"itself\",{\"3\":{\"13\":1}}],[\"it\",{\"3\":{\"13\":1,\"29\":1,\"30\":1,\"92\":1,\"97\":1,\"99\":2,\"118\":1,\"119\":1,\"120\":1,\"122\":1,\"124\":1,\"146\":3}}],[\"isempty\",{\"3\":{\"158\":1}}],[\"isenabled\",{\"3\":{\"158\":1}}],[\"issue\",{\"3\":{\"146\":4}}],[\"isdefault\",{\"3\":{\"65\":1}}],[\"is\",{\"3\":{\"13\":4,\"29\":2,\"30\":2,\"56\":1,\"71\":1,\"72\":1,\"92\":3,\"95\":1,\"99\":3,\"100\":1,\"102\":1,\"118\":6,\"122\":1,\"129\":1,\"141\":2,\"143\":1,\"146\":11,\"161\":2}}],[\"m5\",{\"3\":{\"146\":1}}],[\"mm\",{\"3\":{\"124\":2}}],[\"multipartconfig\",{\"3\":{\"158\":4}}],[\"multiple\",{\"3\":{\"100\":1,\"123\":1}}],[\"much\",{\"3\":{\"146\":1}}],[\"mutex\",{\"3\":{\"118\":2}}],[\"must\",{\"3\":{\"117\":2,\"118\":1,\"152\":1}}],[\"msg\",{\"3\":{\"118\":5}}],[\"ms\",{\"3\":{\"62\":6}}],[\"ml\",{\"3\":{\"61\":1}}],[\"mvn\",{\"3\":{\"140\":2,\"143\":1,\"144\":1,\"145\":2,\"146\":1}}],[\"mv\",{\"3\":{\"33\":1}}],[\"mkdir\",{\"3\":{\"70\":1}}],[\"mke2fs\",{\"3\":{\"31\":1}}],[\"mkfs\",{\"3\":{\"31\":1}}],[\"m表示帮助\",{\"3\":{\"29\":1}}],[\"missing\",{\"3\":{\"146\":1}}],[\"mismatch\",{\"3\":{\"29\":1,\"30\":1}}],[\"might\",{\"3\":{\"121\":1}}],[\"mitigate\",{\"3\":{\"121\":1}}],[\"mixed\",{\"0\":{\"121\":1},\"2\":{\"121\":1},\"3\":{\"121\":1}}],[\"mirrors\",{\"3\":{\"100\":2}}],[\"mirror=https\",{\"3\":{\"100\":4}}],[\"mirror\",{\"0\":{\"100\":1},\"2\":{\"100\":1},\"3\":{\"100\":4}}],[\"mimode\",{\"3\":{\"65\":1}}],[\"minor\",{\"3\":{\"71\":1}}],[\"minimal\",{\"3\":{\"70\":1}}],[\"minimum\",{\"3\":{\"30\":1,\"47\":3,\"50\":2,\"51\":1,\"118\":1}}],[\"minute\",{\"3\":{\"13\":2}}],[\"microsoft\",{\"3\":{\"63\":1,\"65\":1}}],[\"mic\",{\"3\":{\"26\":1}}],[\"monitor\",{\"3\":{\"152\":1}}],[\"monorepos\",{\"3\":{\"102\":1}}],[\"move\",{\"3\":{\"121\":1}}],[\"most\",{\"3\":{\"92\":1,\"120\":1,\"122\":1}}],[\"mounted\",{\"3\":{\"35\":1}}],[\"mount\",{\"3\":{\"34\":1}}],[\"module\",{\"3\":{\"146\":2}}],[\"modules\",{\"0\":{\"70\":1},\"2\":{\"70\":1}}],[\"model\",{\"3\":{\"30\":1}}],[\"mod扩展名\",{\"3\":{\"17\":1}}],[\"more\",{\"3\":{\"15\":1,\"120\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"m\",{\"3\":{\"16\":4,\"17\":2,\"29\":2,\"30\":4}}],[\"mergedinitializers\",{\"3\":{\"157\":6}}],[\"mergeinitializers\",{\"3\":{\"155\":1,\"157\":2}}],[\"means\",{\"3\":{\"120\":1}}],[\"meta\",{\"3\":{\"92\":1,\"154\":1}}],[\"methodname\",{\"3\":{\"148\":2}}],[\"method\",{\"3\":{\"71\":1,\"148\":7}}],[\"metrics\",{\"3\":{\"12\":1,\"13\":2,\"14\":1}}],[\"message=never\",{\"3\":{\"161\":1}}],[\"message\",{\"3\":{\"53\":1,\"58\":2,\"61\":2}}],[\"memory\",{\"3\":{\"29\":1,\"30\":1}}],[\"medusa命令详解\",{\"0\":{\"17\":1},\"2\":{\"17\":1}}],[\"medusa暴力破解ssh\",{\"0\":{\"16\":1},\"2\":{\"16\":1}}],[\"medusa\",{\"1\":{\"15\":1,\"16\":1,\"17\":1,\"18\":1},\"3\":{\"16\":4,\"17\":25}}],[\"medusa编译\",{\"0\":{\"15\":1},\"2\":{\"15\":1}}],[\"mytomcatconnectorcustomizer\",{\"3\":{\"161\":1}}],[\"mytomcatwebserverfactorycustomizer\",{\"3\":{\"161\":2}}],[\"mysqld\",{\"3\":{\"14\":3}}],[\"mysql\",{\"3\":{\"13\":1}}],[\"my\",{\"3\":{\"13\":1,\"14\":1,\"58\":2}}],[\"mappings\",{\"3\":{\"158\":1}}],[\"mapping\",{\"3\":{\"158\":1}}],[\"mapping的配置\",{\"3\":{\"158\":1}}],[\"mapper\",{\"3\":{\"35\":1}}],[\"map\",{\"3\":{\"156\":1}}],[\"map<servletcontainerinitializer\",{\"3\":{\"156\":1}}],[\"maven总结出了一套高度完善的\",{\"3\":{\"140\":1}}],[\"maven的生命周期就是为了对所有的构建过程进行抽象和统一\",{\"3\":{\"140\":1}}],[\"maven\",{\"0\":{\"134\":1,\"141\":1,\"143\":1,\"144\":1,\"145\":1},\"2\":{\"134\":1,\"141\":1,\"143\":1,\"144\":1,\"145\":1},\"3\":{\"141\":1,\"142\":3,\"143\":1,\"144\":1,\"145\":1,\"146\":13}}],[\"marked\",{\"3\":{\"122\":1}}],[\"maxpathlen\",{\"3\":{\"118\":3}}],[\"max\",{\"3\":{\"118\":1}}],[\"may\",{\"3\":{\"97\":1,\"146\":1}}],[\"manually\",{\"3\":{\"97\":1}}],[\"manager\",{\"3\":{\"95\":1,\"102\":2,\"148\":1}}],[\"manage\",{\"3\":{\"92\":3}}],[\"many\",{\"3\":{\"15\":1,\"92\":1,\"129\":1}}],[\"matching\",{\"3\":{\"61\":1}}],[\"matches\",{\"3\":{\"55\":1}}],[\"macro\",{\"3\":{\"58\":6}}],[\"macos\",{\"3\":{\"39\":1,\"95\":1}}],[\"makefile\",{\"3\":{\"56\":1}}],[\"make\",{\"3\":{\"15\":2,\"19\":2,\"44\":2,\"70\":2,\"71\":1,\"118\":1}}],[\"master\",{\"3\":{\"9\":1}}],[\"main生成可执行文件\",{\"3\":{\"65\":1}}],[\"main表示输出文件名为main\",{\"3\":{\"41\":2}}],[\"main\",{\"3\":{\"9\":6,\"38\":9,\"41\":7,\"47\":2,\"49\":1,\"56\":9,\"65\":2,\"66\":1,\"148\":2}}],[\"9a062601\",{\"3\":{\"161\":1}}],[\"96\",{\"3\":{\"161\":1}}],[\"9362ca3c\",{\"0\":{\"101\":1,\"102\":1}}],[\"9g\",{\"3\":{\"35\":1}}],[\"9\",{\"0\":{\"55\":1},\"2\":{\"55\":1},\"3\":{\"35\":1,\"55\":1,\"94\":2}}],[\"98304\",{\"3\":{\"31\":1}}],[\"95ad2ff2\",{\"0\":{\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1}}],[\"9164c014bf60\",{\"3\":{\"146\":7}}],[\"91\",{\"3\":{\"19\":1}}],[\"9104\",{\"3\":{\"13\":1,\"14\":1}}],[\"9100\",{\"3\":{\"12\":1,\"13\":2}}],[\"9093\",{\"3\":{\"13\":1}}],[\"9090\",{\"3\":{\"11\":1,\"13\":1}}],[\"e5\",{\"3\":{\"161\":1}}],[\"e7\",{\"3\":{\"161\":1}}],[\"e6\",{\"3\":{\"161\":2}}],[\"equals\",{\"3\":{\"148\":6}}],[\"equal等\",{\"3\":{\"55\":1}}],[\"embedded\",{\"3\":{\"152\":1}}],[\"embeddedcontext\",{\"3\":{\"152\":3}}],[\"embed\",{\"1\":{\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1}}],[\"email\",{\"3\":{\"10\":1}}],[\"effectively\",{\"3\":{\"146\":1}}],[\"ef8f\",{\"3\":{\"146\":7}}],[\"epoint\",{\"3\":{\"146\":7}}],[\"epoint123\",{\"3\":{\"16\":1}}],[\"ejb\",{\"0\":{\"133\":1},\"2\":{\"133\":1}}],[\"eclemma\",{\"3\":{\"129\":1}}],[\"ear\",{\"0\":{\"136\":1},\"2\":{\"136\":1}}],[\"earlier\",{\"3\":{\"99\":1}}],[\"each\",{\"3\":{\"122\":1}}],[\"errno\",{\"3\":{\"118\":1}}],[\"errorcode\",{\"3\":{\"161\":4}}],[\"errorreportvalve\",{\"3\":{\"161\":3}}],[\"errors=never\",{\"3\":{\"161\":1}}],[\"errors=\",{\"3\":{\"146\":1}}],[\"error\",{\"3\":{\"15\":1,\"146\":1,\"156\":1,\"161\":15}}],[\"either\",{\"3\":{\"97\":2,\"143\":1}}],[\"elevated\",{\"3\":{\"71\":1}}],[\"else\",{\"3\":{\"55\":1,\"118\":2,\"148\":3,\"151\":1}}],[\"else等条件编译指令\",{\"3\":{\"38\":1}}],[\"edit\",{\"3\":{\"56\":1,\"62\":1}}],[\"entryset\",{\"3\":{\"156\":1}}],[\"entry\",{\"3\":{\"156\":3}}],[\"entry<servletcontainerinitializer\",{\"3\":{\"156\":1}}],[\"enterprise\",{\"3\":{\"102\":1}}],[\"engine>\",{\"3\":{\"161\":1}}],[\"engine\",{\"3\":{\"149\":12}}],[\"engine的实现方法\",{\"3\":{\"148\":2}}],[\"engineers\",{\"3\":{\"122\":1}}],[\"english\",{\"3\":{\"146\":1}}],[\"env\",{\"3\":{\"67\":1}}],[\"environment\",{\"3\":{\"65\":1,\"100\":1}}],[\"enabled\",{\"3\":{\"100\":1,\"117\":1}}],[\"enable\",{\"3\":{\"65\":1,\"100\":1,\"118\":1}}],[\"enpei\",{\"3\":{\"51\":1}}],[\"endorsed\",{\"3\":{\"148\":1}}],[\"endfunction\",{\"3\":{\"58\":1}}],[\"endmacro\",{\"3\":{\"58\":1}}],[\"endif\",{\"3\":{\"55\":1}}],[\"endl\",{\"3\":{\"38\":1,\"65\":1,\"66\":1}}],[\"end\",{\"3\":{\"29\":1,\"30\":1,\"120\":1,\"151\":1}}],[\"endpoint\",{\"3\":{\"13\":1}}],[\"e2fsck\",{\"3\":{\"32\":2}}],[\"etc\",{\"3\":{\"26\":3,\"34\":2,\"99\":2,\"105\":1,\"121\":1,\"123\":1}}],[\"e\",{\"3\":{\"17\":1,\"38\":2,\"71\":2,\"99\":1,\"148\":2,\"156\":2,\"161\":6}}],[\"ex\",{\"3\":{\"151\":4,\"152\":1,\"157\":1}}],[\"exception=false\",{\"3\":{\"161\":1}}],[\"exception\",{\"3\":{\"148\":3,\"152\":1,\"157\":1}}],[\"exit\",{\"3\":{\"146\":4}}],[\"exist\",{\"3\":{\"146\":1}}],[\"existing\",{\"3\":{\"129\":1}}],[\"exists\",{\"3\":{\"55\":1,\"57\":1,\"161\":1}}],[\"execute\",{\"3\":{\"146\":1}}],[\"executeafterpreconditionschecked\",{\"3\":{\"146\":1}}],[\"executeprovider\",{\"3\":{\"146\":1}}],[\"execution\",{\"3\":{\"146\":1}}],[\"executions>\",{\"3\":{\"144\":1}}],[\"execution>\",{\"3\":{\"144\":1}}],[\"executable定义了target\",{\"3\":{\"50\":1}}],[\"executable一样\",{\"3\":{\"50\":1}}],[\"executable\",{\"3\":{\"47\":1,\"49\":2,\"50\":1,\"51\":1,\"52\":1,\"56\":1,\"71\":1,\"99\":1}}],[\"exec\",{\"3\":{\"99\":2,\"148\":1}}],[\"example\",{\"3\":{\"71\":1,\"92\":1,\"94\":1,\"119\":1,\"122\":1}}],[\"exactly\",{\"3\":{\"13\":1}}],[\"extends\",{\"3\":{\"151\":1,\"152\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":2,\"158\":4}}],[\"extended\",{\"3\":{\"118\":4}}],[\"extension\",{\"3\":{\"122\":1}}],[\"extensions\",{\"3\":{\"119\":1}}],[\"externalconsole\",{\"3\":{\"65\":1}}],[\"external\",{\"3\":{\"41\":1}}],[\"ext4\",{\"3\":{\"31\":1,\"34\":1}}],[\"explaining\",{\"3\":{\"146\":1}}],[\"explorer\",{\"3\":{\"62\":1}}],[\"experience\",{\"3\":{\"92\":1}}],[\"expression\",{\"3\":{\"55\":1,\"57\":1}}],[\"export\",{\"3\":{\"27\":2,\"97\":1,\"100\":2}}],[\"exporter\",{\"3\":{\"12\":2,\"14\":6}}],[\"expihb666qwe\",{\"3\":{\"14\":1}}],[\"eval\",{\"3\":{\"148\":1}}],[\"evaluate\",{\"3\":{\"13\":2}}],[\"evaluation\",{\"3\":{\"13\":2}}],[\"event\",{\"3\":{\"148\":1}}],[\"events\",{\"3\":{\"120\":2,\"122\":1}}],[\"every\",{\"3\":{\"13\":4,\"92\":1,\"146\":2}}],[\"length\",{\"3\":{\"149\":1,\"158\":1}}],[\"learned\",{\"3\":{\"129\":1}}],[\"leaf\",{\"3\":{\"118\":1}}],[\"let\",{\"3\":{\"121\":1}}],[\"lessons\",{\"3\":{\"129\":1}}],[\"less\",{\"3\":{\"55\":2}}],[\"ldd\",{\"3\":{\"51\":1}}],[\"ldd查看依赖的动态库\",{\"3\":{\"51\":1}}],[\"lgflags\",{\"3\":{\"41\":1}}],[\"lgflags表示链接gflags库\",{\"3\":{\"41\":1}}],[\"lifecyclestate\",{\"3\":{\"148\":8}}],[\"lifecycles>\",{\"3\":{\"146\":1}}],[\"lifecyclebase\",{\"3\":{\"148\":2}}],[\"lifecycleexception\",{\"3\":{\"148\":6,\"149\":1,\"156\":1}}],[\"lifecycle>\",{\"3\":{\"146\":1}}],[\"lifecycle\",{\"1\":{\"130\":1,\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1},\"3\":{\"143\":1,\"144\":1,\"146\":1,\"148\":2}}],[\"like\",{\"3\":{\"99\":1,\"124\":1}}],[\"list<servletcontextinitializer>\",{\"3\":{\"157\":1}}],[\"listeners\",{\"3\":{\"152\":1}}],[\"list\",{\"3\":{\"99\":1,\"104\":1}}],[\"light\",{\"3\":{\"61\":1}}],[\"libopencv\",{\"3\":{\"61\":1}}],[\"libraries\",{\"3\":{\"50\":3,\"51\":1,\"52\":4,\"60\":1,\"61\":2,\"71\":1,\"129\":1}}],[\"library和add\",{\"3\":{\"50\":1}}],[\"library\",{\"3\":{\"39\":5,\"50\":2,\"51\":2,\"52\":3,\"57\":1,\"59\":1,\"72\":2,\"129\":1}}],[\"libaccount\",{\"3\":{\"50\":3,\"51\":4}}],[\"lib\",{\"3\":{\"50\":2,\"51\":2,\"59\":2,\"71\":1,\"146\":7}}],[\"libgflags2\",{\"3\":{\"41\":1}}],[\"libgflags\",{\"3\":{\"41\":1}}],[\"libs\",{\"3\":{\"41\":3,\"61\":1}}],[\"lib库名称\",{\"3\":{\"39\":2,\"50\":1}}],[\"lines\",{\"3\":{\"97\":1}}],[\"linenumber\",{\"3\":{\"67\":1}}],[\"line\",{\"3\":{\"61\":1,\"92\":1,\"94\":1,\"98\":1,\"146\":1}}],[\"linkedhashmap<>\",{\"3\":{\"156\":1}}],[\"linkid=830387\",{\"3\":{\"63\":1,\"65\":1}}],[\"linking\",{\"3\":{\"56\":1}}],[\"link\",{\"3\":{\"38\":4,\"50\":6,\"51\":1,\"52\":4,\"61\":2}}],[\"linux中可以使用which\",{\"3\":{\"65\":1}}],[\"linux下会生成libaccount\",{\"3\":{\"50\":1,\"51\":1}}],[\"linux\",{\"0\":{\"98\":1,\"112\":1},\"2\":{\"98\":1,\"112\":1},\"3\":{\"15\":2,\"19\":1,\"29\":1,\"30\":5,\"39\":1,\"98\":1}}],[\"lv\",{\"3\":{\"35\":1}}],[\"ls\",{\"3\":{\"33\":1,\"99\":2}}],[\"lang\",{\"3\":{\"161\":2}}],[\"language\",{\"3\":{\"62\":1,\"146\":3}}],[\"languages\",{\"3\":{\"47\":1,\"48\":1}}],[\"languages是项目语言\",{\"3\":{\"47\":1}}],[\"large\",{\"3\":{\"92\":1,\"102\":1,\"146\":1}}],[\"largest\",{\"3\":{\"92\":1}}],[\"layout\",{\"3\":{\"71\":1}}],[\"launch\",{\"3\":{\"63\":1,\"65\":3}}],[\"last\",{\"3\":{\"30\":1,\"99\":1}}],[\"label\",{\"3\":{\"13\":1,\"65\":1,\"146\":12}}],[\"latest\",{\"3\":{\"11\":3,\"72\":1,\"99\":4,\"120\":1}}],[\"lot\",{\"3\":{\"146\":1}}],[\"look\",{\"3\":{\"124\":1}}],[\"lose\",{\"3\":{\"120\":1}}],[\"losing\",{\"0\":{\"120\":1},\"2\":{\"120\":1}}],[\"lost\",{\"3\":{\"29\":1}}],[\"long\",{\"3\":{\"118\":2}}],[\"logger\",{\"3\":{\"152\":1,\"158\":2}}],[\"logging\",{\"3\":{\"146\":2,\"148\":1}}],[\"loggc\",{\"3\":{\"118\":2}}],[\"log\",{\"3\":{\"117\":6,\"118\":9,\"119\":8,\"120\":15,\"121\":23,\"122\":2,\"123\":3,\"124\":7,\"156\":1,\"161\":4}}],[\"logs\",{\"0\":{\"120\":1,\"121\":1,\"122\":1},\"2\":{\"120\":1,\"121\":1,\"122\":1},\"3\":{\"117\":2,\"119\":1,\"120\":2,\"121\":3,\"122\":2,\"124\":3}}],[\"logical\",{\"3\":{\"29\":1,\"30\":1}}],[\"location\",{\"0\":{\"122\":1},\"2\":{\"122\":1},\"3\":{\"122\":1}}],[\"locations\",{\"3\":{\"71\":2,\"124\":1}}],[\"local\",{\"3\":{\"59\":1,\"71\":9,\"118\":1}}],[\"localhost\",{\"3\":{\"12\":1,\"13\":1,\"14\":1,\"161\":1}}],[\"lock\",{\"3\":{\"35\":1,\"118\":2}}],[\"loadonstartup\",{\"3\":{\"158\":1}}],[\"loaderhidingresourceroot\",{\"3\":{\"155\":1}}],[\"loadclass\",{\"3\":{\"148\":1}}],[\"loads\",{\"3\":{\"97\":1}}],[\"load\",{\"3\":{\"13\":1,\"148\":5}}],[\"lurj\",{\"3\":{\"10\":1,\"25\":1,\"29\":2,\"30\":2,\"31\":2,\"32\":2,\"33\":1,\"34\":3,\"35\":3}}],[\"lurj7988\",{\"3\":{\"9\":1}}],[\"部署和生成站点等构建步骤\",{\"3\":{\"140\":1}}],[\"部署\",{\"0\":{\"11\":1},\"2\":{\"11\":1}}],[\"sm\",{\"3\":{\"156\":1}}],[\"skipped=\",{\"3\":{\"146\":1}}],[\"skipped\",{\"3\":{\"146\":1}}],[\"ss\",{\"3\":{\"124\":1}}],[\"ssh远程连接ubuntu主机\",{\"3\":{\"62\":1}}],[\"ssh远程开发\",{\"3\":{\"62\":1}}],[\"sshd\",{\"3\":{\"26\":3}}],[\"ssh目录下的authorized\",{\"3\":{\"24\":1}}],[\"ssh免密登录\",{\"0\":{\"22\":1},\"2\":{\"22\":1}}],[\"ssh\",{\"1\":{\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1},\"3\":{\"16\":4,\"23\":2,\"24\":1,\"25\":1,\"26\":4,\"62\":2}}],[\"snprintf\",{\"3\":{\"118\":3}}],[\"snippet\",{\"3\":{\"97\":1}}],[\"saying\",{\"3\":{\"146\":2}}],[\"say\",{\"3\":{\"121\":1}}],[\"saved\",{\"3\":{\"118\":1}}],[\"same\",{\"3\":{\"118\":1}}],[\"saliency\",{\"3\":{\"61\":1}}],[\"spring想实现的目标是所有实现了servletcontextinitializer接口的bean都能拿到servletcontext对象\",{\"3\":{\"157\":1}}],[\"springframework\",{\"3\":{\"152\":1,\"157\":1}}],[\"spring\",{\"3\":{\"151\":1}}],[\"springboot也可以通过实现tomcatconnectorcustomizer接口进行配置\",{\"3\":{\"161\":1}}],[\"springboot可以通过实现webserverfactorycustomizer接口对errorreportvalve进行配置\",{\"3\":{\"161\":1}}],[\"springboot可以通过配置关闭异常显示\",{\"3\":{\"161\":1}}],[\"springboot基于tomcatstarter拿到的tomcat容器对象做了进一步优化\",{\"3\":{\"159\":1}}],[\"springboot基于servlet3\",{\"3\":{\"159\":1}}],[\"springboot中tomcat的启动时机是在容器启动时\",{\"3\":{\"159\":1}}],[\"springboot中的servletcontainerinitializer的实现类\",{\"0\":{\"155\":1},\"2\":{\"155\":1}}],[\"springboot中的tomcat如何加载servlet\",{\"0\":{\"153\":1},\"2\":{\"153\":1}}],[\"springboot使用内嵌tomcat完成了tomcat的启动\",{\"3\":{\"159\":1}}],[\"springboot会自动装配springmvc\",{\"3\":{\"158\":1}}],[\"springboot确实搞了一个实现类tomcatstarter来实现servletcontainerinitializer接口并实现了onstartup方法\",{\"3\":{\"155\":1}}],[\"springboot启动类的mian方法中会执行springapplication\",{\"3\":{\"150\":1}}],[\"springboot启动tomcat的时机\",{\"0\":{\"150\":1},\"2\":{\"150\":1}}],[\"springboot是如何使用的内置tomcat\",{\"3\":{\"147\":1}}],[\"special\",{\"3\":{\"99\":1}}],[\"specific\",{\"3\":{\"99\":1}}],[\"space\",{\"3\":{\"29\":1}}],[\"site\",{\"3\":{\"145\":2,\"146\":2}}],[\"site生命周期\",{\"0\":{\"139\":1},\"2\":{\"139\":1}}],[\"single\",{\"3\":{\"123\":1}}],[\"since\",{\"3\":{\"71\":1,\"99\":1,\"146\":1}}],[\"significant\",{\"3\":{\"122\":1}}],[\"silicon\",{\"0\":{\"113\":1},\"2\":{\"113\":1}}],[\"simply\",{\"3\":{\"98\":1}}],[\"simpler\",{\"3\":{\"146\":1}}],[\"simple\",{\"3\":{\"94\":1,\"124\":1}}],[\"sizeof\",{\"3\":{\"118\":3}}],[\"sizes\",{\"3\":{\"32\":1}}],[\"size\",{\"3\":{\"29\":3,\"30\":6,\"35\":1,\"117\":1,\"118\":1,\"119\":1}}],[\"src\",{\"3\":{\"51\":1,\"146\":1}}],[\"socketprocessorbase\",{\"3\":{\"161\":2}}],[\"solution\",{\"0\":{\"124\":1},\"2\":{\"124\":1},\"3\":{\"124\":1,\"146\":1}}],[\"software\",{\"3\":{\"92\":2}}],[\"sourcepath\",{\"3\":{\"148\":1}}],[\"sources\",{\"3\":{\"70\":1}}],[\"source\",{\"3\":{\"56\":2,\"57\":2,\"72\":2,\"92\":1,\"97\":1,\"98\":2}}],[\"sometimes\",{\"3\":{\"100\":1}}],[\"some\",{\"3\":{\"56\":1}}],[\"so代表shared\",{\"3\":{\"39\":1}}],[\"so\",{\"3\":{\"39\":2,\"51\":5,\"71\":1,\"121\":1,\"124\":1}}],[\"s文件汇编成xx\",{\"3\":{\"38\":1}}],[\"s的汇编文件\",{\"3\":{\"38\":1}}],[\"synchronized\",{\"3\":{\"148\":3,\"152\":1,\"156\":1}}],[\"syncing\",{\"3\":{\"30\":1}}],[\"symlink\",{\"3\":{\"100\":2}}],[\"systems\",{\"3\":{\"29\":1,\"30\":1}}],[\"system\",{\"3\":{\"15\":1,\"71\":3,\"146\":2,\"161\":1}}],[\"swap\",{\"3\":{\"29\":1,\"30\":1}}],[\"swapoff\",{\"3\":{\"29\":1,\"30\":1}}],[\"sda4进行格式化\",{\"3\":{\"31\":1}}],[\"sda4\",{\"3\":{\"30\":1,\"31\":1,\"32\":2,\"34\":2,\"35\":1}}],[\"sda3\",{\"3\":{\"30\":1}}],[\"sda2\",{\"3\":{\"30\":1,\"35\":1}}],[\"sda1\",{\"3\":{\"30\":1}}],[\"sda\",{\"3\":{\"29\":2,\"30\":2}}],[\"shutdown\",{\"3\":{\"152\":4}}],[\"shstart脚本最终会执行bootstrap的mian方法\",{\"3\":{\"148\":1}}],[\"showserverinfo=\",{\"3\":{\"161\":1}}],[\"showreport=\",{\"3\":{\"161\":1}}],[\"shown\",{\"3\":{\"119\":1,\"124\":1}}],[\"shortcomings\",{\"3\":{\"124\":1}}],[\"shot\",{\"3\":{\"102\":1}}],[\"should\",{\"3\":{\"71\":1,\"97\":1,\"98\":1,\"145\":1}}],[\"shells\",{\"3\":{\"98\":1,\"99\":1}}],[\"shell\",{\"3\":{\"95\":2,\"99\":1,\"100\":1}}],[\"share\",{\"3\":{\"71\":1,\"92\":1}}],[\"shared\",{\"3\":{\"39\":3,\"50\":1,\"51\":2}}],[\"shape\",{\"3\":{\"61\":1}}],[\"shm\",{\"3\":{\"35\":1}}],[\"sh\",{\"3\":{\"15\":1,\"95\":1,\"97\":6,\"146\":2}}],[\"sun\",{\"3\":{\"161\":3}}],[\"suite\",{\"3\":{\"146\":1}}],[\"successrate=\",{\"3\":{\"146\":1}}],[\"successfully\",{\"3\":{\"146\":1}}],[\"such\",{\"3\":{\"123\":1}}],[\"suffixes\",{\"3\":{\"124\":1}}],[\"suffixing\",{\"3\":{\"124\":1}}],[\"suffix\",{\"3\":{\"124\":1}}],[\"sure\",{\"3\":{\"146\":1}}],[\"surefirebooterforkexception\",{\"3\":{\"146\":1}}],[\"surefirebooter7106199231689045505\",{\"3\":{\"146\":2}}],[\"surefire2911789998602964175tmp\",{\"3\":{\"146\":2}}],[\"surefirereportmojo\",{\"3\":{\"145\":1}}],[\"surefireplugin\",{\"3\":{\"143\":1}}],[\"surefire\",{\"0\":{\"141\":1,\"143\":1,\"145\":1},\"1\":{\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1},\"2\":{\"141\":1,\"143\":1,\"145\":1},\"3\":{\"141\":2,\"142\":2,\"143\":3,\"145\":5,\"146\":44}}],[\"surrounding\",{\"3\":{\"92\":1}}],[\"surface\",{\"3\":{\"61\":1}}],[\"suppose\",{\"3\":{\"120\":1,\"121\":1}}],[\"supports\",{\"3\":{\"146\":1}}],[\"support\",{\"0\":{\"69\":1},\"2\":{\"69\":1}}],[\"supplied\",{\"3\":{\"118\":1}}],[\"superres\",{\"3\":{\"61\":2}}],[\"superblocks\",{\"3\":{\"31\":1}}],[\"superblock\",{\"3\":{\"31\":1}}],[\"super\",{\"3\":{\"14\":1,\"151\":1,\"158\":1}}],[\"sum\",{\"3\":{\"63\":3,\"65\":3}}],[\"summary=\",{\"3\":{\"146\":1}}],[\"summary\",{\"3\":{\"32\":1}}],[\"sudo\",{\"3\":{\"21\":1,\"26\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":3,\"41\":2,\"44\":2,\"61\":1,\"64\":4,\"69\":1,\"70\":4,\"71\":3,\"103\":1}}],[\"subshell\",{\"3\":{\"99\":1}}],[\"sub\",{\"3\":{\"15\":3}}],[\"scifail\",{\"3\":{\"156\":1}}],[\"sci\",{\"3\":{\"156\":2}}],[\"script\",{\"0\":{\"97\":1},\"2\":{\"97\":1},\"3\":{\"97\":4,\"98\":1}}],[\"scraped\",{\"3\":{\"13\":1}}],[\"scrape\",{\"3\":{\"13\":6}}],[\"scanning\",{\"3\":{\"56\":1}}],[\"scheme\",{\"3\":{\"13\":1,\"117\":1}}],[\"s\",{\"3\":{\"13\":1,\"17\":3,\"26\":1,\"29\":1,\"30\":2,\"38\":4,\"45\":2,\"56\":4,\"71\":1,\"92\":1,\"97\":3,\"118\":9,\"121\":1,\"148\":1,\"152\":1}}],[\"stopped\",{\"3\":{\"148\":1}}],[\"stopatentry\",{\"3\":{\"65\":1}}],[\"stored\",{\"3\":{\"31\":1}}],[\"store\",{\"3\":{\"10\":1}}],[\"studio\",{\"0\":{\"62\":1},\"2\":{\"62\":1},\"3\":{\"62\":1}}],[\"stereo\",{\"3\":{\"61\":1}}],[\"steps\",{\"3\":{\"56\":9}}],[\"stitching\",{\"3\":{\"61\":1}}],[\"strlen\",{\"3\":{\"118\":1}}],[\"str\",{\"3\":{\"118\":2}}],[\"strerror\",{\"3\":{\"118\":1}}],[\"stream\",{\"3\":{\"118\":2}}],[\"strequal\",{\"3\":{\"55\":1}}],[\"stringutils\",{\"3\":{\"158\":3}}],[\"string\",{\"3\":{\"57\":1,\"118\":1,\"148\":3,\"154\":4,\"158\":5,\"161\":1}}],[\"string>\",{\"3\":{\"57\":1}}],[\"structured\",{\"3\":{\"61\":1}}],[\"structure\",{\"3\":{\"32\":1}}],[\"std=c++14\",{\"3\":{\"65\":1}}],[\"std\",{\"3\":{\"38\":2,\"65\":1,\"66\":4}}],[\"stacktrace=never\",{\"3\":{\"161\":1}}],[\"standardcontext\",{\"3\":{\"156\":2}}],[\"standardhost\",{\"3\":{\"149\":1}}],[\"standardengine\",{\"3\":{\"149\":1}}],[\"standardservice\",{\"3\":{\"149\":1}}],[\"standardserver\",{\"3\":{\"149\":1}}],[\"standalone\",{\"3\":{\"145\":1}}],[\"state\",{\"3\":{\"148\":5}}],[\"static\",{\"3\":{\"13\":4,\"39\":1,\"50\":4,\"148\":2,\"158\":2}}],[\"stamp\",{\"3\":{\"124\":1}}],[\"stability\",{\"3\":{\"99\":1}}],[\"stable\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"116\":1},\"3\":{\"36\":1,\"99\":2}}],[\"starter\",{\"3\":{\"152\":3,\"155\":2,\"157\":1}}],[\"startinternal都会被调用\",{\"3\":{\"156\":1}}],[\"startinternal\",{\"3\":{\"148\":2,\"156\":1}}],[\"starting\",{\"3\":{\"148\":1}}],[\"start方法执行后各个元素的init\",{\"3\":{\"156\":1}}],[\"start方法由父类lifecyclebase实现的\",{\"3\":{\"148\":1}}],[\"start方法\",{\"3\":{\"148\":1}}],[\"start方法中会先执行init方法\",{\"3\":{\"148\":1}}],[\"startupstep\",{\"3\":{\"151\":1}}],[\"startupinstance\",{\"3\":{\"148\":2}}],[\"startupclass\",{\"3\":{\"148\":2}}],[\"startup\",{\"3\":{\"148\":2}}],[\"starts\",{\"3\":{\"120\":1}}],[\"start\",{\"0\":{\"68\":1},\"2\":{\"68\":1},\"3\":{\"29\":1,\"30\":1,\"99\":1,\"124\":1,\"148\":10,\"149\":3,\"151\":2,\"152\":2,\"156\":1}}],[\"session\",{\"3\":{\"157\":1}}],[\"sessionconfiguringinitializer\",{\"3\":{\"157\":1}}],[\"selfinitialize\",{\"3\":{\"157\":2}}],[\"select\",{\"3\":{\"14\":1}}],[\"servlet就是dispatcherservlet\",{\"3\":{\"158\":1}}],[\"servlet的mapping配置在这里完成\",{\"3\":{\"158\":1}}],[\"servlet注册完后会返回一个registration对象\",{\"3\":{\"158\":1}}],[\"servlet注册在这里完成\",{\"3\":{\"158\":1}}],[\"servletclass\",{\"3\":{\"154\":1}}],[\"servletcontainerinitializer\",{\"3\":{\"156\":1,\"157\":1}}],[\"servletcontainerinitializer的实现类执行onstartup方法的时机\",{\"0\":{\"156\":1},\"2\":{\"156\":1}}],[\"servletcontainerinitializer文件的方式相比还有一种更加简单粗暴的方式\",{\"3\":{\"155\":1}}],[\"servletcontainerinitializer文件在springboot项目中也没有\",{\"3\":{\"155\":1}}],[\"servletcontainerinitializer文件\",{\"3\":{\"154\":1}}],[\"servletcontextinitializer的实现类之一dispatcherservletregistrationbean完成了dispatcherservlet向tomcat容器的注册\",{\"3\":{\"159\":1}}],[\"servletcontextinitializer本身是一个\",{\"3\":{\"157\":1}}],[\"servletcontextinitializer\",{\"3\":{\"152\":3,\"155\":3,\"157\":12,\"158\":1}}],[\"servletcontext\",{\"3\":{\"151\":5,\"154\":2,\"156\":1,\"157\":14,\"158\":9}}],[\"servlet>\",{\"3\":{\"154\":1,\"158\":1}}],[\"servletname\",{\"3\":{\"154\":3}}],[\"servletregistrationbean<t\",{\"3\":{\"158\":1}}],[\"servletregistration\",{\"3\":{\"154\":3,\"158\":2}}],[\"servlet对象是如何被注册到tomcat容器中的呢\",{\"3\":{\"154\":1}}],[\"servlet3\",{\"0\":{\"154\":1},\"2\":{\"154\":1},\"3\":{\"154\":1}}],[\"servlet\",{\"3\":{\"151\":1,\"154\":3,\"155\":2,\"157\":1,\"158\":3}}],[\"servletexception\",{\"3\":{\"151\":1,\"156\":1,\"157\":2,\"158\":1}}],[\"servletwebserverfactory\",{\"3\":{\"151\":1,\"157\":1}}],[\"servletwebserverapplicationcontext\",{\"0\":{\"151\":1},\"2\":{\"151\":1},\"3\":{\"151\":1,\"157\":1}}],[\"services目录下创建javax\",{\"3\":{\"154\":1}}],[\"service\",{\"3\":{\"149\":10,\"161\":1}}],[\"service对象的init方法是由父类lifecyclebase实现的\",{\"3\":{\"148\":1}}],[\"service类的实现方法\",{\"3\":{\"148\":2}}],[\"server的start方法会调用其父类lifecyclebase的公共start方法\",{\"3\":{\"148\":1}}],[\"server类的实现方式\",{\"3\":{\"148\":2}}],[\"server\",{\"3\":{\"21\":1,\"122\":1,\"148\":9,\"149\":9,\"151\":1,\"152\":2,\"161\":4}}],[\"semver\",{\"3\":{\"99\":1}}],[\"several\",{\"3\":{\"72\":1}}],[\"seethe\",{\"3\":{\"146\":1}}],[\"see\",{\"3\":{\"71\":1,\"72\":1,\"98\":1}}],[\"section\",{\"3\":{\"145\":1}}],[\"sector\",{\"3\":{\"29\":1,\"30\":3}}],[\"sectors\",{\"3\":{\"29\":3,\"30\":4}}],[\"second\",{\"3\":{\"13\":1,\"58\":2}}],[\"seconds\",{\"3\":{\"13\":2}}],[\"setproperty\",{\"3\":{\"161\":3}}],[\"setshowreport\",{\"3\":{\"161\":1}}],[\"setshowserverinfo\",{\"3\":{\"161\":1}}],[\"setsocketoptions\",{\"3\":{\"161\":1}}],[\"setstarter\",{\"3\":{\"152\":1}}],[\"setstateinternal\",{\"3\":{\"148\":3}}],[\"setmultipartconfig\",{\"3\":{\"158\":2}}],[\"setloadonstartup\",{\"3\":{\"158\":2}}],[\"setinitparameter\",{\"3\":{\"157\":1}}],[\"setattribute\",{\"3\":{\"156\":1}}],[\"setawait\",{\"3\":{\"148\":1}}],[\"set<class<\",{\"3\":{\"156\":3,\"157\":1}}],[\"setresources\",{\"3\":{\"155\":1}}],[\"setrealm\",{\"3\":{\"149\":1}}],[\"setfailctxifservletstartfails\",{\"3\":{\"152\":1}}],[\"setcontainer\",{\"3\":{\"149\":1}}],[\"setdefaulthost\",{\"3\":{\"149\":1}}],[\"setname\",{\"3\":{\"149\":3,\"158\":1}}],[\"settings\",{\"3\":{\"101\":1}}],[\"setupcommands\",{\"3\":{\"65\":1}}],[\"set\",{\"3\":{\"9\":3,\"13\":2,\"58\":1,\"65\":1,\"92\":2,\"93\":3,\"100\":3,\"101\":2,\"117\":1,\"118\":1,\"146\":1,\"148\":1}}],[\"8443\",{\"3\":{\"161\":1}}],[\"881\",{\"3\":{\"161\":1}}],[\"884736\",{\"3\":{\"31\":1}}],[\"8f\",{\"3\":{\"161\":1}}],[\"87\",{\"3\":{\"161\":1}}],[\"877\",{\"3\":{\"146\":16}}],[\"857\",{\"3\":{\"146\":1}}],[\"85899345920\",{\"3\":{\"30\":1}}],[\"8k\",{\"3\":{\"117\":1,\"118\":1}}],[\"83c1c1da\",{\"0\":{\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1}}],[\"8dc8c832\",{\"0\":{\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1}}],[\"819200\",{\"3\":{\"31\":1}}],[\"8g\",{\"3\":{\"30\":1,\"35\":4}}],[\"8080\",{\"3\":{\"161\":1}}],[\"8058109c\",{\"0\":{\"114\":1,\"115\":1}}],[\"802f\",{\"3\":{\"30\":1}}],[\"80\",{\"3\":{\"30\":1}}],[\"8\",{\"0\":{\"54\":1},\"2\":{\"54\":1},\"3\":{\"10\":1,\"54\":1,\"118\":2,\"161\":17}}],[\"2mb\",{\"3\":{\"146\":1}}],[\"245\",{\"3\":{\"146\":1}}],[\"282\",{\"3\":{\"146\":1}}],[\"2<\",{\"3\":{\"143\":1,\"144\":1,\"146\":1}}],[\"29\",{\"3\":{\"124\":1}}],[\"294912\",{\"3\":{\"31\":1}}],[\"2ab91088\",{\"0\":{\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1}}],[\"25\",{\"3\":{\"44\":2}}],[\"253m\",{\"3\":{\"35\":1}}],[\"2654208\",{\"3\":{\"31\":1}}],[\"22\",{\"3\":{\"94\":2,\"99\":3,\"143\":1,\"144\":1,\"146\":1}}],[\"229376\",{\"3\":{\"31\":1}}],[\"220\",{\"3\":{\"11\":2,\"13\":3}}],[\"2g\",{\"3\":{\"30\":1}}],[\"2023\",{\"3\":{\"146\":18}}],[\"2021\",{\"3\":{\"31\":1,\"32\":1}}],[\"20\",{\"3\":{\"124\":1,\"146\":2}}],[\"2019\",{\"3\":{\"124\":1}}],[\"20mb\",{\"3\":{\"119\":1}}],[\"2048\",{\"3\":{\"30\":2}}],[\"209a5215\",{\"3\":{\"30\":1}}],[\"20000\",{\"3\":{\"161\":1}}],[\"200\",{\"3\":{\"10\":1,\"103\":1}}],[\"2\",{\"0\":{\"39\":1,\"42\":1,\"44\":1,\"45\":2,\"46\":1,\"47\":1,\"48\":2,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"152\":1,\"155\":1},\"2\":{\"39\":1,\"42\":1,\"44\":1,\"45\":2,\"46\":1,\"47\":1,\"48\":2,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"152\":1,\"155\":1},\"3\":{\"29\":2,\"30\":2,\"32\":1,\"41\":1,\"56\":1,\"57\":1,\"63\":1,\"65\":2,\"99\":1,\"100\":1,\"119\":1,\"120\":1,\"121\":3,\"146\":6,\"148\":1}}],[\"218\",{\"3\":{\"161\":1}}],[\"21\",{\"3\":{\"94\":1,\"146\":1}}],[\"215\",{\"3\":{\"13\":2}}],[\"216\",{\"3\":{\"13\":1}}],[\"217\",{\"3\":{\"10\":1}}],[\"2>\",{\"3\":{\"12\":1}}],[\"235\",{\"3\":{\"11\":2,\"16\":2}}],[\"gcviewer\",{\"3\":{\"123\":1}}],[\"gceasy\",{\"3\":{\"123\":1}}],[\"gclogfile\",{\"3\":{\"118\":1}}],[\"gclogfilestream\",{\"3\":{\"118\":3}}],[\"gclogfilesize\",{\"3\":{\"118\":4}}],[\"gclogfilesize=100m\",{\"3\":{\"117\":1,\"119\":1}}],[\"gclog\",{\"3\":{\"118\":2}}],[\"gc\",{\"0\":{\"120\":1,\"121\":1,\"122\":1},\"2\":{\"120\":1,\"121\":1,\"122\":1},\"3\":{\"117\":2,\"118\":5,\"119\":8,\"120\":18,\"121\":26,\"122\":5,\"123\":4,\"124\":9}}],[\"gc配置\",{\"1\":{\"117\":1,\"118\":1,\"119\":1,\"120\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1}}],[\"gcc\",{\"3\":{\"19\":1,\"64\":1}}],[\"gcc+\",{\"3\":{\"19\":1}}],[\"gdb\",{\"3\":{\"64\":1,\"65\":4}}],[\"goodbye\",{\"3\":{\"146\":2}}],[\"google开源的命令行参数处理库\",{\"3\":{\"41\":1}}],[\"goal\",{\"3\":{\"145\":1}}],[\"goals>\",{\"3\":{\"144\":1}}],[\"goal>\",{\"3\":{\"144\":2}}],[\"got\",{\"3\":{\"102\":1}}],[\"go\",{\"3\":{\"63\":1,\"65\":1}}],[\"gflags`\",{\"3\":{\"41\":1}}],[\"gflags表示查找gflags库的头文件和库文件的路径\",{\"3\":{\"41\":1}}],[\"generation\",{\"3\":{\"145\":1}}],[\"generated\",{\"3\":{\"120\":1,\"124\":1,\"145\":1}}],[\"generate\",{\"3\":{\"57\":1,\"119\":1,\"120\":1,\"145\":2}}],[\"generator\",{\"3\":{\"57\":2}}],[\"genericwebapplicationcontext\",{\"3\":{\"151\":1,\"157\":1}}],[\"generic\",{\"3\":{\"10\":3}}],[\"getorder\",{\"3\":{\"161\":1}}],[\"getmessage\",{\"3\":{\"161\":2}}],[\"getmethod\",{\"3\":{\"148\":2}}],[\"getinputstream\",{\"3\":{\"161\":1}}],[\"getresource\",{\"3\":{\"161\":1}}],[\"getfile\",{\"3\":{\"161\":2}}],[\"getfacade\",{\"3\":{\"156\":1}}],[\"getdescription\",{\"3\":{\"158\":1}}],[\"getloadonstartup\",{\"3\":{\"158\":1}}],[\"getpipeline\",{\"3\":{\"161\":1}}],[\"getparent\",{\"3\":{\"161\":1}}],[\"getpath\",{\"3\":{\"158\":1}}],[\"getportsdescription\",{\"3\":{\"152\":1}}],[\"getstring\",{\"3\":{\"156\":1}}],[\"getselfinitializer\",{\"3\":{\"151\":2,\"157\":2}}],[\"getservletname\",{\"3\":{\"158\":1}}],[\"getservlet\",{\"3\":{\"158\":2}}],[\"getservletcontextinitializerbeans\",{\"3\":{\"157\":1}}],[\"getservletcontext\",{\"3\":{\"151\":1,\"156\":2,\"157\":1}}],[\"getservice\",{\"3\":{\"149\":1}}],[\"getserver\",{\"3\":{\"148\":4,\"149\":4}}],[\"getvalue\",{\"3\":{\"156\":1}}],[\"getvaliddocumentroot\",{\"3\":{\"155\":1}}],[\"getkey\",{\"3\":{\"156\":1}}],[\"gettomcatwebserver\",{\"3\":{\"152\":1,\"157\":1}}],[\"getbeanfactory\",{\"3\":{\"151\":2,\"157\":1}}],[\"getwebserver\",{\"3\":{\"151\":1,\"152\":1,\"157\":2}}],[\"getwebserverfactory\",{\"3\":{\"151\":1,\"157\":1}}],[\"getapplicationstartup\",{\"3\":{\"151\":1}}],[\"gethost\",{\"3\":{\"149\":1,\"152\":1,\"157\":1}}],[\"getengine\",{\"3\":{\"149\":3}}],[\"getcanonicalpath\",{\"3\":{\"161\":1}}],[\"getcatalinahome\",{\"3\":{\"161\":1}}],[\"getcontainer\",{\"3\":{\"149\":2}}],[\"getconstructor\",{\"3\":{\"148\":1}}],[\"getclass\",{\"3\":{\"148\":2,\"151\":1}}],[\"get\",{\"3\":{\"41\":2,\"64\":4,\"93\":1,\"98\":1,\"99\":1,\"101\":1,\"121\":1}}],[\"g++的路径\",{\"3\":{\"65\":1}}],[\"g++确定g++的路径\",{\"3\":{\"65\":1}}],[\"g++\",{\"2\":{\"41\":1},\"3\":{\"38\":4,\"41\":3,\"64\":1,\"65\":4,\"70\":1}}],[\"grows\",{\"3\":{\"146\":1}}],[\"groupid>\",{\"3\":{\"143\":1,\"144\":1,\"145\":1,\"146\":3}}],[\"group\",{\"3\":{\"31\":1,\"32\":1,\"65\":1}}],[\"graceful\",{\"3\":{\"152\":1}}],[\"gracefulshutdown\",{\"3\":{\"152\":2}}],[\"grant\",{\"3\":{\"14\":1}}],[\"grafana监控模板下载地址https\",{\"3\":{\"11\":1}}],[\"grafana访问地址http\",{\"3\":{\"11\":1}}],[\"grafana\",{\"1\":{\"11\":1,\"12\":1,\"13\":1,\"14\":1},\"3\":{\"11\":6}}],[\"gib\",{\"3\":{\"29\":1,\"30\":2}}],[\"gitlab\",{\"1\":{\"103\":1,\"104\":1,\"105\":1,\"106\":1},\"3\":{\"103\":1,\"104\":1,\"105\":1,\"106\":1}}],[\"gitee\",{\"3\":{\"10\":1}}],[\"git配置\",{\"0\":{\"10\":1},\"2\":{\"10\":1}}],[\"githubusercontent\",{\"3\":{\"97\":2}}],[\"github\",{\"3\":{\"9\":1,\"12\":1,\"14\":1,\"18\":1,\"20\":1,\"44\":1,\"62\":1,\"70\":1}}],[\"git\",{\"1\":{\"9\":1,\"10\":1},\"3\":{\"9\":12,\"44\":2}}],[\"git常用命令\",{\"0\":{\"9\":1},\"2\":{\"9\":1}}],[\"gpt\",{\"3\":{\"29\":1,\"30\":2}}],[\"gssapi\",{\"3\":{\"26\":1}}],[\"g\",{\"0\":{\"41\":1},\"3\":{\"17\":1,\"30\":1,\"65\":1,\"71\":2,\"93\":1,\"99\":1}}],[\"gnu\",{\"3\":{\"15\":2,\"19\":1}}],[\"globals\",{\"3\":{\"156\":1}}],[\"global\",{\"3\":{\"13\":4}}],[\"001\",{\"3\":{\"161\":2}}],[\"0标准\",{\"3\":{\"159\":1}}],[\"0标准中提供了一个不用web\",{\"3\":{\"154\":1}}],[\"0标准可以不使用web\",{\"0\":{\"154\":1},\"2\":{\"154\":1}}],[\"02965824114494373512tmp\",{\"3\":{\"146\":2}}],[\"06t10\",{\"3\":{\"146\":2}}],[\"06\",{\"3\":{\"146\":34}}],[\"0<\",{\"3\":{\"145\":1,\"146\":2}}],[\"01\",{\"3\":{\"124\":1,\"146\":2}}],[\"0l\",{\"3\":{\"118\":2}}],[\"0a7030ed\",{\"0\":{\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1}}],[\"04\",{\"3\":{\"70\":1}}],[\"0x00007fb692cf1000\",{\"3\":{\"51\":1}}],[\"0k\",{\"3\":{\"35\":1}}],[\"0m\",{\"3\":{\"35\":2}}],[\"0\",{\"3\":{\"10\":1,\"14\":4,\"17\":2,\"32\":2,\"34\":2,\"35\":4,\"38\":1,\"47\":2,\"48\":2,\"55\":1,\"63\":3,\"65\":7,\"66\":1,\"94\":2,\"99\":3,\"100\":2,\"103\":1,\"117\":1,\"118\":7,\"119\":1,\"120\":4,\"121\":3,\"146\":6,\"149\":4,\"157\":1,\"158\":1,\"161\":5}}],[\"ok\",{\"3\":{\"156\":1}}],[\"our\",{\"3\":{\"146\":4}}],[\"out\",{\"3\":{\"118\":3}}],[\"outputstream\",{\"3\":{\"118\":1,\"161\":1}}],[\"output\",{\"3\":{\"38\":1,\"57\":1,\"118\":2,\"146\":8}}],[\"outlook\",{\"3\":{\"10\":1}}],[\"override\",{\"3\":{\"124\":1,\"151\":1,\"152\":1,\"157\":1,\"158\":2,\"161\":3}}],[\"over\",{\"3\":{\"120\":1}}],[\"oldest\",{\"3\":{\"120\":1}}],[\"old\",{\"0\":{\"120\":1},\"2\":{\"120\":1},\"3\":{\"120\":2,\"121\":3,\"124\":1}}],[\"os\",{\"3\":{\"118\":1,\"161\":2}}],[\"ostream\",{\"3\":{\"118\":1}}],[\"owned\",{\"3\":{\"71\":1}}],[\"other\",{\"3\":{\"71\":1,\"92\":1}}],[\"objdetect\",{\"3\":{\"61\":2}}],[\"objectutils\",{\"3\":{\"158\":1}}],[\"objectprovider<multipartconfigelement>\",{\"3\":{\"158\":1}}],[\"object\",{\"3\":{\"39\":1,\"56\":1,\"148\":3}}],[\"o二进制文件进行链接\",{\"3\":{\"38\":1}}],[\"o的二进制目标文件\",{\"3\":{\"38\":1}}],[\"ordered\",{\"3\":{\"158\":1,\"161\":1}}],[\"organizations\",{\"3\":{\"92\":2}}],[\"org\",{\"3\":{\"72\":1,\"93\":2,\"100\":10,\"101\":1,\"146\":7,\"148\":2,\"157\":1,\"161\":14}}],[\"or\",{\"3\":{\"30\":1,\"38\":2,\"55\":1,\"71\":1,\"92\":1,\"97\":4,\"98\":1,\"99\":5,\"102\":2,\"118\":1,\"143\":1,\"146\":5}}],[\"origin\",{\"3\":{\"9\":4}}],[\"officeweb\",{\"3\":{\"161\":1}}],[\"official\",{\"3\":{\"146\":1}}],[\"off\",{\"3\":{\"55\":1,\"118\":1}}],[\"of\",{\"0\":{\"100\":1},\"2\":{\"100\":1},\"3\":{\"29\":1,\"30\":3,\"56\":2,\"72\":1,\"92\":3,\"94\":1,\"97\":1,\"99\":7,\"100\":2,\"117\":2,\"118\":3,\"119\":1,\"120\":2,\"123\":1,\"124\":1,\"142\":1,\"143\":2,\"144\":1,\"145\":2,\"146\":3}}],[\"open\",{\"3\":{\"72\":2,\"92\":1,\"98\":1,\"118\":2}}],[\"opencv4\",{\"3\":{\"61\":1,\"71\":3}}],[\"opencv\",{\"0\":{\"61\":1},\"1\":{\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1},\"2\":{\"61\":1},\"3\":{\"61\":56,\"70\":5,\"71\":5,\"72\":3}}],[\"openssh\",{\"3\":{\"21\":1}}],[\"opts\",{\"3\":{\"148\":2}}],[\"option\",{\"3\":{\"146\":1}}],[\"options\",{\"3\":{\"65\":1,\"71\":1,\"146\":1}}],[\"optimal\",{\"3\":{\"30\":1}}],[\"optflow\",{\"3\":{\"61\":1}}],[\"opt\",{\"3\":{\"11\":2,\"33\":1,\"146\":2}}],[\"o\",{\"3\":{\"17\":1,\"30\":1,\"38\":7,\"41\":5,\"56\":3,\"65\":2,\"70\":1,\"97\":1}}],[\"onstartup方法中并没有添加servlet\",{\"3\":{\"157\":1}}],[\"onstartup\",{\"3\":{\"151\":1,\"156\":1,\"157\":3,\"158\":1}}],[\"onrefresh\",{\"3\":{\"151\":2}}],[\"onoccasion\",{\"3\":{\"146\":1}}],[\"only\",{\"3\":{\"29\":1,\"30\":1,\"38\":2,\"71\":1,\"99\":1}}],[\"on\",{\"0\":{\"98\":1,\"111\":1,\"112\":1,\"113\":1},\"2\":{\"98\":1,\"111\":1,\"112\":1,\"113\":1},\"3\":{\"14\":1,\"29\":1,\"30\":1,\"31\":1,\"35\":1,\"55\":1,\"95\":2,\"98\":2,\"102\":1,\"129\":1}}],[\"one\",{\"3\":{\"13\":1,\"102\":1,\"123\":1}}],[\"once\",{\"3\":{\"13\":1,\"70\":1}}],[\"==\",{\"3\":{\"118\":4,\"148\":1,\"151\":2,\"152\":1,\"156\":1,\"157\":2,\"158\":2}}],[\"=>\",{\"3\":{\"51\":1}}],[\"=\",{\"3\":{\"10\":8,\"29\":2,\"30\":2,\"63\":1,\"118\":17,\"148\":12,\"149\":8,\"151\":6,\"152\":5,\"155\":5,\"156\":4,\"157\":8,\"158\":8,\"161\":8}}],[\"port=\",{\"3\":{\"161\":1}}],[\"port\",{\"3\":{\"152\":1}}],[\"pom\",{\"0\":{\"131\":1},\"2\":{\"131\":1},\"3\":{\"141\":1,\"143\":2,\"144\":1,\"145\":1,\"146\":1}}],[\"point\",{\"3\":{\"117\":1}}],[\"points\",{\"3\":{\"99\":1}}],[\"pointer\",{\"3\":{\"99\":1}}],[\"possibly\",{\"3\":{\"158\":1}}],[\"possible\",{\"3\":{\"71\":1}}],[\"poses\",{\"3\":{\"122\":1}}],[\"postprocesscontext\",{\"3\":{\"155\":1,\"157\":1}}],[\"post\",{\"3\":{\"99\":1}}],[\"posix\",{\"3\":{\"95\":1}}],[\"pick\",{\"3\":{\"98\":1}}],[\"py\",{\"3\":{\"63\":2,\"65\":1}}],[\"python\",{\"3\":{\"62\":2,\"63\":3,\"65\":2}}],[\"python开发环境配置\",{\"0\":{\"63\":1},\"2\":{\"63\":1}}],[\"python开发\",{\"3\":{\"62\":1}}],[\"please\",{\"3\":{\"146\":2}}],[\"pluginmanagement>\",{\"3\":{\"143\":1}}],[\"plugins>\",{\"3\":{\"143\":1,\"144\":1,\"145\":1}}],[\"plugins<\",{\"3\":{\"143\":1,\"144\":1,\"145\":1,\"146\":3}}],[\"plugin>\",{\"3\":{\"143\":1,\"144\":1,\"145\":1,\"146\":3}}],[\"plugin<\",{\"3\":{\"143\":1,\"144\":1,\"145\":1,\"146\":3}}],[\"plugin\",{\"0\":{\"131\":1,\"132\":1,\"133\":1,\"134\":2,\"135\":1,\"136\":1,\"137\":1,\"143\":1,\"144\":1,\"145\":1},\"2\":{\"131\":1,\"132\":1,\"133\":1,\"134\":2,\"135\":1,\"136\":1,\"137\":1,\"143\":1,\"144\":1,\"145\":1},\"3\":{\"142\":3,\"143\":2,\"144\":2,\"145\":1,\"146\":11}}],[\"playing\",{\"3\":{\"146\":1}}],[\"platforms\",{\"3\":{\"95\":1}}],[\"place\",{\"3\":{\"38\":1,\"99\":1}}],[\"plot\",{\"3\":{\"61\":1}}],[\"phases>\",{\"3\":{\"146\":1}}],[\"phase>\",{\"3\":{\"146\":1}}],[\"phase\",{\"3\":{\"61\":1,\"143\":1,\"144\":1,\"146\":1}}],[\"photo\",{\"3\":{\"61\":1}}],[\"physical\",{\"3\":{\"29\":1,\"30\":1}}],[\"pkg\",{\"3\":{\"41\":2}}],[\"pmbr\",{\"3\":{\"29\":1,\"30\":1}}],[\"practice\",{\"3\":{\"143\":1}}],[\"privileges\",{\"3\":{\"71\":1}}],[\"private用于说明目标属性的作用范围\",{\"3\":{\"50\":1}}],[\"private\",{\"0\":{\"52\":1},\"2\":{\"52\":1},\"3\":{\"26\":1,\"50\":2,\"52\":4,\"92\":2,\"148\":3,\"151\":1,\"152\":2,\"156\":1,\"157\":4}}],[\"printf\",{\"3\":{\"97\":2}}],[\"printing\",{\"3\":{\"65\":1}}],[\"print\",{\"3\":{\"63\":1}}],[\"preparewebapplicationcontext\",{\"3\":{\"157\":1}}],[\"preparecontext\",{\"3\":{\"152\":2,\"155\":1,\"157\":2}}],[\"prep\",{\"3\":{\"148\":1}}],[\"preprocessing\",{\"3\":{\"56\":1}}],[\"preprocess\",{\"3\":{\"38\":2}}],[\"present\",{\"3\":{\"120\":1,\"121\":1}}],[\"predefined\",{\"3\":{\"71\":1}}],[\"prerequisites\",{\"3\":{\"70\":1}}],[\"prelaunchtask\",{\"3\":{\"65\":1}}],[\"pretty\",{\"3\":{\"65\":1}}],[\"prefix=$home\",{\"3\":{\"71\":1}}],[\"prefix=<安装路径>\",{\"3\":{\"44\":1}}],[\"prefix\",{\"3\":{\"59\":2,\"71\":1}}],[\"prefix`\",{\"3\":{\"44\":1}}],[\"prefix`来指定安装路径\",{\"3\":{\"44\":1}}],[\"protocol=\",{\"3\":{\"161\":1}}],[\"protected\",{\"3\":{\"148\":3,\"149\":1,\"151\":1,\"152\":2,\"155\":2,\"156\":1,\"157\":3,\"158\":5,\"161\":1}}],[\"prop=\",{\"3\":{\"148\":1}}],[\"properties\",{\"3\":{\"146\":1}}],[\"properties<\",{\"3\":{\"146\":1}}],[\"properly\",{\"3\":{\"146\":2}}],[\"produce\",{\"3\":{\"146\":3}}],[\"prompt语法结构分\",{\"3\":{\"115\":1}}],[\"prompt语法结构\",{\"1\":{\"114\":1,\"115\":1}}],[\"prometheus配置\",{\"0\":{\"13\":1},\"2\":{\"13\":1}}],[\"prometheus访问地址http\",{\"3\":{\"11\":1}}],[\"prometheus\",{\"3\":{\"11\":5,\"12\":1,\"13\":3,\"14\":1}}],[\"profile\",{\"3\":{\"97\":3,\"98\":1}}],[\"profiles\",{\"3\":{\"92\":1}}],[\"problem\",{\"3\":{\"121\":1,\"146\":4}}],[\"problemmatcher\",{\"3\":{\"65\":1}}],[\"probably\",{\"3\":{\"29\":1,\"30\":1}}],[\"program\",{\"3\":{\"63\":2,\"65\":3}}],[\"provided\",{\"3\":{\"56\":1}}],[\"provider\",{\"3\":{\"10\":3}}],[\"project>\",{\"3\":{\"143\":1,\"144\":1,\"145\":1}}],[\"projects\",{\"3\":{\"102\":1}}],[\"projectname\",{\"3\":{\"48\":1}}],[\"project\",{\"0\":{\"142\":1},\"2\":{\"142\":1},\"3\":{\"47\":1,\"48\":1,\"50\":2,\"51\":1,\"101\":1,\"102\":1,\"141\":2}}],[\"processsocket\",{\"3\":{\"161\":1}}],[\"process\",{\"3\":{\"14\":1,\"71\":1,\"146\":2,\"161\":2}}],[\"proxy=http\",{\"3\":{\"27\":2}}],[\"proxy\",{\"3\":{\"10\":2}}],[\"proxy配置代理了clash的7890端口\",{\"3\":{\"10\":1}}],[\"period\",{\"3\":{\"120\":1}}],[\"periodically\",{\"3\":{\"13\":1}}],[\"per\",{\"3\":{\"95\":2}}],[\"performed\",{\"3\":{\"71\":1}}],[\"permission\",{\"3\":{\"26\":1}}],[\"permitemptypasswords\",{\"3\":{\"26\":1}}],[\"p\",{\"3\":{\"16\":4,\"17\":2,\"30\":2,\"70\":1}}],[\"pc\",{\"3\":{\"15\":1,\"19\":1}}],[\"parserequestline\",{\"3\":{\"161\":1}}],[\"parseserverxml\",{\"3\":{\"148\":1}}],[\"parse\",{\"3\":{\"148\":1}}],[\"param\",{\"3\":{\"148\":1}}],[\"paramtypes\",{\"3\":{\"148\":1}}],[\"parameters\",{\"3\":{\"71\":1,\"143\":1,\"144\":1,\"145\":1}}],[\"parameter\",{\"3\":{\"71\":1,\"146\":1}}],[\"part\",{\"3\":{\"145\":1}}],[\"particular\",{\"3\":{\"95\":1}}],[\"partition\",{\"3\":{\"30\":3}}],[\"partitions\",{\"3\":{\"29\":1,\"30\":1}}],[\"parent\",{\"3\":{\"143\":1}}],[\"patching\",{\"3\":{\"71\":1}}],[\"path\",{\"3\":{\"13\":1,\"67\":1,\"71\":1,\"99\":1,\"161\":3}}],[\"packaging\",{\"0\":{\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1},\"2\":{\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1}}],[\"package=\",{\"3\":{\"146\":1}}],[\"packagelist=\",{\"3\":{\"146\":1}}],[\"package等都是在执行maven的某个生命周期阶段\",{\"3\":{\"140\":1}}],[\"packages\",{\"3\":{\"71\":1,\"92\":3}}],[\"package方便的定位opencv在系统中的位置和需要添加的依赖\",{\"3\":{\"61\":1}}],[\"package的功能\",{\"3\":{\"61\":1}}],[\"package对它进行引用\",{\"3\":{\"60\":1}}],[\"package寻找<libaryname>库\",{\"3\":{\"60\":1}}],[\"package找到对应的依赖库\",{\"3\":{\"60\":1}}],[\"package\",{\"0\":{\"60\":1},\"2\":{\"60\":1},\"3\":{\"61\":1,\"71\":2,\"93\":1,\"102\":1}}],[\"pack\",{\"3\":{\"62\":1}}],[\"passed\",{\"3\":{\"146\":1}}],[\"pass\",{\"3\":{\"32\":5,\"146\":2}}],[\"passwordauthentication\",{\"3\":{\"26\":2}}],[\"password的字典\",{\"3\":{\"17\":1}}],[\"passwords\",{\"3\":{\"16\":1,\"26\":2}}],[\"password\",{\"3\":{\"16\":2}}],[\"password=expihb666qwe\",{\"3\":{\"14\":1}}],[\"pair进行登录\",{\"3\":{\"26\":1}}],[\"put\",{\"3\":{\"156\":1}}],[\"public\",{\"0\":{\"52\":1},\"2\":{\"52\":1},\"3\":{\"50\":4,\"51\":1,\"52\":3,\"57\":1,\"59\":1,\"92\":2,\"148\":9,\"149\":6,\"151\":1,\"152\":4,\"154\":4,\"155\":1,\"156\":3,\"157\":4,\"158\":7,\"161\":6}}],[\"publickey\",{\"3\":{\"26\":1}}],[\"pub为公钥\",{\"3\":{\"23\":1}}],[\"pull\",{\"3\":{\"11\":2}}],[\"push\",{\"3\":{\"9\":3}}],[\"tmpdir\",{\"3\":{\"148\":1}}],[\"tmpdir=\",{\"3\":{\"148\":1}}],[\"tmpfs\",{\"3\":{\"35\":4}}],[\"title=\",{\"3\":{\"146\":2}}],[\"time=\",{\"3\":{\"146\":1}}],[\"timestamp\",{\"3\":{\"124\":1}}],[\"timeseries\",{\"3\":{\"13\":1}}],[\"time\",{\"3\":{\"118\":8,\"120\":1,\"124\":1}}],[\"timeout\",{\"3\":{\"13\":1}}],[\"turned\",{\"3\":{\"118\":1}}],[\"tutorials\",{\"3\":{\"72\":1}}],[\"tunneled\",{\"3\":{\"26\":1}}],[\"trigger\",{\"3\":{\"152\":1}}],[\"tried\",{\"3\":{\"146\":1}}],[\"truly\",{\"3\":{\"99\":1}}],[\"true>\",{\"3\":{\"57\":2}}],[\"true\",{\"3\":{\"55\":1,\"57\":1,\"63\":1,\"65\":4,\"100\":1,\"118\":1,\"146\":1,\"148\":2,\"152\":1,\"161\":2}}],[\"troubleshooting\",{\"0\":{\"98\":1},\"2\":{\"98\":1}}],[\"translate\",{\"3\":{\"146\":2}}],[\"trained\",{\"3\":{\"71\":1}}],[\"tracking\",{\"3\":{\"61\":1}}],[\"trying\",{\"3\":{\"146\":1}}],[\"try\",{\"0\":{\"119\":1},\"2\":{\"119\":1},\"3\":{\"15\":1,\"98\":1,\"148\":6,\"151\":2,\"152\":1,\"156\":1,\"157\":1,\"161\":2}}],[\"templates\",{\"3\":{\"161\":2}}],[\"tempbuf\",{\"3\":{\"118\":4}}],[\"terminated\",{\"3\":{\"146\":2}}],[\"terminal\",{\"3\":{\"92\":1,\"98\":3}}],[\"team\",{\"3\":{\"129\":1}}],[\"tensorrt\",{\"3\":{\"51\":1}}],[\"testcases=\",{\"3\":{\"146\":1}}],[\"tests=\",{\"3\":{\"146\":1}}],[\"tests\",{\"3\":{\"146\":11}}],[\"testing\",{\"3\":{\"146\":1}}],[\"testfailureignore>\",{\"3\":{\"146\":1}}],[\"testfailureignore\",{\"3\":{\"146\":1}}],[\"test<\",{\"3\":{\"144\":1}}],[\"test>\",{\"3\":{\"57\":4}}],[\"test\",{\"3\":{\"50\":15,\"51\":10,\"57\":1,\"59\":2,\"67\":4,\"141\":1,\"143\":2,\"146\":21}}],[\"text\",{\"3\":{\"26\":1,\"61\":1,\"65\":2,\"146\":2}}],[\"taskthread\",{\"3\":{\"161\":1}}],[\"taskthread$wrappingrunnable\",{\"3\":{\"161\":1}}],[\"tasks\",{\"3\":{\"65\":2,\"67\":4}}],[\"tag\",{\"3\":{\"151\":1}}],[\"take\",{\"3\":{\"119\":1}}],[\"tail\",{\"3\":{\"118\":1}}],[\"taobao\",{\"3\":{\"93\":1,\"100\":2,\"101\":1}}],[\"tabs\",{\"3\":{\"100\":1}}],[\"tabnine\",{\"3\":{\"62\":2}}],[\"tables\",{\"3\":{\"31\":2}}],[\"table\",{\"3\":{\"30\":1}}],[\"target>\",{\"3\":{\"57\":3}}],[\"target\",{\"3\":{\"50\":6,\"51\":2,\"52\":3,\"55\":1,\"56\":7,\"57\":3,\"145\":1,\"146\":6,\"161\":1}}],[\"targets\",{\"3\":{\"13\":4,\"56\":1,\"59\":1}}],[\"tar\",{\"3\":{\"19\":2}}],[\"t\",{\"3\":{\"17\":2,\"30\":1,\"31\":1,\"124\":3,\"148\":6}}],[\"txt阶段的message命令打印\",{\"3\":{\"57\":1}}],[\"txt`\",{\"3\":{\"51\":1}}],[\"txt来一次性编译\",{\"3\":{\"51\":1}}],[\"txt的开头\",{\"3\":{\"48\":1}}],[\"txt为例\",{\"3\":{\"47\":1,\"48\":1,\"49\":1}}],[\"txt\",{\"3\":{\"16\":5,\"42\":1,\"50\":5,\"51\":2,\"57\":1}}],[\"type\",{\"3\":{\"15\":1,\"30\":3,\"63\":1,\"65\":3,\"98\":1}}],[\"thread\",{\"3\":{\"161\":2}}],[\"threadpoolexecutor$worker\",{\"3\":{\"161\":1}}],[\"threadpoolexecutor\",{\"3\":{\"161\":3}}],[\"threads\",{\"3\":{\"161\":3}}],[\"three\",{\"3\":{\"92\":1}}],[\"throw\",{\"3\":{\"151\":2}}],[\"throws\",{\"3\":{\"148\":7,\"149\":1,\"152\":1,\"156\":1,\"157\":2,\"158\":1}}],[\"throwable\",{\"3\":{\"148\":4,\"151\":1}}],[\"than\",{\"3\":{\"120\":1}}],[\"that\",{\"3\":{\"72\":1,\"94\":1,\"97\":1,\"100\":1,\"102\":1,\"120\":1,\"143\":1,\"146\":7}}],[\"thus\",{\"3\":{\"71\":1,\"121\":1}}],[\"this\",{\"3\":{\"13\":1,\"29\":2,\"30\":2,\"56\":1,\"71\":1,\"97\":1,\"99\":6,\"100\":2,\"119\":1,\"120\":1,\"121\":1,\"122\":3,\"124\":1,\"141\":1,\"146\":3,\"151\":6,\"152\":5,\"156\":1,\"157\":8,\"158\":7,\"161\":1}}],[\"their\",{\"3\":{\"146\":1}}],[\"there\",{\"3\":{\"146\":2}}],[\"then\",{\"3\":{\"99\":1,\"120\":2,\"121\":1,\"122\":1,\"124\":2,\"146\":1}}],[\"these\",{\"3\":{\"95\":1,\"98\":1,\"146\":1}}],[\"them\",{\"3\":{\"13\":1,\"29\":1,\"30\":1}}],[\"the\",{\"3\":{\"9\":3,\"13\":5,\"29\":1,\"30\":2,\"38\":1,\"56\":3,\"71\":5,\"72\":2,\"92\":8,\"94\":1,\"97\":9,\"98\":5,\"99\":13,\"100\":2,\"101\":1,\"117\":6,\"118\":2,\"119\":3,\"120\":5,\"121\":3,\"122\":3,\"123\":2,\"124\":10,\"129\":2,\"141\":1,\"143\":5,\"144\":5,\"145\":6,\"146\":29,\"148\":3,\"152\":1,\"161\":4}}],[\"topath\",{\"3\":{\"161\":1}}],[\"toarray\",{\"3\":{\"157\":1}}],[\"tostringarray\",{\"3\":{\"158\":1}}],[\"tostring\",{\"3\":{\"148\":1,\"151\":1}}],[\"tomcat8自带的非法字符拦截机制\",{\"3\":{\"161\":1}}],[\"tomcat启动时会执行该方法\",{\"3\":{\"156\":1}}],[\"tomcat启动后会回调实现类的onstartup方法\",{\"3\":{\"154\":1}}],[\"tomcat就被启动了\",{\"3\":{\"152\":1}}],[\"tomcatwebserver\",{\"3\":{\"152\":2}}],[\"tomcatembeddedcontext\",{\"3\":{\"152\":4,\"155\":2}}],[\"tomcatstarter\",{\"3\":{\"152\":2,\"155\":2,\"157\":4}}],[\"tomcatservletwebserverfactory\",{\"0\":{\"152\":1},\"2\":{\"152\":1},\"3\":{\"152\":1,\"155\":1,\"157\":1}}],[\"tomcatprotocolhandlercustomizer\",{\"3\":{\"152\":1}}],[\"tomcatconnectorcustomizer\",{\"3\":{\"152\":1,\"161\":1}}],[\"tomcatcontextcustomizer\",{\"3\":{\"152\":1}}],[\"tomcat使用抽象模板的设计模式完成了该流程的实现\",{\"3\":{\"148\":1}}],[\"tomcat\",{\"1\":{\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1},\"3\":{\"149\":3,\"152\":14,\"157\":2,\"161\":22}}],[\"toml\",{\"3\":{\"105\":1}}],[\"token\",{\"3\":{\"103\":2}}],[\"together\",{\"3\":{\"51\":2}}],[\"tools\",{\"3\":{\"123\":1}}],[\"tools界面操作\",{\"3\":{\"45\":1}}],[\"tooling\",{\"0\":{\"123\":1},\"2\":{\"123\":1}}],[\"too\",{\"3\":{\"15\":1,\"118\":2,\"146\":1}}],[\"touch\",{\"3\":{\"14\":1,\"24\":1}}],[\"to\",{\"0\":{\"119\":1,\"122\":1},\"2\":{\"119\":1,\"122\":1},\"3\":{\"9\":1,\"13\":7,\"14\":1,\"26\":4,\"29\":4,\"30\":3,\"56\":2,\"71\":7,\"92\":5,\"94\":1,\"95\":1,\"97\":5,\"99\":6,\"100\":4,\"117\":1,\"118\":3,\"119\":2,\"120\":3,\"121\":4,\"122\":5,\"123\":2,\"124\":3,\"143\":2,\"144\":3,\"145\":1,\"146\":14,\"151\":1,\"152\":1}}],[\"nio\",{\"3\":{\"161\":3}}],[\"nio2endpoint$nio2acceptor\",{\"3\":{\"161\":2}}],[\"nio2endpoint$socketprocessor\",{\"3\":{\"161\":1}}],[\"nio2endpoint\",{\"3\":{\"161\":5}}],[\"ninja\",{\"3\":{\"71\":1}}],[\"null\",{\"3\":{\"118\":6,\"148\":9,\"149\":2,\"151\":3,\"152\":2,\"155\":1,\"156\":2,\"157\":2,\"158\":2}}],[\"num++\",{\"3\":{\"118\":1}}],[\"num\",{\"3\":{\"66\":3,\"118\":6}}],[\"numberofgclogfiles=<num\",{\"3\":{\"118\":1}}],[\"numberofgclogfiles=5\",{\"3\":{\"117\":1,\"119\":1,\"120\":1}}],[\"numberofgclogfiles\",{\"3\":{\"118\":5,\"120\":1}}],[\"number\",{\"3\":{\"30\":1,\"117\":1,\"118\":1,\"146\":1}}],[\"nvm\",{\"1\":{\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1},\"3\":{\"94\":4,\"95\":2,\"97\":13,\"98\":3,\"99\":13,\"100\":10}}],[\"npmjs\",{\"3\":{\"93\":1}}],[\"npm\",{\"0\":{\"92\":1,\"93\":1},\"1\":{\"92\":1,\"93\":1},\"2\":{\"92\":1,\"93\":1},\"3\":{\"92\":6,\"93\":5,\"94\":3,\"100\":2,\"101\":1}}],[\"n表示新建分区\",{\"3\":{\"29\":1}}],[\"nmap\",{\"0\":{\"19\":1},\"1\":{\"19\":1,\"20\":1},\"2\":{\"19\":1},\"3\":{\"19\":2}}],[\"ns\",{\"3\":{\"17\":1}}],[\"n\",{\"3\":{\"17\":2,\"30\":1,\"55\":1,\"70\":1,\"117\":1,\"118\":8,\"146\":1}}],[\"net\",{\"3\":{\"161\":6}}],[\"net=host\",{\"3\":{\"11\":2}}],[\"need\",{\"3\":{\"118\":3,\"144\":1,\"146\":1}}],[\"newoutputstream\",{\"3\":{\"161\":1}}],[\"neworigin\",{\"3\":{\"9\":1}}],[\"new变成了lifecyclestate\",{\"3\":{\"148\":1}}],[\"newinstance\",{\"3\":{\"148\":1}}],[\"news\",{\"3\":{\"72\":1}}],[\"new\",{\"3\":{\"13\":1,\"30\":1,\"98\":1,\"99\":2,\"118\":2,\"120\":1,\"121\":2,\"124\":1,\"146\":1,\"148\":5,\"149\":4,\"151\":4,\"152\":2,\"155\":3,\"156\":2,\"157\":4,\"158\":1,\"161\":2}}],[\"na\",{\"3\":{\"161\":4}}],[\"naming\",{\"3\":{\"117\":1,\"122\":1}}],[\"named\",{\"3\":{\"122\":1}}],[\"names\",{\"3\":{\"118\":1}}],[\"namespace\",{\"3\":{\"65\":1}}],[\"name>`\",{\"3\":{\"13\":1}}],[\"name=\",{\"3\":{\"146\":2,\"161\":1}}],[\"name=grafana\",{\"3\":{\"11\":1}}],[\"name=prometheus\",{\"3\":{\"11\":1}}],[\"name\",{\"3\":{\"10\":1,\"13\":4,\"41\":1,\"57\":1,\"63\":1,\"65\":2,\"118\":17,\"124\":2,\"158\":5}}],[\"naulu\",{\"3\":{\"23\":1,\"25\":1}}],[\"naulurenjie\",{\"3\":{\"10\":1}}],[\"now\",{\"3\":{\"94\":3,\"121\":1,\"123\":1}}],[\"notificationemitter\",{\"3\":{\"156\":1}}],[\"notice\",{\"3\":{\"146\":1}}],[\"noticed\",{\"3\":{\"146\":2}}],[\"notnull\",{\"3\":{\"152\":1}}],[\"note2=\",{\"3\":{\"146\":1}}],[\"note1=\",{\"3\":{\"146\":1}}],[\"note\",{\"3\":{\"100\":1,\"146\":1}}],[\"notfound\",{\"3\":{\"55\":1}}],[\"not\",{\"3\":{\"38\":3,\"55\":1,\"71\":3,\"98\":1,\"99\":1,\"100\":1,\"118\":1,\"120\":1,\"124\":1,\"146\":10,\"152\":1,\"158\":2,\"161\":1}}],[\"non\",{\"3\":{\"32\":1}}],[\"nohup\",{\"3\":{\"14\":1}}],[\"nodejs\",{\"3\":{\"100\":3}}],[\"nodev0\",{\"3\":{\"99\":2}}],[\"node\",{\"0\":{\"100\":1},\"2\":{\"100\":1},\"3\":{\"12\":2,\"13\":1,\"94\":7,\"95\":1,\"99\":14,\"100\":4}}],[\"no\",{\"3\":{\"9\":1,\"26\":5,\"55\":1,\"56\":1,\"70\":1,\"98\":1,\"118\":1,\"152\":1,\"155\":1}}],[\"huge\",{\"3\":{\"146\":1}}],[\"hundreds\",{\"3\":{\"72\":1}}],[\"higher\",{\"3\":{\"146\":1}}],[\"highgui\",{\"3\":{\"61\":1}}],[\"html\",{\"3\":{\"145\":2,\"161\":5}}],[\"http11processor\",{\"3\":{\"161\":2}}],[\"http11inputbuffer\",{\"3\":{\"161\":2}}],[\"http11\",{\"3\":{\"161\":2}}],[\"http\",{\"3\":{\"10\":3,\"12\":1,\"13\":1,\"14\":1,\"27\":1,\"72\":1,\"93\":1,\"101\":1,\"103\":1,\"161\":1}}],[\"https\",{\"3\":{\"9\":1,\"10\":2,\"27\":1,\"44\":1,\"62\":2,\"63\":1,\"65\":1,\"70\":1,\"93\":1,\"97\":2,\"101\":1}}],[\"hh\",{\"3\":{\"124\":1}}],[\"h左右\",{\"3\":{\"62\":1}}],[\"handlesubclassexception\",{\"3\":{\"148\":1}}],[\"hans\",{\"3\":{\"62\":1}}],[\"hard\",{\"3\":{\"146\":1}}],[\"happen\",{\"3\":{\"146\":1}}],[\"having\",{\"3\":{\"120\":1,\"146\":1}}],[\"have\",{\"3\":{\"118\":1,\"121\":1,\"123\":1,\"146\":2}}],[\"hash\",{\"3\":{\"61\":1}}],[\"has\",{\"3\":{\"9\":1,\"30\":1,\"119\":1,\"121\":1,\"129\":1,\"146\":1,\"148\":1}}],[\"hfs\",{\"3\":{\"61\":1}}],[\"hdf\",{\"3\":{\"61\":1}}],[\"hobbyist\",{\"3\":{\"102\":1}}],[\"however\",{\"3\":{\"122\":1}}],[\"how\",{\"3\":{\"92\":1,\"146\":2}}],[\"home=\",{\"3\":{\"148\":1}}],[\"home\",{\"3\":{\"33\":1,\"34\":3,\"35\":1,\"51\":1,\"62\":1,\"67\":4,\"97\":3,\"106\":1,\"148\":2}}],[\"host对象有一个属性叫做appbase\",{\"3\":{\"148\":1}}],[\"hostname\",{\"3\":{\"25\":1,\"149\":2}}],[\"host\",{\"3\":{\"16\":2,\"25\":1,\"149\":7,\"152\":2,\"155\":3,\"157\":2}}],[\"h\",{\"3\":{\"16\":4,\"17\":2,\"35\":1,\"50\":3,\"51\":3}}],[\"headers\",{\"3\":{\"71\":1}}],[\"header\",{\"3\":{\"59\":1,\"118\":2}}],[\"hello\",{\"3\":{\"38\":1,\"41\":1}}],[\"help可以看到对应命令\",{\"3\":{\"38\":1}}],[\"help\",{\"3\":{\"15\":1,\"29\":2,\"30\":3,\"56\":1}}],[\"helper\",{\"3\":{\"10\":1}}],[\"here\",{\"3\":{\"13\":1,\"26\":1,\"146\":1}}],[\"flow\",{\"3\":{\"161\":1}}],[\"flag\",{\"3\":{\"118\":1}}],[\"flavor\",{\"3\":{\"65\":1}}],[\"flann\",{\"3\":{\"61\":1}}],[\"ftl\",{\"3\":{\"161\":2}}],[\"fname=\",{\"3\":{\"161\":1}}],[\"fprintf\",{\"3\":{\"118\":2}}],[\"few\",{\"3\":{\"119\":1}}],[\"feedback\",{\"3\":{\"98\":1}}],[\"features2d\",{\"3\":{\"61\":1}}],[\"ffmpeg\",{\"0\":{\"69\":1},\"2\":{\"69\":1},\"3\":{\"69\":1}}],[\"fdiagnostics\",{\"3\":{\"65\":1}}],[\"fdisk\",{\"3\":{\"29\":2,\"30\":2}}],[\"fwlink\",{\"3\":{\"63\":1,\"65\":1}}],[\"further\",{\"3\":{\"146\":1}}],[\"fuzzy\",{\"3\":{\"61\":1}}],[\"func\",{\"3\":{\"58\":3}}],[\"functionalinterface\",{\"3\":{\"157\":1}}],[\"function\",{\"3\":{\"58\":2}}],[\"framework\",{\"3\":{\"141\":1}}],[\"free\",{\"3\":{\"129\":1}}],[\"freetype\",{\"3\":{\"61\":1}}],[\"from\",{\"3\":{\"13\":1,\"92\":2,\"97\":1,\"98\":1,\"118\":1,\"122\":1,\"129\":1,\"146\":4}}],[\"follows\",{\"3\":{\"146\":1}}],[\"following\",{\"3\":{\"56\":1,\"71\":1,\"97\":1,\"98\":1,\"99\":1,\"117\":1,\"144\":1,\"145\":1,\"146\":1}}],[\"folder\",{\"3\":{\"121\":1}}],[\"fopen\",{\"3\":{\"118\":2}}],[\"found\",{\"3\":{\"60\":1,\"98\":1,\"146\":2,\"161\":1}}],[\"foo\",{\"3\":{\"57\":2}}],[\"foreach\",{\"3\":{\"157\":1}}],[\"forkcount>\",{\"3\":{\"146\":1}}],[\"fork\",{\"3\":{\"146\":1}}],[\"forkstarter\",{\"3\":{\"146\":6}}],[\"forked\",{\"3\":{\"146\":3}}],[\"forward\",{\"3\":{\"122\":1}}],[\"forwarding\",{\"0\":{\"122\":1},\"2\":{\"122\":1}}],[\"form\",{\"3\":{\"118\":1}}],[\"format\",{\"3\":{\"71\":1,\"124\":1}}],[\"for\",{\"0\":{\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1},\"2\":{\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1},\"3\":{\"15\":1,\"29\":2,\"30\":3,\"56\":1,\"63\":1,\"65\":1,\"71\":2,\"72\":1,\"92\":1,\"95\":1,\"98\":1,\"99\":2,\"100\":1,\"122\":1,\"129\":2,\"146\":3,\"156\":1,\"157\":2}}],[\"force\",{\"3\":{\"9\":1,\"118\":1}}],[\"fstab\",{\"3\":{\"34\":1}}],[\"fstab文件\",{\"3\":{\"34\":1}}],[\"factory\",{\"3\":{\"151\":4,\"157\":2,\"161\":2}}],[\"face\",{\"3\":{\"61\":1}}],[\"fail\",{\"3\":{\"146\":1,\"161\":1}}],[\"failed\",{\"3\":{\"146\":3,\"148\":1}}],[\"failuredetails=\",{\"3\":{\"146\":1}}],[\"failures=\",{\"3\":{\"146\":1}}],[\"failures\",{\"3\":{\"146\":2}}],[\"failure\",{\"3\":{\"146\":1}}],[\"fails\",{\"3\":{\"146\":1}}],[\"failsafe\",{\"0\":{\"144\":1},\"2\":{\"144\":1},\"3\":{\"142\":1,\"144\":3,\"146\":3}}],[\"faq\",{\"0\":{\"128\":1,\"146\":1,\"161\":1},\"2\":{\"128\":1,\"146\":1,\"161\":1}}],[\"favorites\",{\"3\":{\"66\":3}}],[\"false表示可以进入第三方库\",{\"3\":{\"63\":1,\"65\":1}}],[\"false\",{\"3\":{\"55\":1,\"65\":2,\"118\":4,\"148\":3,\"152\":1,\"156\":1,\"161\":2}}],[\"fadb733c53a6\",{\"3\":{\"30\":1}}],[\"fatal\",{\"3\":{\"9\":1}}],[\"f表示查看空闲的磁盘\",{\"3\":{\"29\":1}}],[\"f\",{\"3\":{\"17\":2,\"29\":1,\"32\":1}}],[\"fi\",{\"3\":{\"148\":1}}],[\"final\",{\"3\":{\"148\":2,\"152\":1,\"157\":2,\"158\":2,\"161\":1}}],[\"financeproduct\",{\"3\":{\"146\":7}}],[\"findchildren\",{\"3\":{\"149\":2}}],[\"findservices\",{\"3\":{\"149\":2}}],[\"find\",{\"0\":{\"60\":1},\"2\":{\"60\":1},\"3\":{\"60\":2,\"61\":2}}],[\"five\",{\"3\":{\"119\":1,\"120\":2,\"121\":1}}],[\"first\",{\"3\":{\"13\":1,\"30\":1,\"45\":2,\"47\":5,\"48\":1,\"49\":2,\"99\":1}}],[\"file2\",{\"3\":{\"161\":1}}],[\"filename\",{\"3\":{\"118\":5}}],[\"fileextname\",{\"3\":{\"67\":1}}],[\"filebasename\",{\"3\":{\"67\":1}}],[\"filebasenamenoextension\",{\"3\":{\"65\":2,\"67\":1}}],[\"filedirname\",{\"3\":{\"65\":3,\"67\":1}}],[\"files>\",{\"3\":{\"118\":1}}],[\"filesystem\",{\"3\":{\"30\":4,\"31\":3,\"35\":1}}],[\"files\",{\"3\":{\"13\":1,\"32\":1,\"71\":4,\"117\":2,\"119\":2,\"120\":1,\"121\":1,\"123\":1,\"146\":1,\"161\":1}}],[\"file\",{\"3\":{\"12\":1,\"29\":1,\"30\":1,\"55\":1,\"57\":2,\"63\":2,\"65\":3,\"67\":1,\"97\":1,\"117\":1,\"118\":38,\"119\":1,\"121\":6,\"122\":3,\"123\":2,\"124\":5,\"155\":1,\"161\":6}}],[\"u4ef6\",{\"3\":{\"146\":1}}],[\"u4e86\",{\"3\":{\"146\":1}}],[\"u4eec\",{\"3\":{\"146\":1}}],[\"u4e0d\",{\"3\":{\"146\":1}}],[\"u4fdd\",{\"3\":{\"146\":2}}],[\"u4f7f\",{\"3\":{\"146\":1}}],[\"u4f8b\",{\"3\":{\"146\":1}}],[\"uff0c\",{\"3\":{\"146\":3}}],[\"uff1a\",{\"3\":{\"146\":2}}],[\"u800c\",{\"3\":{\"146\":1}}],[\"u8017\",{\"3\":{\"146\":1}}],[\"u884c\",{\"3\":{\"146\":1}}],[\"u8fdb\",{\"3\":{\"146\":1}}],[\"u8fc7\",{\"3\":{\"146\":1}}],[\"u8a00\",{\"3\":{\"146\":1}}],[\"u8df3\",{\"3\":{\"146\":1}}],[\"u8d25\",{\"3\":{\"146\":2}}],[\"u8ba1\",{\"3\":{\"146\":2}}],[\"u8be6\",{\"3\":{\"146\":1}}],[\"u8bef\",{\"3\":{\"146\":2}}],[\"u8bd5\",{\"3\":{\"146\":7}}],[\"u96c6\",{\"3\":{\"146\":1}}],[\"u9669\",{\"3\":{\"146\":2}}],[\"u969c\",{\"3\":{\"146\":3}}],[\"u9012\",{\"3\":{\"146\":1}}],[\"u9884\",{\"3\":{\"146\":1}}],[\"u9879\",{\"3\":{\"146\":2}}],[\"u9519\",{\"3\":{\"146\":2}}],[\"u91cf\",{\"3\":{\"146\":5}}],[\"u3002\",{\"3\":{\"146\":4}}],[\"u7b97\",{\"3\":{\"146\":1}}],[\"u7edf\",{\"3\":{\"146\":1}}],[\"u7ed3\",{\"3\":{\"146\":4}}],[\"u7528\",{\"3\":{\"146\":2}}],[\"u7c7b\",{\"3\":{\"146\":1}}],[\"u7387\",{\"3\":{\"146\":1}}],[\"u7684\",{\"3\":{\"146\":6}}],[\"u76ee\",{\"3\":{\"146\":2}}],[\"u636e\",{\"3\":{\"146\":1}}],[\"u68c0\",{\"3\":{\"146\":1}}],[\"u6709\",{\"3\":{\"146\":1}}],[\"u67e5\",{\"3\":{\"146\":1}}],[\"u671f\",{\"3\":{\"146\":1}}],[\"u679c\",{\"3\":{\"146\":2}}],[\"u662f\",{\"3\":{\"146\":4}}],[\"u610f\",{\"3\":{\"146\":3}}],[\"u6ce8\",{\"3\":{\"146\":2}}],[\"u60c5\",{\"3\":{\"146\":1}}],[\"u603b\",{\"3\":{\"146\":2}}],[\"u6e05\",{\"3\":{\"146\":1}}],[\"u65ad\",{\"3\":{\"146\":1}}],[\"u6545\",{\"3\":{\"146\":3}}],[\"u65f6\",{\"3\":{\"146\":1}}],[\"u6570\",{\"3\":{\"146\":6}}],[\"u6240\",{\"3\":{\"146\":1}}],[\"u6210\",{\"3\":{\"146\":2}}],[\"u62a5\",{\"3\":{\"146\":4}}],[\"u6d4b\",{\"3\":{\"146\":7}}],[\"u5b83\",{\"3\":{\"146\":1}}],[\"u5f52\",{\"3\":{\"146\":1}}],[\"u5957\",{\"3\":{\"146\":1}}],[\"u5916\",{\"3\":{\"146\":1}}],[\"u5931\",{\"3\":{\"146\":2}}],[\"u5e76\",{\"3\":{\"146\":1}}],[\"u540d\",{\"3\":{\"146\":3}}],[\"u544a\",{\"3\":{\"146\":4}}],[\"u53ea\",{\"3\":{\"146\":1}}],[\"u5305\",{\"3\":{\"146\":3}}],[\"u5355\",{\"3\":{\"146\":3}}],[\"u529f\",{\"3\":{\"146\":1}}],[\"u5143\",{\"3\":{\"146\":2}}],[\"uintx\",{\"3\":{\"118\":1}}],[\"upgrading\",{\"3\":{\"146\":1}}],[\"upon\",{\"3\":{\"146\":3}}],[\"upload\",{\"3\":{\"123\":1}}],[\"updating\",{\"0\":{\"96\":1},\"2\":{\"96\":1}}],[\"update\",{\"0\":{\"97\":1},\"2\":{\"97\":1},\"3\":{\"70\":1,\"97\":1}}],[\"up\",{\"0\":{\"121\":1},\"2\":{\"121\":1},\"3\":{\"92\":2,\"98\":1,\"119\":1,\"120\":1,\"121\":1}}],[\"upstream\",{\"3\":{\"9\":3}}],[\"uuid\",{\"3\":{\"31\":1}}],[\"umount\",{\"3\":{\"29\":1,\"30\":1,\"34\":1}}],[\"unable\",{\"3\":{\"151\":1}}],[\"unless\",{\"3\":{\"146\":1}}],[\"unstable\",{\"3\":{\"99\":2}}],[\"unit\",{\"3\":{\"146\":1}}],[\"units\",{\"3\":{\"29\":1,\"30\":1}}],[\"unique\",{\"3\":{\"124\":1}}],[\"unix\",{\"3\":{\"95\":1}}],[\"uninstalled\",{\"3\":{\"71\":1}}],[\"unpack\",{\"3\":{\"70\":1}}],[\"unpartitioned\",{\"3\":{\"29\":1}}],[\"unzip\",{\"3\":{\"70\":2}}],[\"unwrapping\",{\"3\":{\"61\":1}}],[\"unwritten\",{\"3\":{\"29\":1}}],[\"until\",{\"3\":{\"29\":1,\"30\":1,\"148\":1}}],[\"unknown\",{\"3\":{\"15\":1}}],[\"util\",{\"3\":{\"29\":1,\"30\":1,\"161\":12}}],[\"ubuntu安装环境\",{\"0\":{\"64\":1},\"2\":{\"64\":1}}],[\"ubuntu上请执行\",{\"3\":{\"44\":1}}],[\"ubuntu\",{\"1\":{\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1},\"3\":{\"35\":2,\"70\":1}}],[\"ubuntu开启ssh远程登录\",{\"0\":{\"21\":1},\"2\":{\"21\":1}}],[\"u\",{\"3\":{\"16\":4,\"17\":2}}],[\"us\",{\"3\":{\"146\":1}}],[\"usr\",{\"3\":{\"59\":1,\"61\":1,\"65\":2,\"71\":7}}],[\"usegclogfilerotation\",{\"0\":{\"119\":1},\"3\":{\"117\":1,\"118\":6}}],[\"useful\",{\"3\":{\"100\":1}}],[\"used\",{\"3\":{\"35\":1}}],[\"use\",{\"0\":{\"100\":1},\"2\":{\"100\":1},\"3\":{\"29\":1,\"30\":1,\"35\":1,\"92\":3,\"94\":3,\"97\":1,\"99\":4,\"100\":3,\"117\":2,\"118\":1,\"122\":2,\"143\":1,\"144\":1,\"146\":2}}],[\"users\",{\"3\":{\"16\":2,\"23\":1,\"25\":1,\"71\":1}}],[\"user=exporter\",{\"3\":{\"14\":1}}],[\"user\",{\"3\":{\"10\":1,\"14\":1,\"25\":1,\"35\":1,\"71\":2,\"95\":1,\"102\":1}}],[\"using\",{\"0\":{\"93\":1},\"2\":{\"93\":1},\"3\":{\"29\":1,\"30\":1,\"65\":1,\"71\":1,\"94\":3,\"99\":1,\"100\":1,\"123\":1,\"129\":1,\"145\":1}}],[\"usage\",{\"0\":{\"99\":1,\"101\":1},\"2\":{\"99\":1,\"101\":1},\"3\":{\"16\":1,\"142\":1}}],[\"urlmappings\",{\"3\":{\"158\":1}}],[\"urlmapping\",{\"3\":{\"158\":5}}],[\"url\",{\"3\":{\"9\":1,\"103\":1}}],[\"强制将本地仓库覆盖到远程仓库\",{\"3\":{\"9\":1}}],[\"切换到新的分支\",{\"3\":{\"9\":1}}],[\"删除分支\",{\"3\":{\"9\":1}}],[\"删除远程仓库\",{\"3\":{\"9\":1}}],[\"djava\",{\"3\":{\"148\":1}}],[\"dcatalina\",{\"3\":{\"148\":2}}],[\"dcmake\",{\"3\":{\"71\":1}}],[\"d$endorsed\",{\"3\":{\"148\":1}}],[\"dropped\",{\"3\":{\"146\":1}}],[\"dlinkxref=false\",{\"3\":{\"145\":1}}],[\"dd\",{\"3\":{\"124\":1,\"156\":1}}],[\"during\",{\"3\":{\"146\":2}}],[\"dumpstream\",{\"3\":{\"146\":1}}],[\"dump\",{\"3\":{\"118\":2,\"146\":3}}],[\"due\",{\"3\":{\"71\":1,\"118\":1}}],[\"dpm\",{\"3\":{\"61\":1}}],[\"daemonlock\",{\"3\":{\"148\":1}}],[\"daemon\",{\"3\":{\"148\":7}}],[\"date\",{\"3\":{\"146\":3}}],[\"database\",{\"3\":{\"92\":1}}],[\"datasets\",{\"3\":{\"61\":1}}],[\"daggregate=true\",{\"3\":{\"145\":1}}],[\"dash\",{\"3\":{\"95\":1}}],[\"dashboards\",{\"3\":{\"11\":1}}],[\"dnn\",{\"3\":{\"61\":3}}],[\"d是b的private依赖项\",{\"3\":{\"52\":1}}],[\"dynamicregistrationbean<servletregistration\",{\"3\":{\"158\":1}}],[\"dynamicregistrationbean<d\",{\"3\":{\"158\":1}}],[\"dynamic>\",{\"3\":{\"158\":2}}],[\"dynamic\",{\"3\":{\"51\":2,\"154\":3,\"158\":2}}],[\"dylib\",{\"3\":{\"39\":1}}],[\"df\",{\"3\":{\"35\":1}}],[\"did\",{\"3\":{\"146\":2}}],[\"different\",{\"3\":{\"94\":1,\"98\":1,\"121\":1,\"146\":1}}],[\"diffusion安装教程\",{\"1\":{\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1}}],[\"diffusion\",{\"1\":{\"116\":1},\"3\":{\"36\":1}}],[\"dir=\",{\"3\":{\"97\":1}}],[\"dirs\",{\"3\":{\"61\":3,\"148\":1}}],[\"directories\",{\"3\":{\"50\":6,\"51\":1,\"57\":1}}],[\"directory\",{\"3\":{\"32\":2,\"70\":1,\"71\":3,\"146\":1}}],[\"dir\",{\"3\":{\"50\":8,\"51\":6,\"56\":3,\"57\":2,\"60\":1,\"97\":2}}],[\"dispatcher\",{\"3\":{\"158\":2}}],[\"dispatcherservletregistration\",{\"3\":{\"158\":1}}],[\"dispatcherservletregistrationbean\",{\"3\":{\"158\":3}}],[\"dispatcherservletregistrationconfiguration\",{\"3\":{\"158\":1}}],[\"dispatcherservlet\",{\"3\":{\"158\":6}}],[\"dispatcherservletconfiguration\",{\"3\":{\"158\":1}}],[\"dispatcherservletautoconfiguration\",{\"3\":{\"158\":1}}],[\"dispatcherservlet如何加载到tomcat容器\",{\"0\":{\"158\":1},\"2\":{\"158\":1}}],[\"dispatcherservlet是如何加载到tomcat容器的\",{\"3\":{\"147\":1}}],[\"dist\",{\"3\":{\"100\":2}}],[\"distinct\",{\"3\":{\"92\":1}}],[\"discover\",{\"3\":{\"92\":1}}],[\"disassembly\",{\"3\":{\"65\":1}}],[\"disabled\",{\"3\":{\"158\":1}}],[\"disable\",{\"3\":{\"26\":2}}],[\"disks\",{\"3\":{\"30\":1}}],[\"disklabel\",{\"3\":{\"30\":1}}],[\"disk\",{\"3\":{\"29\":2,\"30\":5}}],[\"dorun\",{\"3\":{\"161\":1}}],[\"don\",{\"3\":{\"148\":1}}],[\"done\",{\"3\":{\"31\":4}}],[\"down\",{\"3\":{\"102\":1}}],[\"downloads\",{\"3\":{\"72\":1,\"97\":1}}],[\"download\",{\"3\":{\"62\":1,\"70\":1,\"97\":1,\"99\":1}}],[\"doubles\",{\"3\":{\"102\":1}}],[\"does\",{\"3\":{\"71\":2,\"146\":1}}],[\"documentroot\",{\"3\":{\"155\":2}}],[\"documentation\",{\"0\":{\"142\":1},\"2\":{\"142\":1},\"3\":{\"72\":1}}],[\"documents\",{\"3\":{\"51\":1}}],[\"docker\",{\"3\":{\"11\":4}}],[\"do\",{\"3\":{\"29\":1,\"38\":3,\"71\":1,\"97\":1,\"99\":1,\"118\":1,\"146\":1}}],[\"d表示删除分区\",{\"3\":{\"29\":1}}],[\"detect\",{\"3\":{\"146\":1}}],[\"details\",{\"3\":{\"71\":1}}],[\"detail\",{\"3\":{\"65\":1}}],[\"deleted\",{\"3\":{\"120\":1}}],[\"dee51094\",{\"0\":{\"117\":1,\"118\":1,\"119\":1,\"120\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1}}],[\"deprecated\",{\"3\":{\"99\":1}}],[\"dependencies\",{\"3\":{\"56\":1,\"101\":1}}],[\"depend\",{\"3\":{\"56\":1}}],[\"debug\",{\"3\":{\"161\":1}}],[\"debuger配置\",{\"3\":{\"63\":1}}],[\"debug>\",{\"3\":{\"57\":1}}],[\"described\",{\"3\":{\"122\":1}}],[\"descriptor\",{\"3\":{\"61\":1}}],[\"description=\",{\"3\":{\"146\":2}}],[\"description\",{\"3\":{\"47\":1,\"48\":1,\"65\":2,\"146\":1,\"158\":7}}],[\"description是项目描述\",{\"3\":{\"47\":1}}],[\"desired\",{\"3\":{\"99\":1}}],[\"designed\",{\"3\":{\"95\":1}}],[\"destination\",{\"3\":{\"59\":4}}],[\"demo\",{\"3\":{\"53\":1,\"54\":1,\"55\":1,\"56\":9,\"59\":2,\"60\":2,\"61\":1,\"63\":1,\"65\":1}}],[\"defined\",{\"3\":{\"161\":2}}],[\"defined等\",{\"3\":{\"55\":1}}],[\"define\",{\"3\":{\"143\":1,\"146\":1}}],[\"define进行宏展开\",{\"3\":{\"38\":1}}],[\"defaulthost=\",{\"3\":{\"161\":1}}],[\"default生命周期\",{\"0\":{\"130\":1},\"2\":{\"130\":1}}],[\"defaultstream\",{\"3\":{\"118\":2}}],[\"defaults\",{\"3\":{\"13\":2,\"34\":1}}],[\"default\",{\"3\":{\"13\":3,\"30\":3,\"56\":1,\"71\":1,\"99\":4,\"100\":1,\"146\":1,\"158\":3}}],[\"dec\",{\"3\":{\"31\":1,\"32\":1}}],[\"decide\",{\"3\":{\"29\":1,\"30\":1}}],[\"devops\",{\"3\":{\"122\":1}}],[\"development\",{\"3\":{\"92\":1}}],[\"developers\",{\"3\":{\"92\":2,\"119\":1}}],[\"device\",{\"3\":{\"30\":1}}],[\"dev\",{\"3\":{\"29\":2,\"30\":6,\"31\":2,\"32\":2,\"34\":2,\"35\":4,\"41\":1,\"61\":1}}],[\"denied\",{\"3\":{\"26\":1}}],[\"d2f82416\",{\"0\":{\"19\":1,\"20\":1}}],[\"d\",{\"0\":{\"123\":1},\"2\":{\"123\":1},\"3\":{\"9\":1,\"11\":2,\"17\":1,\"52\":3,\"118\":2,\"158\":1}}],[\"ae\",{\"3\":{\"161\":1}}],[\"a0\",{\"3\":{\"161\":1}}],[\"audit\",{\"3\":{\"146\":1}}],[\"autostart\",{\"3\":{\"152\":3}}],[\"automatic\",{\"0\":{\"111\":1,\"112\":1},\"2\":{\"111\":1,\"112\":1}}],[\"automatically\",{\"3\":{\"71\":1}}],[\"autodl\",{\"3\":{\"62\":1}}],[\"autodl地址\",{\"3\":{\"62\":1}}],[\"autodl示例\",{\"3\":{\"62\":1}}],[\"authorized\",{\"3\":{\"24\":2}}],[\"achieved\",{\"3\":{\"124\":1}}],[\"active\",{\"3\":{\"122\":1}}],[\"access\",{\"3\":{\"92\":1}}],[\"account添加了头文件引用路径\",{\"3\":{\"50\":1}}],[\"account为最终生成的库文件名\",{\"3\":{\"50\":1}}],[\"account\",{\"3\":{\"50\":32,\"51\":23}}],[\"accounting\",{\"3\":{\"31\":1}}],[\"according\",{\"3\":{\"13\":1}}],[\"avoid\",{\"0\":{\"119\":1},\"2\":{\"119\":1}}],[\"available\",{\"3\":{\"99\":1}}],[\"avail\",{\"3\":{\"35\":1}}],[\"a3f8969a\",{\"0\":{\"103\":1,\"104\":1,\"105\":1,\"106\":1}}],[\"apache\",{\"0\":{\"141\":1},\"2\":{\"141\":1},\"3\":{\"141\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":10,\"148\":2,\"161\":14}}],[\"appear\",{\"3\":{\"146\":1}}],[\"appears\",{\"3\":{\"146\":1}}],[\"approach\",{\"3\":{\"119\":1,\"122\":1}}],[\"applicationcontext\",{\"3\":{\"156\":1}}],[\"applicationcontextexception\",{\"3\":{\"151\":2}}],[\"application\",{\"3\":{\"120\":1,\"121\":3}}],[\"applies\",{\"3\":{\"99\":1}}],[\"apple\",{\"0\":{\"113\":1},\"2\":{\"113\":1}}],[\"apt\",{\"3\":{\"21\":1,\"41\":2,\"44\":1,\"61\":1,\"64\":4,\"69\":1,\"70\":2}}],[\"aggregator\",{\"3\":{\"141\":1}}],[\"again\",{\"3\":{\"98\":1}}],[\"age\",{\"3\":{\"41\":1}}],[\"agentmojo\",{\"0\":{\"127\":1},\"2\":{\"127\":1}}],[\"agent\",{\"3\":{\"13\":1}}],[\"after\",{\"3\":{\"98\":2,\"118\":1,\"121\":1}}],[\"abstractendpoint\",{\"3\":{\"161\":2}}],[\"abstractprotocol\",{\"3\":{\"161\":1}}],[\"abstractprotocol$connectionhandler\",{\"3\":{\"161\":1}}],[\"abstractprocessorlight\",{\"3\":{\"161\":2}}],[\"abstractservletwebserverfactory\",{\"3\":{\"152\":1,\"155\":1,\"157\":1}}],[\"abstractsurefiremojo\",{\"3\":{\"146\":6}}],[\"abstract\",{\"3\":{\"148\":3,\"158\":2}}],[\"above\",{\"3\":{\"97\":1,\"119\":1}}],[\"about\",{\"0\":{\"92\":1,\"95\":1,\"141\":1},\"2\":{\"92\":1,\"95\":1,\"141\":1},\"3\":{\"146\":1}}],[\"abe3\",{\"3\":{\"31\":1}}],[\"attr\",{\"3\":{\"156\":1}}],[\"attached\",{\"3\":{\"146\":1}}],[\"attempts\",{\"3\":{\"97\":1}}],[\"at\",{\"3\":{\"70\":1,\"117\":1,\"118\":1,\"124\":1,\"146\":7,\"161\":17}}],[\"arrays\",{\"3\":{\"157\":1}}],[\"arraylist<>\",{\"3\":{\"157\":1}}],[\"artifactid>\",{\"3\":{\"143\":1,\"144\":1,\"145\":1,\"146\":3}}],[\"arbitrary\",{\"3\":{\"99\":1}}],[\"aruco\",{\"3\":{\"61\":1}}],[\"archive\",{\"3\":{\"59\":1,\"70\":1}}],[\"argument\",{\"3\":{\"119\":1}}],[\"arguments\",{\"3\":{\"15\":1,\"118\":2,\"148\":1}}],[\"arg\",{\"3\":{\"70\":1}}],[\"args\",{\"3\":{\"65\":2,\"148\":2}}],[\"arg2\",{\"3\":{\"58\":2}}],[\"arg1\",{\"3\":{\"58\":2}}],[\"are\",{\"3\":{\"56\":1,\"99\":1,\"121\":1,\"122\":2,\"146\":2,\"161\":2}}],[\"a链接给对象test\",{\"3\":{\"50\":1}}],[\"a和b在运行时\",{\"3\":{\"39\":2}}],[\"a打包到该工程的输出文件中\",{\"3\":{\"39\":1}}],[\"a代表archive\",{\"3\":{\"39\":1}}],[\"alwaysmapurl\",{\"3\":{\"158\":1}}],[\"already\",{\"3\":{\"158\":1}}],[\"alt\",{\"3\":{\"156\":1}}],[\"altddname\",{\"3\":{\"156\":2}}],[\"alternatively\",{\"3\":{\"98\":1}}],[\"altered\",{\"3\":{\"30\":1}}],[\"also\",{\"3\":{\"99\":1,\"145\":1,\"146\":1}}],[\"aliases\",{\"3\":{\"99\":1}}],[\"alias\",{\"3\":{\"99\":5}}],[\"alice\",{\"3\":{\"41\":1}}],[\"algorithms\",{\"3\":{\"72\":1}}],[\"allows\",{\"3\":{\"94\":1}}],[\"allow\",{\"3\":{\"70\":1}}],[\"allocating\",{\"3\":{\"31\":1}}],[\"all\",{\"3\":{\"29\":3,\"30\":2,\"56\":1,\"71\":1,\"99\":1,\"120\":2,\"121\":1,\"124\":1,\"146\":1}}],[\"alerting\",{\"3\":{\"13\":1}}],[\"alertmanagers\",{\"3\":{\"13\":1}}],[\"alertmanager\",{\"3\":{\"13\":2}}],[\"another\",{\"3\":{\"146\":2}}],[\"answer\",{\"3\":{\"146\":3}}],[\"analyze\",{\"3\":{\"123\":1}}],[\"an\",{\"3\":{\"72\":1,\"99\":2,\"102\":1,\"121\":1,\"146\":1}}],[\"any\",{\"3\":{\"13\":1,\"95\":1,\"99\":2,\"146\":2}}],[\"and\",{\"0\":{\"96\":1,\"110\":1},\"2\":{\"96\":1,\"110\":1},\"3\":{\"9\":1,\"13\":1,\"29\":1,\"30\":2,\"31\":2,\"32\":1,\"38\":1,\"55\":1,\"70\":1,\"71\":2,\"72\":1,\"92\":5,\"94\":1,\"95\":2,\"97\":3,\"98\":1,\"99\":4,\"118\":1,\"119\":1,\"120\":1,\"121\":1,\"129\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":6,\"161\":2}}],[\"advantage\",{\"3\":{\"119\":1}}],[\"admin\",{\"3\":{\"11\":1}}],[\"addvalve\",{\"3\":{\"161\":1}}],[\"addcontextcustomizers\",{\"3\":{\"161\":1}}],[\"addchild\",{\"3\":{\"149\":1,\"155\":1}}],[\"addmapping\",{\"3\":{\"158\":1}}],[\"addregistration\",{\"3\":{\"158\":2}}],[\"addresses\",{\"3\":{\"124\":1}}],[\"addall\",{\"3\":{\"157\":2}}],[\"addservlet方法终于被调用了\",{\"3\":{\"158\":1}}],[\"addservlet\",{\"3\":{\"154\":3,\"158\":1}}],[\"addservletcontainerinitializer\",{\"3\":{\"152\":1,\"155\":1,\"156\":1}}],[\"addservice\",{\"3\":{\"149\":1}}],[\"added\",{\"3\":{\"13\":1,\"146\":2}}],[\"add\",{\"3\":{\"9\":1,\"13\":1,\"47\":1,\"49\":1,\"50\":2,\"51\":3,\"52\":4,\"57\":1,\"97\":1,\"144\":1,\"145\":1,\"146\":1,\"157\":2}}],[\"asynchronouschannelgroupimpl\",{\"3\":{\"161\":1}}],[\"asynchronouschannelgroupimpl$1\",{\"3\":{\"161\":1}}],[\"aslist\",{\"3\":{\"157\":1}}],[\"assert\",{\"3\":{\"152\":1}}],[\"assembly\",{\"3\":{\"56\":1}}],[\"assemble\",{\"3\":{\"38\":4}}],[\"aspects\",{\"3\":{\"92\":1}}],[\"as\",{\"3\":{\"9\":1,\"13\":1,\"70\":1,\"92\":1,\"94\":1,\"102\":2,\"119\":1,\"122\":2,\"123\":1,\"124\":1,\"145\":1,\"146\":5}}],[\"a\",{\"0\":{\"100\":1,\"120\":1,\"122\":1},\"2\":{\"100\":1,\"120\":1,\"122\":1},\"3\":{\"9\":1,\"13\":3,\"29\":1,\"30\":2,\"33\":1,\"39\":1,\"50\":6,\"51\":1,\"52\":4,\"92\":2,\"95\":1,\"97\":1,\"98\":1,\"99\":3,\"100\":3,\"101\":1,\"102\":2,\"118\":2,\"119\":1,\"120\":1,\"121\":1,\"122\":2,\"129\":1,\"141\":1,\"143\":1,\"145\":1,\"146\":8}}],[\"b7202306260101\",{\"3\":{\"161\":1}}],[\"bc\",{\"3\":{\"161\":1}}],[\"b5\",{\"3\":{\"161\":1}}],[\"b07\",{\"3\":{\"146\":2}}],[\"b85d\",{\"3\":{\"146\":7}}],[\"break\",{\"3\":{\"156\":1}}],[\"breakage\",{\"3\":{\"99\":1}}],[\"branch\",{\"3\":{\"9\":6}}],[\"boolean\",{\"3\":{\"152\":1}}],[\"bool\",{\"3\":{\"118\":1}}],[\"booterclient\",{\"3\":{\"146\":3}}],[\"booter\",{\"3\":{\"146\":1}}],[\"bootstrap\",{\"3\":{\"44\":1,\"148\":7}}],[\"boot\",{\"3\":{\"30\":1,\"35\":1,\"151\":1,\"152\":1,\"157\":1}}],[\"borrow\",{\"3\":{\"92\":1}}],[\"bgsegm\",{\"3\":{\"61\":1}}],[\"bundle\",{\"3\":{\"146\":1}}],[\"built\",{\"3\":{\"56\":1}}],[\"build>\",{\"3\":{\"143\":1,\"144\":1}}],[\"builds\",{\"3\":{\"106\":1}}],[\"building\",{\"3\":{\"56\":1}}],[\"build\",{\"0\":{\"69\":1,\"70\":1},\"2\":{\"69\":1,\"70\":1},\"3\":{\"15\":1,\"45\":5,\"50\":6,\"51\":6,\"56\":7,\"65\":1,\"70\":5,\"143\":1,\"144\":1}}],[\"build=x86\",{\"3\":{\"15\":1,\"19\":1}}],[\"but\",{\"3\":{\"38\":1,\"119\":1,\"146\":5}}],[\"base\",{\"3\":{\"148\":1}}],[\"base=\",{\"3\":{\"148\":1}}],[\"basedir\",{\"3\":{\"145\":1}}],[\"based\",{\"3\":{\"129\":1}}],[\"bashrc\",{\"3\":{\"97\":1,\"98\":1}}],[\"bash\",{\"3\":{\"95\":1,\"97\":3,\"98\":1}}],[\"backups\",{\"3\":{\"31\":1}}],[\"bad\",{\"3\":{\"29\":1,\"30\":1}}],[\"blocks\",{\"3\":{\"31\":3,\"32\":2}}],[\"blog\",{\"3\":{\"9\":1,\"122\":1}}],[\"bean\",{\"3\":{\"158\":3}}],[\"beans\",{\"3\":{\"157\":2}}],[\"because\",{\"3\":{\"146\":1}}],[\"become\",{\"3\":{\"124\":1}}],[\"becomes\",{\"3\":{\"99\":1}}],[\"between\",{\"3\":{\"146\":2}}],[\"being\",{\"3\":{\"146\":4}}],[\"best\",{\"3\":{\"143\":1}}],[\"behavior\",{\"3\":{\"100\":1}}],[\"below\",{\"3\":{\"97\":1,\"124\":1}}],[\"been\",{\"3\":{\"30\":1,\"129\":1,\"146\":1}}],[\"before\",{\"3\":{\"29\":1,\"30\":1,\"121\":5,\"148\":1}}],[\"be\",{\"3\":{\"29\":3,\"30\":2,\"71\":6,\"95\":1,\"117\":3,\"118\":1,\"120\":5,\"121\":2,\"122\":1,\"124\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":2,\"152\":1}}],[\"bz2\",{\"3\":{\"19\":1}}],[\"bzip2\",{\"3\":{\"19\":1}}],[\"b\",{\"0\":{\"121\":1},\"2\":{\"121\":1},\"3\":{\"17\":1,\"44\":1,\"45\":2,\"50\":1,\"51\":1,\"52\":6,\"56\":1}}],[\"bioinspired\",{\"3\":{\"61\":1}}],[\"bios\",{\"3\":{\"30\":1}}],[\"binding\",{\"3\":{\"161\":1}}],[\"bindings\",{\"0\":{\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1},\"2\":{\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1}}],[\"binaries\",{\"0\":{\"100\":1},\"2\":{\"100\":1},\"3\":{\"100\":2}}],[\"bin\",{\"3\":{\"15\":1,\"59\":1,\"65\":2,\"71\":1,\"146\":4}}],[\"bitnami\",{\"3\":{\"11\":3}}],[\"bytes\",{\"3\":{\"29\":4,\"30\":6,\"118\":2}}],[\"by\",{\"3\":{\"14\":1,\"29\":1,\"30\":1,\"71\":2,\"100\":1,\"124\":1,\"129\":1,\"143\":1,\"144\":1,\"146\":1}}],[\"cs\",{\"3\":{\"161\":1}}],[\"cn\",{\"3\":{\"146\":2}}],[\"cnf=mysqld\",{\"3\":{\"14\":1}}],[\"cnf\",{\"3\":{\"14\":2}}],[\"critical\",{\"3\":{\"146\":1}}],[\"crash\",{\"3\":{\"146\":2}}],[\"crashed\",{\"3\":{\"146\":1}}],[\"creating\",{\"3\":{\"31\":2}}],[\"createnewfile\",{\"3\":{\"161\":1}}],[\"createwebserver\",{\"3\":{\"151\":5,\"157\":1}}],[\"createdefaultrealm\",{\"3\":{\"149\":1}}],[\"created\",{\"3\":{\"30\":1,\"120\":1,\"121\":1,\"129\":1}}],[\"create\",{\"3\":{\"14\":1,\"70\":1,\"100\":1,\"118\":1,\"146\":1,\"151\":1}}],[\"credential\",{\"3\":{\"10\":4}}],[\"central\",{\"0\":{\"122\":1},\"2\":{\"122\":1},\"3\":{\"122\":1}}],[\"ceintl\",{\"3\":{\"62\":1}}],[\"cmdline\",{\"3\":{\"118\":1}}],[\"cmake示例\",{\"0\":{\"61\":1},\"2\":{\"61\":1}}],[\"cmake文件\",{\"3\":{\"60\":1}}],[\"cmakefiles\",{\"3\":{\"56\":3}}],[\"cmake分步编译\",{\"0\":{\"56\":1},\"2\":{\"56\":1}}],[\"cmake还可以写条件控制\",{\"3\":{\"55\":1}}],[\"cmake中经常使用target\",{\"3\":{\"52\":1}}],[\"cmake中的命令大多和cmake\",{\"3\":{\"47\":1}}],[\"cmake无法定位库文件\",{\"3\":{\"50\":1}}],[\"cmake是可执行程序名称\",{\"3\":{\"47\":1}}],[\"cmake是项目名称\",{\"3\":{\"47\":1}}],[\"cmake是用于构建\",{\"3\":{\"42\":1}}],[\"cmake做代码提示\",{\"3\":{\"45\":1}}],[\"cmake基础知识\",{\"0\":{\"43\":1},\"2\":{\"43\":1}}],[\"cmakelists\",{\"3\":{\"42\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":5,\"51\":3}}],[\"cmake简介\",{\"0\":{\"42\":1},\"2\":{\"42\":1}}],[\"cmake\",{\"0\":{\"52\":1},\"1\":{\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1},\"2\":{\"52\":1},\"3\":{\"44\":4,\"45\":5,\"47\":5,\"48\":2,\"49\":2,\"50\":2,\"51\":1,\"56\":6,\"57\":4,\"59\":1,\"60\":1,\"64\":1,\"70\":3,\"71\":3}}],[\"cin\",{\"3\":{\"66\":1}}],[\"cwd\",{\"3\":{\"65\":2}}],[\"ccalib\",{\"3\":{\"61\":1}}],[\"customize\",{\"3\":{\"161\":2}}],[\"custombundle>\",{\"3\":{\"146\":1}}],[\"custom\",{\"3\":{\"60\":2,\"146\":3}}],[\"cur\",{\"3\":{\"118\":6}}],[\"curl\",{\"3\":{\"12\":1,\"14\":1,\"97\":2}}],[\"currentappx\",{\"3\":{\"118\":2}}],[\"currently\",{\"3\":{\"29\":1,\"30\":1,\"99\":1,\"122\":1}}],[\"current\",{\"3\":{\"9\":2,\"57\":2,\"63\":1,\"65\":1,\"71\":1,\"98\":1,\"100\":2,\"118\":6,\"122\":3}}],[\"capitalize\",{\"3\":{\"158\":2}}],[\"call\",{\"3\":{\"148\":1}}],[\"called\",{\"3\":{\"146\":3}}],[\"calling\",{\"3\":{\"143\":1,\"144\":1}}],[\"calib3d\",{\"3\":{\"61\":1}}],[\"cases\",{\"3\":{\"146\":2}}],[\"case\",{\"3\":{\"120\":1}}],[\"cascades\",{\"3\":{\"71\":1}}],[\"catch\",{\"3\":{\"148\":6,\"151\":2,\"152\":1,\"156\":1,\"157\":1,\"161\":2}}],[\"catalina的start方法\",{\"3\":{\"148\":1}}],[\"catalina的load方法\",{\"3\":{\"148\":1}}],[\"catalinaloader\",{\"3\":{\"148\":1}}],[\"catalinadaemon\",{\"3\":{\"148\":6}}],[\"catalina\",{\"3\":{\"148\":3,\"161\":2}}],[\"cat\",{\"3\":{\"105\":1}}],[\"cause\",{\"3\":{\"100\":1}}],[\"cannot\",{\"3\":{\"118\":3,\"151\":1}}],[\"can\",{\"3\":{\"71\":3,\"92\":1,\"98\":1,\"99\":5,\"100\":1,\"124\":2,\"143\":1,\"144\":1,\"145\":1}}],[\"cache\",{\"3\":{\"56\":2}}],[\"careful\",{\"3\":{\"29\":1,\"30\":1}}],[\"c是b的public依赖项\",{\"3\":{\"52\":1}}],[\"c也会链接b\",{\"3\":{\"52\":1}}],[\"c会链接b\",{\"3\":{\"52\":1}}],[\"c不会链接b\",{\"3\":{\"52\":1}}],[\"cxx\",{\"3\":{\"47\":1,\"48\":1,\"56\":4}}],[\"cflags\",{\"3\":{\"41\":2}}],[\"cppdbg\",{\"3\":{\"65\":1}}],[\"cppbuild\",{\"3\":{\"65\":1}}],[\"cpptools\",{\"3\":{\"62\":1}}],[\"cpp是源文件\",{\"3\":{\"47\":1}}],[\"cpp\",{\"3\":{\"38\":1,\"41\":3,\"47\":1,\"49\":1,\"50\":5,\"51\":5,\"52\":4,\"56\":3,\"65\":3,\"118\":2}}],[\"cpp源文件预处理成xx\",{\"3\":{\"38\":1}}],[\"c303\",{\"3\":{\"30\":1}}],[\"ch\",{\"3\":{\"161\":3}}],[\"challenge\",{\"3\":{\"122\":1}}],[\"challenges\",{\"3\":{\"119\":1}}],[\"challengeresponseauthentication\",{\"3\":{\"26\":2}}],[\"character\",{\"3\":{\"161\":1}}],[\"characters\",{\"3\":{\"161\":2}}],[\"char\",{\"3\":{\"118\":3}}],[\"changed\",{\"3\":{\"71\":2,\"118\":1,\"146\":2}}],[\"changes\",{\"3\":{\"29\":2,\"30\":1}}],[\"change\",{\"3\":{\"26\":2}}],[\"check\",{\"3\":{\"118\":2}}],[\"checking\",{\"3\":{\"15\":1,\"32\":5}}],[\"checkout\",{\"3\":{\"9\":2}}],[\"classname=\",{\"3\":{\"161\":1}}],[\"classname\",{\"3\":{\"154\":1}}],[\"classes\",{\"3\":{\"152\":1,\"155\":1,\"156\":2,\"157\":1}}],[\"class<\",{\"3\":{\"148\":1,\"154\":1}}],[\"classpath\",{\"3\":{\"148\":1,\"161\":2}}],[\"class=\",{\"3\":{\"146\":1}}],[\"class\",{\"3\":{\"146\":2,\"148\":2,\"149\":1,\"151\":1,\"152\":2,\"155\":1,\"156\":1,\"157\":3,\"158\":6,\"161\":2}}],[\"closely\",{\"3\":{\"146\":1}}],[\"close\",{\"3\":{\"98\":1,\"118\":3}}],[\"clones\",{\"3\":{\"97\":1}}],[\"clone\",{\"3\":{\"44\":1}}],[\"cli\",{\"3\":{\"92\":2}}],[\"client\",{\"3\":{\"14\":2}}],[\"clean生命周期\",{\"0\":{\"138\":1},\"2\":{\"138\":1}}],[\"clean\",{\"3\":{\"56\":1,\"140\":1}}],[\"clear\",{\"3\":{\"26\":1}}],[\"cd\",{\"3\":{\"24\":1,\"33\":1,\"44\":1,\"56\":1,\"70\":1,\"106\":1,\"146\":2}}],[\"c++调试\",{\"3\":{\"65\":1}}],[\"c++14标准\",{\"3\":{\"65\":1}}],[\"c++开发\",{\"3\":{\"62\":1}}],[\"c++环境配置\",{\"1\":{\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1}}],[\"c++中预处理指令以\",{\"3\":{\"38\":1}}],[\"c++的编译过程\",{\"2\":{\"38\":1}}],[\"c++\",{\"2\":{\"65\":1},\"3\":{\"19\":1,\"65\":2}}],[\"c\",{\"0\":{\"38\":1,\"65\":1,\"122\":1},\"2\":{\"122\":1},\"3\":{\"17\":1,\"25\":1,\"38\":2,\"52\":3,\"65\":2,\"146\":2}}],[\"coyote\",{\"3\":{\"161\":14}}],[\"collected\",{\"3\":{\"146\":1}}],[\"color=always\",{\"3\":{\"65\":1}}],[\"coverage\",{\"3\":{\"129\":1}}],[\"covered\",{\"3\":{\"102\":1}}],[\"copied\",{\"3\":{\"71\":1}}],[\"copies\",{\"3\":{\"71\":1}}],[\"copilot\",{\"3\":{\"62\":1}}],[\"coding\",{\"3\":{\"67\":4}}],[\"code建议安装插件列表\",{\"3\":{\"62\":1}}],[\"code\",{\"0\":{\"67\":1},\"2\":{\"67\":1},\"3\":{\"62\":3,\"65\":1,\"129\":1,\"146\":2}}],[\"code相关信息\",{\"0\":{\"62\":1},\"2\":{\"62\":1}}],[\"code插件\",{\"3\":{\"45\":1}}],[\"correct\",{\"3\":{\"97\":1}}],[\"corrected\",{\"3\":{\"29\":1,\"30\":1}}],[\"core\",{\"0\":{\"70\":1},\"2\":{\"70\":1},\"3\":{\"61\":1}}],[\"course\",{\"3\":{\"51\":2}}],[\"cout\",{\"3\":{\"38\":1,\"65\":1,\"66\":2}}],[\"counts\",{\"3\":{\"32\":1}}],[\"connectiontimeout=\",{\"3\":{\"161\":1}}],[\"connectivity\",{\"3\":{\"32\":1}}],[\"connector\",{\"3\":{\"161\":4}}],[\"convenient\",{\"3\":{\"146\":1}}],[\"convention\",{\"3\":{\"122\":1}}],[\"conditions\",{\"3\":{\"100\":1}}],[\"constantly\",{\"3\":{\"146\":1}}],[\"const\",{\"3\":{\"118\":1}}],[\"consistency\",{\"3\":{\"118\":1}}],[\"consists\",{\"3\":{\"92\":1}}],[\"console\",{\"3\":{\"63\":1,\"65\":1}}],[\"containerbase\",{\"3\":{\"156\":1}}],[\"containing\",{\"3\":{\"13\":1}}],[\"context对象也不例外\",{\"3\":{\"156\":1}}],[\"context\",{\"3\":{\"151\":1,\"152\":6,\"155\":9,\"156\":5,\"157\":4,\"161\":3}}],[\"contents\",{\"3\":{\"120\":3,\"121\":1}}],[\"content\",{\"3\":{\"57\":1,\"120\":2,\"121\":6,\"146\":1}}],[\"continent\",{\"3\":{\"92\":1}}],[\"contiguous\",{\"3\":{\"32\":1}}],[\"conflicts\",{\"3\":{\"71\":1}}],[\"config是一个工具\",{\"3\":{\"41\":1}}],[\"config配置文件里的配置项passwordauthentication改成yes\",{\"3\":{\"26\":1}}],[\"configurabletomcatwebserverfactory\",{\"3\":{\"152\":1,\"155\":1,\"157\":1,\"161\":1}}],[\"configurablewebserverapplicationcontext\",{\"3\":{\"151\":1,\"157\":1}}],[\"configuration>\",{\"3\":{\"146\":3}}],[\"configurations\",{\"3\":{\"63\":1,\"65\":1}}],[\"configuration\",{\"3\":{\"13\":2,\"71\":2,\"101\":1,\"144\":1,\"146\":2}}],[\"configurecontext\",{\"3\":{\"152\":2,\"155\":2,\"157\":2}}],[\"configured\",{\"3\":{\"120\":2}}],[\"configure\",{\"3\":{\"15\":2,\"19\":1,\"70\":1,\"146\":1,\"158\":3}}],[\"configs\",{\"3\":{\"13\":5}}],[\"config\",{\"3\":{\"13\":2,\"14\":1,\"15\":2,\"26\":2,\"41\":3,\"93\":2,\"97\":2,\"101\":3,\"105\":1,\"148\":1}}],[\"conf\",{\"3\":{\"11\":1}}],[\"communicate\",{\"3\":{\"99\":1}}],[\"commands\",{\"3\":{\"97\":1,\"98\":1}}],[\"command\",{\"3\":{\"29\":3,\"30\":4,\"65\":1,\"92\":1,\"94\":1,\"97\":1,\"98\":4,\"99\":1,\"146\":3,\"148\":1}}],[\"component\",{\"3\":{\"161\":2}}],[\"components\",{\"3\":{\"92\":1}}],[\"completed\",{\"3\":{\"148\":1,\"161\":2}}],[\"compliant\",{\"3\":{\"95\":1}}],[\"computer\",{\"3\":{\"72\":2}}],[\"compiling\",{\"3\":{\"56\":1}}],[\"compile\",{\"3\":{\"38\":4,\"99\":1}}],[\"com\",{\"3\":{\"9\":1,\"10\":2,\"11\":1,\"12\":1,\"14\":1,\"44\":1,\"62\":2,\"63\":1,\"65\":1,\"70\":1,\"97\":2,\"101\":1}}],[\"rfc\",{\"3\":{\"161\":4}}],[\"rsyslog\",{\"3\":{\"122\":2}}],[\"rsa\",{\"3\":{\"23\":1,\"25\":1}}],[\"rsa为私钥\",{\"3\":{\"23\":1}}],[\"rotate\",{\"3\":{\"118\":3,\"119\":2}}],[\"rotated\",{\"3\":{\"117\":2,\"118\":1}}],[\"rotating\",{\"3\":{\"117\":1}}],[\"rotation\",{\"3\":{\"117\":1,\"118\":7}}],[\"root\",{\"3\":{\"16\":2,\"71\":2}}],[\"ran\",{\"3\":{\"146\":1}}],[\"range\",{\"3\":{\"63\":1}}],[\"rar\",{\"0\":{\"137\":1},\"2\":{\"137\":1}}],[\"race\",{\"3\":{\"100\":1}}],[\"raw\",{\"3\":{\"97\":2}}],[\"rgbd\",{\"3\":{\"61\":1}}],[\"r\",{\"3\":{\"17\":1}}],[\"redirectport=\",{\"3\":{\"161\":1}}],[\"redirecttestoutputtofile>\",{\"3\":{\"146\":2}}],[\"reuseforks>\",{\"3\":{\"146\":1}}],[\"refer\",{\"3\":{\"146\":2}}],[\"reference\",{\"3\":{\"32\":1,\"70\":1,\"71\":1}}],[\"resolvable\",{\"3\":{\"161\":1}}],[\"resourceutils\",{\"3\":{\"161\":1}}],[\"resourceloader\",{\"3\":{\"161\":7}}],[\"resourceloaderaware\",{\"3\":{\"152\":1,\"155\":1,\"157\":1}}],[\"resource\",{\"3\":{\"146\":1,\"161\":1}}],[\"restarted\",{\"3\":{\"124\":1}}],[\"restart\",{\"3\":{\"121\":6}}],[\"restarting\",{\"3\":{\"121\":1}}],[\"results\",{\"3\":{\"146\":1}}],[\"result\",{\"3\":{\"118\":2}}],[\"recent\",{\"3\":{\"120\":1}}],[\"recommend\",{\"3\":{\"71\":1}}],[\"recommended\",{\"0\":{\"124\":1},\"2\":{\"124\":1},\"3\":{\"29\":1,\"30\":1,\"146\":1}}],[\"renamed\",{\"3\":{\"118\":1}}],[\"rewind\",{\"3\":{\"118\":1}}],[\"reaches\",{\"3\":{\"118\":1,\"119\":1}}],[\"read\",{\"3\":{\"101\":1}}],[\"really\",{\"3\":{\"29\":1}}],[\"relaxedquerychars=\",{\"3\":{\"161\":1}}],[\"relaxedquerychars\",{\"3\":{\"161\":1}}],[\"relaxedpathchars=\",{\"3\":{\"161\":1}}],[\"relaxedpathchars\",{\"3\":{\"161\":1}}],[\"relativefile\",{\"3\":{\"67\":1}}],[\"release\",{\"3\":{\"65\":4,\"99\":2}}],[\"reload\",{\"3\":{\"14\":1}}],[\"requires\",{\"3\":{\"117\":1}}],[\"required相似\",{\"3\":{\"47\":1}}],[\"required来指定当前工程所使用的cmake版本\",{\"3\":{\"47\":1}}],[\"required\",{\"3\":{\"47\":1,\"50\":2,\"51\":1,\"61\":1}}],[\"request\",{\"3\":{\"63\":1,\"65\":2,\"161\":1}}],[\"registrationbean\",{\"3\":{\"158\":2}}],[\"registration\",{\"3\":{\"103\":1,\"158\":14}}],[\"registry\",{\"3\":{\"71\":1,\"92\":3,\"93\":6,\"101\":5}}],[\"registered\",{\"3\":{\"158\":3}}],[\"registerenvironmentbeans\",{\"3\":{\"157\":1}}],[\"registerapplicationscope\",{\"3\":{\"157\":1}}],[\"registersingleton\",{\"3\":{\"151\":2}}],[\"register\",{\"3\":{\"103\":1,\"158\":2}}],[\"reg\",{\"3\":{\"61\":1}}],[\"regular\",{\"3\":{\"55\":1,\"71\":1}}],[\"rebuild\",{\"3\":{\"56\":1}}],[\"return\",{\"3\":{\"38\":1,\"65\":1,\"66\":1,\"118\":3,\"148\":1,\"149\":7,\"152\":1,\"156\":1,\"157\":3,\"158\":5,\"161\":1}}],[\"reproduced\",{\"3\":{\"146\":1}}],[\"reportformat>\",{\"3\":{\"146\":1}}],[\"reports\",{\"3\":{\"146\":2}}],[\"reported\",{\"3\":{\"146\":4}}],[\"reporting>\",{\"3\":{\"145\":1}}],[\"report\",{\"0\":{\"145\":1},\"2\":{\"145\":1},\"3\":{\"142\":1,\"145\":9,\"146\":31}}],[\"repository\",{\"3\":{\"97\":1}}],[\"repartitioning\",{\"3\":{\"29\":1,\"30\":1}}],[\"replication\",{\"3\":{\"14\":1}}],[\"removed\",{\"3\":{\"118\":1}}],[\"remote\",{\"3\":{\"9\":5,\"62\":5,\"99\":2}}],[\"remain\",{\"3\":{\"29\":1,\"30\":1}}],[\"rule\",{\"3\":{\"13\":1}}],[\"rules\",{\"3\":{\"13\":4}}],[\"runworker\",{\"3\":{\"161\":1}}],[\"run方法\",{\"3\":{\"150\":1}}],[\"runjdb\",{\"3\":{\"148\":1}}],[\"runner\",{\"1\":{\"103\":1,\"104\":1,\"105\":1,\"106\":1},\"3\":{\"103\":1,\"104\":1,\"105\":1,\"106\":1}}],[\"running\",{\"0\":{\"110\":1},\"2\":{\"110\":1},\"3\":{\"97\":1,\"98\":1}}],[\"runs\",{\"3\":{\"92\":1,\"97\":1}}],[\"runtime\",{\"3\":{\"59\":1}}],[\"run\",{\"3\":{\"11\":2,\"35\":3,\"97\":2,\"98\":1,\"99\":4,\"146\":6,\"161\":6}}],[\"rm\",{\"3\":{\"9\":1}}],[\"1ae5788d\",{\"0\":{\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1}}],[\"1>\",{\"3\":{\"118\":1}}],[\"1+2+3+4+5\",{\"3\":{\"63\":1,\"65\":1}}],[\"1708\",{\"3\":{\"161\":1}}],[\"17\",{\"3\":{\"61\":1,\"146\":16}}],[\"14\",{\"0\":{\"60\":1},\"2\":{\"60\":1},\"3\":{\"60\":1,\"94\":3,\"99\":2,\"146\":16}}],[\"13\",{\"0\":{\"59\":1},\"2\":{\"59\":1},\"3\":{\"59\":1}}],[\"1版本为例\",{\"3\":{\"44\":1}}],[\"19\",{\"3\":{\"146\":2}}],[\"190004b0\",{\"0\":{\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1}}],[\"192\",{\"3\":{\"10\":4,\"11\":2,\"13\":3,\"16\":2,\"25\":2,\"27\":2,\"103\":1}}],[\"1191\",{\"3\":{\"161\":1}}],[\"112\",{\"3\":{\"161\":1}}],[\"11239424\",{\"3\":{\"31\":1}}],[\"1184\",{\"3\":{\"161\":1}}],[\"1183\",{\"3\":{\"146\":1}}],[\"11\",{\"0\":{\"57\":1},\"2\":{\"57\":1},\"3\":{\"32\":1,\"57\":1,\"99\":1}}],[\"1m\",{\"3\":{\"30\":1}}],[\"16ccd7d7\",{\"0\":{\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1}}],[\"16\",{\"3\":{\"35\":1,\"60\":1,\"94\":1,\"99\":2,\"146\":2}}],[\"1605632\",{\"3\":{\"31\":1}}],[\"163840\",{\"3\":{\"31\":1}}],[\"167772160\",{\"3\":{\"30\":1}}],[\"167772126\",{\"3\":{\"29\":1,\"30\":4}}],[\"167772159\",{\"3\":{\"29\":1,\"30\":1}}],[\"168\",{\"3\":{\"10\":4,\"11\":2,\"13\":3,\"16\":2,\"25\":2,\"27\":2,\"103\":1}}],[\"126\",{\"3\":{\"161\":1}}],[\"12\",{\"0\":{\"58\":1},\"2\":{\"58\":1},\"3\":{\"58\":1,\"94\":1,\"99\":4}}],[\"125831135\",{\"3\":{\"29\":2,\"30\":1}}],[\"128\",{\"3\":{\"25\":2,\"30\":1}}],[\"127\",{\"3\":{\"14\":2}}],[\"1011\",{\"3\":{\"146\":1}}],[\"100\",{\"3\":{\"56\":1}}],[\"1000\",{\"3\":{\"35\":1}}],[\"10\",{\"0\":{\"56\":1},\"2\":{\"56\":1},\"3\":{\"17\":1,\"35\":1,\"47\":1,\"50\":2,\"51\":1,\"56\":1,\"146\":16}}],[\"109\",{\"3\":{\"16\":2}}],[\"10s\",{\"3\":{\"13\":1}}],[\"15728640\",{\"3\":{\"31\":1,\"32\":1}}],[\"15\",{\"3\":{\"13\":2,\"60\":1,\"94\":1,\"146\":1}}],[\"15s\",{\"3\":{\"13\":2}}],[\"18\",{\"3\":{\"30\":1,\"70\":1,\"94\":2}}],[\"188\",{\"3\":{\"10\":2,\"25\":2,\"27\":2}}],[\"184f4da6\",{\"0\":{\"0\":1,\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1}}],[\"1\",{\"0\":{\"7\":1,\"38\":2,\"39\":1,\"40\":1,\"41\":2,\"42\":1,\"44\":1,\"47\":1,\"151\":1,\"154\":1},\"2\":{\"38\":2,\"39\":1,\"40\":1,\"41\":2,\"42\":1,\"44\":1,\"47\":1,\"151\":1,\"154\":1},\"3\":{\"10\":2,\"12\":1,\"13\":2,\"14\":2,\"27\":2,\"29\":1,\"30\":2,\"31\":1,\"32\":2,\"35\":9,\"44\":1,\"47\":1,\"48\":1,\"55\":1,\"56\":1,\"57\":1,\"62\":1,\"94\":3,\"99\":3,\"117\":3,\"118\":4,\"119\":1,\"120\":1,\"121\":3,\"145\":1,\"146\":6,\"148\":1,\"161\":7}}],[\"拥有技能\",{\"0\":{\"3\":1},\"2\":{\"3\":1}}],[\"volatile\",{\"3\":{\"148\":1}}],[\"void\",{\"3\":{\"118\":2,\"148\":10,\"149\":1,\"151\":2,\"152\":3,\"155\":2,\"156\":2,\"157\":5,\"158\":3,\"161\":2}}],[\"vm\",{\"3\":{\"146\":4}}],[\"vmware\",{\"3\":{\"30\":1}}],[\"ve\",{\"3\":{\"102\":1}}],[\"verifymojo\",{\"3\":{\"144\":1}}],[\"verify\",{\"3\":{\"144\":2}}],[\"verifying\",{\"3\":{\"98\":1}}],[\"version>\",{\"3\":{\"143\":1,\"144\":1,\"145\":1,\"146\":3}}],[\"versions\",{\"3\":{\"94\":1,\"99\":3,\"146\":1}}],[\"version是这个函数的一个特殊关键字\",{\"3\":{\"47\":1}}],[\"version是版本号\",{\"3\":{\"47\":1}}],[\"version\",{\"3\":{\"19\":1,\"44\":1,\"47\":2,\"48\":1,\"50\":2,\"51\":1,\"55\":2,\"63\":1,\"65\":2,\"95\":1,\"99\":11,\"143\":1,\"146\":5}}],[\"v0\",{\"3\":{\"97\":2}}],[\"v6\",{\"3\":{\"94\":2}}],[\"v1\",{\"3\":{\"100\":2}}],[\"v12\",{\"3\":{\"94\":2}}],[\"v14\",{\"3\":{\"94\":2}}],[\"v16\",{\"3\":{\"94\":2}}],[\"v7\",{\"3\":{\"94\":1}}],[\"valueof\",{\"3\":{\"161\":1}}],[\"valve\",{\"3\":{\"161\":5}}],[\"valves\",{\"3\":{\"161\":1}}],[\"valid\",{\"3\":{\"56\":1,\"161\":2}}],[\"variable\",{\"3\":{\"55\":1,\"57\":2,\"100\":1}}],[\"var\",{\"3\":{\"53\":1,\"58\":1,\"146\":7}}],[\"vscode先添加tasks\",{\"3\":{\"65\":1}}],[\"vscode下launch\",{\"3\":{\"63\":1}}],[\"vscode\",{\"3\":{\"45\":1,\"62\":6,\"67\":4}}],[\"vscode远程插件指定私钥\",{\"0\":{\"25\":1},\"2\":{\"25\":1}}],[\"vs\",{\"0\":{\"67\":1},\"2\":{\"67\":1},\"3\":{\"45\":1,\"62\":2}}],[\"v3\",{\"3\":{\"44\":1}}],[\"vg\",{\"3\":{\"35\":1}}],[\"via\",{\"3\":{\"94\":1}}],[\"visibility\",{\"3\":{\"120\":1}}],[\"vision\",{\"3\":{\"72\":2}}],[\"visualstudio\",{\"3\":{\"62\":1}}],[\"visual\",{\"0\":{\"62\":1},\"2\":{\"62\":1},\"3\":{\"62\":1}}],[\"viz\",{\"3\":{\"61\":1}}],[\"videostab\",{\"3\":{\"61\":1}}],[\"videoio\",{\"3\":{\"61\":1}}],[\"video\",{\"3\":{\"61\":1}}],[\"virtual\",{\"3\":{\"30\":1}}],[\"vim\",{\"3\":{\"24\":1,\"26\":1,\"34\":1}}],[\"v\",{\"0\":{\"0\":1,\"1\":1,\"2\":1,\"3\":1,\"4\":1,\"5\":1,\"6\":1,\"7\":1,\"8\":1,\"9\":1,\"10\":1,\"11\":1,\"12\":1,\"13\":1,\"14\":1,\"15\":1,\"16\":1,\"17\":1,\"18\":1,\"19\":1,\"20\":1,\"21\":1,\"22\":1,\"23\":1,\"24\":1,\"25\":1,\"26\":1,\"27\":1,\"28\":1,\"29\":1,\"30\":1,\"31\":1,\"32\":1,\"33\":1,\"34\":1,\"35\":1,\"36\":1,\"37\":1,\"38\":1,\"39\":1,\"40\":1,\"41\":1,\"42\":1,\"43\":1,\"44\":1,\"45\":1,\"46\":1,\"47\":1,\"48\":1,\"49\":1,\"50\":1,\"51\":1,\"52\":1,\"53\":1,\"54\":1,\"55\":1,\"56\":1,\"57\":1,\"58\":1,\"59\":1,\"60\":1,\"61\":1,\"62\":1,\"63\":1,\"64\":1,\"65\":1,\"66\":1,\"67\":1,\"68\":1,\"69\":1,\"70\":1,\"71\":1,\"72\":1,\"73\":1,\"74\":1,\"75\":1,\"76\":1,\"77\":1,\"78\":1,\"79\":1,\"80\":1,\"81\":1,\"82\":1,\"83\":1,\"84\":1,\"85\":1,\"86\":1,\"87\":1,\"88\":1,\"89\":1,\"90\":1,\"91\":1,\"92\":1,\"93\":1,\"94\":1,\"95\":1,\"96\":1,\"97\":1,\"98\":1,\"99\":1,\"100\":1,\"101\":1,\"102\":1,\"103\":1,\"104\":1,\"105\":1,\"106\":1,\"107\":1,\"108\":1,\"109\":1,\"110\":1,\"111\":1,\"112\":1,\"113\":1,\"114\":1,\"115\":1,\"116\":1,\"117\":1,\"118\":1,\"119\":1,\"120\":1,\"121\":1,\"122\":1,\"123\":1,\"124\":1,\"125\":1,\"126\":1,\"127\":1,\"128\":1,\"129\":1,\"130\":1,\"131\":1,\"132\":1,\"133\":1,\"134\":1,\"135\":1,\"136\":1,\"137\":1,\"138\":1,\"139\":1,\"140\":1,\"141\":1,\"142\":1,\"143\":1,\"144\":1,\"145\":1,\"146\":1,\"147\":1,\"148\":1,\"149\":1,\"150\":1,\"151\":1,\"152\":1,\"153\":1,\"154\":1,\"155\":1,\"156\":1,\"157\":1,\"158\":1,\"159\":1,\"160\":1,\"161\":1},\"3\":{\"9\":1,\"11\":1,\"17\":2,\"94\":3,\"98\":1}}]],\"serializationVersion\":2}}")).map(([e,t])=>[e,At(t,{fields:["title","header","text","customFields"],storeFields:["title","header","text","customFields"]})]));self.onmessage=({data:{query:e,locale:t,options:s}})=>{self.postMessage(zt(e,Ct[t],s))};
//# sourceMappingURL=index.js.map
